/* SMCStub.h
   Generated by gSOAP 2.8.0 from SMC.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   The generated code is released under one of the following licenses:
   GPL OR Genivia's license for commercial use.
*/

#ifndef SMCStub_H
#define SMCStub_H
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace SMC {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_SMC_camera__uri
#define SOAP_TYPE_SMC_camera__uri (7)
/* camera:uri */
struct camera__uri
{
public:
	std::string streamURI;	/* required element of type xsd:string */
	std::string uuid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_camera__info
#define SOAP_TYPE_SMC_camera__info (9)
/* camera:info */
struct camera__info
{
public:
	std::string Info_type;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
	std::string Info;	/* required element of type xsd:string */
	std::string uuid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__coreStationResponse
#define SOAP_TYPE_SMC_agent__coreStationResponse (12)
/* agent:coreStationResponse */
struct agent__coreStationResponse
{
public:
	std::string message;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__coreStation
#define SOAP_TYPE_SMC_agent__coreStation (13)
/* agent:coreStation */
struct agent__coreStation
{
public:
	std::string command;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__addCameraResponse
#define SOAP_TYPE_SMC_agent__addCameraResponse (15)
/* agent:addCameraResponse */
struct agent__addCameraResponse
{
public:
	std::string message;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__addCamera
#define SOAP_TYPE_SMC_agent__addCamera (16)
/* agent:addCamera */
struct agent__addCamera
{
public:
	std::string uuid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__removeCameraResponse
#define SOAP_TYPE_SMC_agent__removeCameraResponse (18)
/* agent:removeCameraResponse */
struct agent__removeCameraResponse
{
public:
	std::string message;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__removeCamera
#define SOAP_TYPE_SMC_agent__removeCamera (19)
/* agent:removeCamera */
struct agent__removeCamera
{
public:
	std::string uuid;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__setCameraInfoResponse
#define SOAP_TYPE_SMC_agent__setCameraInfoResponse (22)
/* agent:setCameraInfoResponse */
struct agent__setCameraInfoResponse
{
public:
	std::string message;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__setCameraInfo
#define SOAP_TYPE_SMC_agent__setCameraInfo (23)
/* agent:setCameraInfo */
struct agent__setCameraInfo
{
public:
	struct camera__info *_info;	/* optional element of type camera:info */
};
#endif

#ifndef SOAP_TYPE_SMC_agent__setCameraURI
#define SOAP_TYPE_SMC_agent__setCameraURI (27)
/* agent:setCameraURI */
struct agent__setCameraURI
{
public:
	struct camera__uri *_info;	/* optional element of type camera:uri */
};
#endif

#ifndef SOAP_TYPE_SMC_server__getinfoResponse
#define SOAP_TYPE_SMC_server__getinfoResponse (29)
/* server:getinfoResponse */
struct server__getinfoResponse
{
public:
	std::string message;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_server__getinfo
#define SOAP_TYPE_SMC_server__getinfo (30)
/* server:getinfo */
struct server__getinfo
{
public:
	std::string command;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_server__setCameraInfoResponse
#define SOAP_TYPE_SMC_server__setCameraInfoResponse (32)
/* server:setCameraInfoResponse */
struct server__setCameraInfoResponse
{
public:
	std::string message;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_server__setCameraInfo
#define SOAP_TYPE_SMC_server__setCameraInfo (33)
/* server:setCameraInfo */
struct server__setCameraInfo
{
public:
	struct camera__info *_info;	/* optional element of type camera:info */
};
#endif

#ifndef SOAP_TYPE_SMC_SOAP_ENV__Header
#define SOAP_TYPE_SMC_SOAP_ENV__Header (34)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SMC_SOAP_ENV__Code
#define SOAP_TYPE_SMC_SOAP_ENV__Code (35)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SMC_SOAP_ENV__Detail
#define SOAP_TYPE_SMC_SOAP_ENV__Detail (37)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SMC_SOAP_ENV__Reason
#define SOAP_TYPE_SMC_SOAP_ENV__Reason (40)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SMC_SOAP_ENV__Fault
#define SOAP_TYPE_SMC_SOAP_ENV__Fault (41)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_SMC__QName
#define SOAP_TYPE_SMC__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_SMC__XML
#define SOAP_TYPE_SMC__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace SMC


#endif

/* End of SMCStub.h */
