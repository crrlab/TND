# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makerules.
# This file is part of AutoTroll.
# Copyright (C) 2006, 2007, 2009, 2010  Benoit Sigoure.
#
# AutoTroll is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
# USA.
#
# In addition, as a special exception, the copyright holders of AutoTroll
# give you unlimited permission to copy, distribute and modify the configure
# scripts that are the output of Autoconf when processing the macros of
# AutoTroll.  You need not follow the terms of the GNU General Public License
# when using or distributing such scripts, even though portions of the text of
# AutoTroll appear in them. The GNU General Public License (GPL) does govern
# all other use of the material that constitutes AutoTroll.
#
# This special exception to the GPL applies to versions of AutoTroll
# released by the copyright holders of AutoTroll.  Note that people who make
# modified versions of AutoTroll are not obligated to grant this special
# exception for their modified versions; it is their choice whether to do so.
# The GNU General Public License gives permission to release a modified version
# without this exception; this exception also makes it possible to release a
# modified version which carries forward this exception.

VPATH = /home/smc/files/Eclipse.Projects/StreamingMediaCenter/src
pkgdatadir = $(datadir)/streamingmediacenter
pkgincludedir = $(includedir)/streamingmediacenter
pkglibdir = $(libdir)/streamingmediacenter
pkglibexecdir = $(libexecdir)/streamingmediacenter
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/m4/autotroll.mk
bin_PROGRAMS = smc-cored$(EXEEXT) smc-storaged$(EXEEXT) \
	smc-hubd$(EXEEXT) smc-manager$(EXEEXT) frontend$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
	$(top_srcdir)/m4/autotroll.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = frontend-Request.$(OBJEXT) \
	frontend-DiscoveryRequest.$(OBJEXT) \
	frontend-SMCagentService.$(OBJEXT) \
	frontend-SMCserverProxy.$(OBJEXT) frontend-SMCC.$(OBJEXT) \
	frontend-Thread.$(OBJEXT) frontend-SoapServer.$(OBJEXT) \
	frontend-Hello.$(OBJEXT) frontend-Bye.$(OBJEXT)
am__objects_2 = frontend-Subject.$(OBJEXT) frontend-Observer.$(OBJEXT) \
	frontend-Command.$(OBJEXT) frontend-RemoteProxy.$(OBJEXT) \
	frontend-CoreServerProxy.$(OBJEXT)
am_frontend_OBJECTS = frontend-main-frontend.$(OBJEXT) \
	$(am__objects_1) frontend-Frontend.$(OBJEXT) \
	frontend-Frontend.moc.$(OBJEXT) \
	frontend-qvideowidget.$(OBJEXT) \
	frontend-qvideowidget.moc.$(OBJEXT) \
	frontend-Application.$(OBJEXT) \
	frontend-DeviceCollection.$(OBJEXT) \
	frontend-DeviceContainer.$(OBJEXT) \
	frontend-DeviceCollection.moc.$(OBJEXT) \
	frontend-DeviceContainer.moc.$(OBJEXT) \
	frontend-restoreui.moc.$(OBJEXT) frontend-restoreui.$(OBJEXT) \
	$(am__objects_2)
frontend_OBJECTS = $(am_frontend_OBJECTS)
am__DEPENDENCIES_1 =
frontend_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(ONVIFLIB)/libonvifdevicemgmt.la $(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifhello.la
frontend_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(frontend_CXXFLAGS) \
	$(CXXFLAGS) $(frontend_LDFLAGS) $(LDFLAGS) -o $@
am__objects_3 = smc_cored-GetDeviceInformation.$(OBJEXT) \
	smc_cored-GetCapabilities.$(OBJEXT) \
	smc_cored-SystemReboot.$(OBJEXT) \
	smc_cored-GetVideoSources.$(OBJEXT) \
	smc_cored-GetProfiles.$(OBJEXT) \
	smc_cored-GetStreamUri.$(OBJEXT) smc_cored-Hello.$(OBJEXT) \
	smc_cored-Bye.$(OBJEXT) smc_cored-SetCameraUri.$(OBJEXT) \
	smc_cored-SetCameraInfo.$(OBJEXT) \
	smc_cored-coreStation.$(OBJEXT)
am__objects_4 = smc_cored-AgentRequest.$(OBJEXT) \
	smc_cored-DiscoveryRequest.$(OBJEXT) \
	smc_cored-Request.$(OBJEXT) smc_cored-DeviceRequest.$(OBJEXT) \
	smc_cored-MediaRequest.$(OBJEXT) \
	smc_cored-NetworkVideoTransmitter.$(OBJEXT) \
	smc_cored-Profile.$(OBJEXT) $(am__objects_3)
am__objects_5 = smc_cored-Application.$(OBJEXT) \
	smc_cored-CoreServer.$(OBJEXT)
am__objects_6 = smc_cored-Subject.$(OBJEXT) \
	smc_cored-Observer.$(OBJEXT) smc_cored-Command.$(OBJEXT) \
	smc_cored-Thread.$(OBJEXT) smc_cored-AgentProxy.$(OBJEXT) \
	smc_cored-DeviceProxy.$(OBJEXT) \
	smc_cored-RemoteProxy.$(OBJEXT) \
	smc_cored-FrontendProxy.$(OBJEXT) smc_cored-HubProxy.$(OBJEXT) \
	smc_cored-ManagerProxy.$(OBJEXT) \
	smc_cored-StorageProxy.$(OBJEXT)
am__objects_7 = smc_cored-SMCserverService.$(OBJEXT) \
	smc_cored-SMCagentProxy.$(OBJEXT) smc_cored-SMCC.$(OBJEXT) \
	smc_cored-SoapServer.$(OBJEXT) \
	smc_cored-DiscoveryServer.$(OBJEXT)
am_smc_cored_OBJECTS = smc_cored-main.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7)
smc_cored_OBJECTS = $(am_smc_cored_OBJECTS)
smc_cored_DEPENDENCIES = $(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifremotediscovery.la
smc_cored_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(smc_cored_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_8 = smc_hubd-Stream.$(OBJEXT) \
	smc_hubd-VideoCamStorage.$(OBJEXT) \
	smc_hubd-VideoCamUDP.$(OBJEXT) smc_hubd-VideoOutput.$(OBJEXT) \
	smc_hubd-Streaming.$(OBJEXT) smc_hubd-StorageFile.$(OBJEXT) \
	smc_hubd-RTSPserver.$(OBJEXT) \
	smc_hubd-RTSPserverManager.$(OBJEXT) \
	smc_hubd-RTSPserverGate.$(OBJEXT) \
	smc_hubd-RTSPserverStorage.$(OBJEXT)
am__objects_9 = smc_hubd-Request.$(OBJEXT) \
	smc_hubd-DiscoveryRequest.$(OBJEXT) \
	smc_hubd-SMCagentService.$(OBJEXT) \
	smc_hubd-SMCserverProxy.$(OBJEXT) smc_hubd-SMCC.$(OBJEXT) \
	smc_hubd-Thread.$(OBJEXT) smc_hubd-SoapServer.$(OBJEXT) \
	smc_hubd-Hello.$(OBJEXT) smc_hubd-Bye.$(OBJEXT)
am__objects_10 = smc_hubd-Subject.$(OBJEXT) \
	smc_hubd-Observer.$(OBJEXT) smc_hubd-Command.$(OBJEXT) \
	smc_hubd-RemoteProxy.$(OBJEXT) \
	smc_hubd-CoreServerProxy.$(OBJEXT)
am_smc_hubd_OBJECTS = smc_hubd-main-hub.$(OBJEXT) $(am__objects_8) \
	$(am__objects_9) smc_hubd-Application.$(OBJEXT) \
	smc_hubd-HubAgent.$(OBJEXT) $(am__objects_10)
smc_hubd_OBJECTS = $(am_smc_hubd_OBJECTS)
smc_hubd_DEPENDENCIES = $(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la $(ONVIFLIB)/libonvifhello.la
smc_hubd_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(smc_hubd_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_11 = smc_manager-Stream.$(OBJEXT) \
	smc_manager-VideoCamStorage.$(OBJEXT) \
	smc_manager-VideoCamUDP.$(OBJEXT) \
	smc_manager-VideoOutput.$(OBJEXT) \
	smc_manager-Streaming.$(OBJEXT) \
	smc_manager-StorageFile.$(OBJEXT) \
	smc_manager-RTSPserver.$(OBJEXT) \
	smc_manager-RTSPserverManager.$(OBJEXT) \
	smc_manager-RTSPserverGate.$(OBJEXT) \
	smc_manager-RTSPserverStorage.$(OBJEXT)
am__objects_12 = smc_manager-Request.$(OBJEXT) \
	smc_manager-DiscoveryRequest.$(OBJEXT) \
	smc_manager-SMCagentService.$(OBJEXT) \
	smc_manager-SMCserverProxy.$(OBJEXT) \
	smc_manager-SMCC.$(OBJEXT) smc_manager-Thread.$(OBJEXT) \
	smc_manager-SoapServer.$(OBJEXT) smc_manager-Hello.$(OBJEXT) \
	smc_manager-Bye.$(OBJEXT)
am__objects_13 = smc_manager-Subject.$(OBJEXT) \
	smc_manager-Observer.$(OBJEXT) smc_manager-Command.$(OBJEXT) \
	smc_manager-RemoteProxy.$(OBJEXT) \
	smc_manager-CoreServerProxy.$(OBJEXT)
am_smc_manager_OBJECTS = smc_manager-main-manager.$(OBJEXT) \
	$(am__objects_11) $(am__objects_12) \
	smc_manager-Application.$(OBJEXT) \
	smc_manager-ManagerAgent.$(OBJEXT) $(am__objects_13)
smc_manager_OBJECTS = $(am_smc_manager_OBJECTS)
smc_manager_DEPENDENCIES = $(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la $(ONVIFLIB)/libonvifhello.la
smc_manager_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(smc_manager_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_14 = smc_storaged-Stream.$(OBJEXT) \
	smc_storaged-VideoCamStorage.$(OBJEXT) \
	smc_storaged-VideoCamUDP.$(OBJEXT) \
	smc_storaged-VideoOutput.$(OBJEXT) \
	smc_storaged-Streaming.$(OBJEXT) \
	smc_storaged-StorageFile.$(OBJEXT) \
	smc_storaged-RTSPserver.$(OBJEXT) \
	smc_storaged-RTSPserverManager.$(OBJEXT) \
	smc_storaged-RTSPserverGate.$(OBJEXT) \
	smc_storaged-RTSPserverStorage.$(OBJEXT)
am__objects_15 = smc_storaged-Request.$(OBJEXT) \
	smc_storaged-DiscoveryRequest.$(OBJEXT) \
	smc_storaged-SMCagentService.$(OBJEXT) \
	smc_storaged-SMCserverProxy.$(OBJEXT) \
	smc_storaged-SMCC.$(OBJEXT) smc_storaged-Thread.$(OBJEXT) \
	smc_storaged-SoapServer.$(OBJEXT) smc_storaged-Hello.$(OBJEXT) \
	smc_storaged-Bye.$(OBJEXT)
am__objects_16 = smc_storaged-Subject.$(OBJEXT) \
	smc_storaged-Observer.$(OBJEXT) smc_storaged-Command.$(OBJEXT) \
	smc_storaged-RemoteProxy.$(OBJEXT) \
	smc_storaged-CoreServerProxy.$(OBJEXT)
am_smc_storaged_OBJECTS = smc_storaged-main-storage.$(OBJEXT) \
	$(am__objects_14) $(am__objects_15) \
	smc_storaged-Application.$(OBJEXT) \
	smc_storaged-StorageAgent.$(OBJEXT) $(am__objects_16)
smc_storaged_OBJECTS = $(am_smc_storaged_OBJECTS)
smc_storaged_DEPENDENCIES = $(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la $(ONVIFLIB)/libonvifhello.la
smc_storaged_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(smc_storaged_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(frontend_SOURCES) $(smc_cored_SOURCES) $(smc_hubd_SOURCES) \
	$(smc_manager_SOURCES) $(smc_storaged_SOURCES)
DIST_SOURCES = $(frontend_SOURCES) $(smc_cored_SOURCES) \
	$(smc_hubd_SOURCES) $(smc_manager_SOURCES) \
	$(smc_storaged_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/missing --run autoconf
AUTOHEADER = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/missing --run autoheader
AUTOMAKE = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/missing --run automake-1.11
AWK = mawk
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_LDFLAGS = -L/usr/lib
BOOST_SYSTEM_LIB = -lboost_system-mt
BOOST_THREAD_LIB = -lboost_thread-mt
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = doxygen.cfg
DX_DOCDIR = doc
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='/home/smc/files/Eclipse.Projects/StreamingMediaCenter' PROJECT='StreamingMediaCenter' DOCDIR='doc' VERSION='1.0' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_DX_CURRENT_FEATURE = 
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = StreamingMediaCenter
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MOC = /usr/bin/moc
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = streamingmediacenter
PACKAGE_BUGREPORT = mario.giustiniani@posix-shell.com
PACKAGE_NAME = StreamingMediaCenter
PACKAGE_STRING = StreamingMediaCenter 1.0
PACKAGE_TARNAME = streamingmediacenter
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
QMAKE = /usr/bin/qmake
QT_CFLAGS = -pipe -O2 -Wall -W -D_REENTRANT $(QT_DEFINES)
QT_CPPFLAGS = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
QT_CXXFLAGS = -pipe -O2 -Wall -W -D_REENTRANT $(QT_DEFINES)
QT_DEFINES = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
QT_INCPATH = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
QT_LDFLAGS = -Wl,-O1
QT_LFLAGS = -Wl,-O1
QT_LIBS = -L/usr/lib -lQtGui -lQtCore -lpthread 
QT_PATH = /usr/bin
QT_VERSION_MAJOR = 4
RANLIB = ranlib
RCC = /usr/bin/rcc
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
UIC = /usr/bin/uic
VERSION = 1.0
abs_builddir = /home/smc/files/Eclipse.Projects/StreamingMediaCenter/build/src
abs_srcdir = /home/smc/files/Eclipse.Projects/StreamingMediaCenter/src
abs_top_builddir = /home/smc/files/Eclipse.Projects/StreamingMediaCenter/build
abs_top_srcdir = /home/smc/files/Eclipse.Projects/StreamingMediaCenter
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/smc/files/Eclipse.Projects/StreamingMediaCenter/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /home/smc/files/Eclipse.Projects/StreamingMediaCenter/src
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = /home/smc/files/Eclipse.Projects/StreamingMediaCenter
ONVIFLIB = $(top_srcdir)/libonvif
#DEVICE=$(ONVIFLIB)/libonvifdevicemgmt.la
#MEDIA=$(ONVIFLIB)/libonvifmedia.la
#REMOTE=$(ONVIFLIB)/libonvifremotediscovery.la
#ORE = 
onvifdir = $(pkgdatadir)/onvif
wsdl = $(top_srcdir)/libonvif

# See autotroll.m4 :)
SUFFIXES = .moc.cpp .moc.cc .moc.cxx .moc.C .h .hh .hpp \
           .ui .ui.h .ui.hh .ui.hpp \
           .qrc .qrc.cpp .qrc.cc .qrc.cxx .qrc.C

DISTCLEANFILES = $(BUILT_SOURCES)
ACLOCAL_AMFLAGS = -I m4
SOAPINCLUDE = /usr/local/share/gsoap:/usr/local/share/gsoap/import:/usr/local/share/gsoap/custom
ONVIF_OPTIONS = -i  -C  -x
SOAP = /usr/local/bin/soapcpp2
LIBONVIF = $(top_srcdir)/libonvif
soapdir = $(top_srcdir)/libgsoap
remotedir = $(wsdl)/Remote
devicedir = $(wsdl)/Device
mediadir = $(wsdl)/Media
imagingdir = $(wsdl)/Imaging
analyticsdir = $(wsdl)/Analytics
COMMON = $(top_srcdir)/common
INCLUDE = \
	 -I$(ONVIFLIB)/Media -I$(ONVIFLIB)/Device  -I$(ONVIFLIB)/Remote -I$(ONVIFLIB) \
	 -I$(top_srcdir)/src/patterns \
	 -I$(top_srcdir)/src/observers \
	 -I$(top_srcdir)/src/SMC \
	 -I$(top_srcdir)/src/apps 

FLAGS = -DWITH_DOM  -DWITH_OPENSSL  $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB) -luuid
LIBGSTREAMER = `pkg-config --cflags  --libs gstreamer-app-0.10 --libs gstreamer-0.10 --libs gst-rtsp-server-0.10`
PROXY = \
	patterns/Subject.cpp \
	patterns/Observer.cpp \
	patterns/Command.cpp \
	patterns/Thread.cpp \
	observers/AgentProxy.cpp \
	observers/DeviceProxy.cpp \
	observers/RemoteProxy.cpp \
	observers/FrontendProxy.cpp \
	observers/HubProxy.cpp \
	observers/ManagerProxy.cpp \
	observers/StorageProxy.cpp 

AGENTPROXY = patterns/Subject.cpp \
	patterns/Observer.cpp \
	patterns/Command.cpp \
	observers/RemoteProxy.cpp \
	observers/CoreServerProxy.cpp

SMC_SERVER = \
	soap/SMCserverService.cpp \
	soap/SMCagentProxy.cpp \
	soap/SMCC.cpp \
	SMC/SoapServer.cpp \
	SMC/DiscoveryServer.cpp

SMC_AGENT = \
	onvif/Request.cpp \
	onvif/DiscoveryRequest.cpp \
	soap/SMCagentService.cpp \
	soap/SMCserverProxy.cpp \
	soap/SMCC.cpp \
	patterns/Thread.cpp \
	SMC/SoapServer.cpp \
	onvif/Hello.cpp \
	onvif/Bye.cpp 

ONVIFMETHOD = \
	onvif/GetDeviceInformation.cpp \
	onvif/GetCapabilities.cpp \
	onvif/SystemReboot.cpp \
	onvif/GetVideoSources.cpp \
	onvif/GetProfiles.cpp \
	onvif/GetStreamUri.cpp \
	onvif/Hello.cpp \
	onvif/Bye.cpp \
	onvif/SetCameraUri.cpp \
	onvif/SetCameraInfo.cpp \
	onvif/coreStation.cpp

ONVIFSOURCE = \
	onvif/AgentRequest.cpp \
	onvif/DiscoveryRequest.cpp \
	onvif/Request.cpp \
	onvif/DeviceRequest.cpp \
	onvif/MediaRequest.cpp \
	onvif/NetworkVideoTransmitter.cpp \
	onvif/Profile.cpp \
	$(ONVIFMETHOD)

STREAMINGSOURCE = \
	stream/Stream.cpp \
	stream/VideoCamStorage.cpp \
	stream/VideoCamUDP.cpp \
	stream/VideoOutput.cpp \
	stream/Streaming.cpp \
	stream/StorageFile.cpp \
	stream/RTSPserver.cpp \
	stream/RTSPserverManager.cpp \
	stream/RTSPserverGate.cpp \
	stream/RTSPserverStorage.cpp

APPLICATION = \
	apps/Application.cpp \
	apps/CoreServer.cpp

smc_cored_SOURCES = main.cpp \
	$(ONVIFSOURCE) \
	$(APPLICATION) \
	$(PROXY) \
	$(SMC_SERVER)

smc_cored_LDADD = \
	$(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifremotediscovery.la

smc_cored_CXXFLAGS = $(INCLUDE) $(FLAGS) -DCORE_EXCEPTION -DDEBUG $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB) -lpthread
smc_cored_CFLAGS = $(INCLUDE) $(FLAGS)  -lpthread

#discovery_SOURCES =   main-discovery.cpp 
#discovery_LDADD = \
#	$(ONVIFLIB)/libonvifdevicemgmt.la \
#	$(ONVIFLIB)/libonvifmedia.la \
#	$(ONVIFLIB)/libonvifremotediscovery.la
#discovery_CXXFLAGS =  $(FLAGS) -I$(ONVIFLIB)/Remote 
#discovery_CFLAGS =  $(FLAGS) -I$(ONVIFLIB)/Remote 
frontend_SOURCES = main-frontend.cpp \
	$(SMC_AGENT) \
	gui/Frontend.cpp \
	gui/Frontend.h \
	gui/Frontend.moc.cpp \
	gui/qvideowidget.cpp \
	gui/qvideowidget.moc.cpp \
	apps/Application.cpp	\
	gui/DeviceCollection.cpp \
	gui/DeviceContainer.cpp \
	gui/DeviceCollection.moc.cpp \
	gui/DeviceContainer.moc.cpp \
	gui/restoreui.moc.cpp \
	gui/restoreui.cpp \
	$(AGENTPROXY)

frontend_CXXFLAGS = $(INCLUDE)  -lphonon $(QT_CXXFLAGS) $(FLAGS) $(AM_CXXFLAGS) `pkg-config --cflags --libs gstreamer-app-0.10 --libs gstreamer-0.10` -I$(top_srcdir)/src/gui \
	-I$(ONVIFLIB)/Remote  \
	-I$(top_srcdir)/src/patterns \
	-I$(top_srcdir)/src/observers \
	-I$(top_srcdir)/src/stream -lgstinterfaces-0.10

frontend_CPPFLAGS = $(INCLUDE)  $(QT_CPPFLAGS) $(AM_CPPFLAGS) 
frontend_LDFLAGS = $(QT_LDFLAGS) $(LDFLAGS)
frontend_LDADD = $(QT_LIBS) $(LDADD) \
	$(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifhello.la

BUILT_SOURCES = gui/Frontend.moc.cpp \
	gui/DeviceCollection.moc.cpp \
	gui/DeviceContainer.moc.cpp \
	gui/qvideowidget.moc.cpp \
	gui/restoreui.moc.cpp \
	gui/ui_frontend.ui.h \
	gui/ui_qvideowidget.ui.h

smc_storaged_SOURCES = main-storage.cpp  \
	$(STREAMINGSOURCE) \
	$(SMC_AGENT) \
	apps/Application.cpp \
	apps/StorageAgent.cpp \
	$(AGENTPROXY)

smc_storaged_LDADD = \
	$(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifhello.la

smc_storaged_CXXFLAGS = \
	$(INCLUDE) \
	$(FLAGS) \
	-I$(ONVIFLIB)/Remote  \
	-I$(top_srcdir)/src/patterns \
	-I$(top_srcdir)/src/observers \
	-lgstreamer-0.10 -lgstinterfaces-0.10 $(LIBGSTREAMER) $(BOOST_SYSTEM_LIB) $(BOOST_THREAD_LIB)

smc_hubd_SOURCES = main-hub.cpp  \
	$(STREAMINGSOURCE) \
	$(SMC_AGENT) \
	apps/Application.cpp \
	apps/HubAgent.cpp \
	$(AGENTPROXY)

smc_hubd_LDADD = \
	$(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifhello.la

smc_hubd_CXXFLAGS = \
	$(INCLUDE) \
	$(FLAGS) \
	-I$(ONVIFLIB)/Remote  \
	-I$(top_srcdir)/src/patterns \
	-I$(top_srcdir)/src/observers \
	$(LIBGSTREAMER) 

smc_hubd_CFLAGS = 
smc_manager_SOURCES = main-manager.cpp  \
	$(STREAMINGSOURCE) \
	$(SMC_AGENT) \
	apps/Application.cpp \
	apps/ManagerAgent.cpp \
	$(AGENTPROXY)

smc_manager_LDADD = \
	$(ONVIFLIB)/libonvifdevicemgmt.la \
	$(ONVIFLIB)/libonvifmedia.la \
	$(ONVIFLIB)/libonvifhello.la

smc_manager_CXXFLAGS = \
	$(INCLUDE) \
	$(FLAGS) \
	-I$(ONVIFLIB)/Remote  \
	-I$(top_srcdir)/src/patterns \
	-I$(top_srcdir)/src/observers \
	$(LIBGSTREAMER) 

smc_manager_CFLAGS = 
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .moc.cpp .moc.cc .moc.cxx .moc.C .h .hh .hpp .ui .ui.h .ui.hh .ui.hpp .qrc .qrc.cpp .qrc.cc .qrc.cxx .qrc.C .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/m4/autotroll.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
frontend$(EXEEXT): $(frontend_OBJECTS) $(frontend_DEPENDENCIES) 
	@rm -f frontend$(EXEEXT)
	$(frontend_LINK) $(frontend_OBJECTS) $(frontend_LDADD) $(LIBS)
smc-cored$(EXEEXT): $(smc_cored_OBJECTS) $(smc_cored_DEPENDENCIES) 
	@rm -f smc-cored$(EXEEXT)
	$(smc_cored_LINK) $(smc_cored_OBJECTS) $(smc_cored_LDADD) $(LIBS)
smc-hubd$(EXEEXT): $(smc_hubd_OBJECTS) $(smc_hubd_DEPENDENCIES) 
	@rm -f smc-hubd$(EXEEXT)
	$(smc_hubd_LINK) $(smc_hubd_OBJECTS) $(smc_hubd_LDADD) $(LIBS)
smc-manager$(EXEEXT): $(smc_manager_OBJECTS) $(smc_manager_DEPENDENCIES) 
	@rm -f smc-manager$(EXEEXT)
	$(smc_manager_LINK) $(smc_manager_OBJECTS) $(smc_manager_LDADD) $(LIBS)
smc-storaged$(EXEEXT): $(smc_storaged_OBJECTS) $(smc_storaged_DEPENDENCIES) 
	@rm -f smc-storaged$(EXEEXT)
	$(smc_storaged_LINK) $(smc_storaged_OBJECTS) $(smc_storaged_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/frontend-Application.Po
include ./$(DEPDIR)/frontend-Bye.Po
include ./$(DEPDIR)/frontend-Command.Po
include ./$(DEPDIR)/frontend-CoreServerProxy.Po
include ./$(DEPDIR)/frontend-DeviceCollection.Po
include ./$(DEPDIR)/frontend-DeviceCollection.moc.Po
include ./$(DEPDIR)/frontend-DeviceContainer.Po
include ./$(DEPDIR)/frontend-DeviceContainer.moc.Po
include ./$(DEPDIR)/frontend-DiscoveryRequest.Po
include ./$(DEPDIR)/frontend-Frontend.Po
include ./$(DEPDIR)/frontend-Frontend.moc.Po
include ./$(DEPDIR)/frontend-Hello.Po
include ./$(DEPDIR)/frontend-Observer.Po
include ./$(DEPDIR)/frontend-RemoteProxy.Po
include ./$(DEPDIR)/frontend-Request.Po
include ./$(DEPDIR)/frontend-SMCC.Po
include ./$(DEPDIR)/frontend-SMCagentService.Po
include ./$(DEPDIR)/frontend-SMCserverProxy.Po
include ./$(DEPDIR)/frontend-SoapServer.Po
include ./$(DEPDIR)/frontend-Subject.Po
include ./$(DEPDIR)/frontend-Thread.Po
include ./$(DEPDIR)/frontend-main-frontend.Po
include ./$(DEPDIR)/frontend-qvideowidget.Po
include ./$(DEPDIR)/frontend-qvideowidget.moc.Po
include ./$(DEPDIR)/frontend-restoreui.Po
include ./$(DEPDIR)/frontend-restoreui.moc.Po
include ./$(DEPDIR)/smc_cored-AgentProxy.Po
include ./$(DEPDIR)/smc_cored-AgentRequest.Po
include ./$(DEPDIR)/smc_cored-Application.Po
include ./$(DEPDIR)/smc_cored-Bye.Po
include ./$(DEPDIR)/smc_cored-Command.Po
include ./$(DEPDIR)/smc_cored-CoreServer.Po
include ./$(DEPDIR)/smc_cored-DeviceProxy.Po
include ./$(DEPDIR)/smc_cored-DeviceRequest.Po
include ./$(DEPDIR)/smc_cored-DiscoveryRequest.Po
include ./$(DEPDIR)/smc_cored-DiscoveryServer.Po
include ./$(DEPDIR)/smc_cored-FrontendProxy.Po
include ./$(DEPDIR)/smc_cored-GetCapabilities.Po
include ./$(DEPDIR)/smc_cored-GetDeviceInformation.Po
include ./$(DEPDIR)/smc_cored-GetProfiles.Po
include ./$(DEPDIR)/smc_cored-GetStreamUri.Po
include ./$(DEPDIR)/smc_cored-GetVideoSources.Po
include ./$(DEPDIR)/smc_cored-Hello.Po
include ./$(DEPDIR)/smc_cored-HubProxy.Po
include ./$(DEPDIR)/smc_cored-ManagerProxy.Po
include ./$(DEPDIR)/smc_cored-MediaRequest.Po
include ./$(DEPDIR)/smc_cored-NetworkVideoTransmitter.Po
include ./$(DEPDIR)/smc_cored-Observer.Po
include ./$(DEPDIR)/smc_cored-Profile.Po
include ./$(DEPDIR)/smc_cored-RemoteProxy.Po
include ./$(DEPDIR)/smc_cored-Request.Po
include ./$(DEPDIR)/smc_cored-SMCC.Po
include ./$(DEPDIR)/smc_cored-SMCagentProxy.Po
include ./$(DEPDIR)/smc_cored-SMCserverService.Po
include ./$(DEPDIR)/smc_cored-SetCameraInfo.Po
include ./$(DEPDIR)/smc_cored-SetCameraUri.Po
include ./$(DEPDIR)/smc_cored-SoapServer.Po
include ./$(DEPDIR)/smc_cored-StorageProxy.Po
include ./$(DEPDIR)/smc_cored-Subject.Po
include ./$(DEPDIR)/smc_cored-SystemReboot.Po
include ./$(DEPDIR)/smc_cored-Thread.Po
include ./$(DEPDIR)/smc_cored-coreStation.Po
include ./$(DEPDIR)/smc_cored-main.Po
include ./$(DEPDIR)/smc_hubd-Application.Po
include ./$(DEPDIR)/smc_hubd-Bye.Po
include ./$(DEPDIR)/smc_hubd-Command.Po
include ./$(DEPDIR)/smc_hubd-CoreServerProxy.Po
include ./$(DEPDIR)/smc_hubd-DiscoveryRequest.Po
include ./$(DEPDIR)/smc_hubd-Hello.Po
include ./$(DEPDIR)/smc_hubd-HubAgent.Po
include ./$(DEPDIR)/smc_hubd-Observer.Po
include ./$(DEPDIR)/smc_hubd-RTSPserver.Po
include ./$(DEPDIR)/smc_hubd-RTSPserverGate.Po
include ./$(DEPDIR)/smc_hubd-RTSPserverManager.Po
include ./$(DEPDIR)/smc_hubd-RTSPserverStorage.Po
include ./$(DEPDIR)/smc_hubd-RemoteProxy.Po
include ./$(DEPDIR)/smc_hubd-Request.Po
include ./$(DEPDIR)/smc_hubd-SMCC.Po
include ./$(DEPDIR)/smc_hubd-SMCagentService.Po
include ./$(DEPDIR)/smc_hubd-SMCserverProxy.Po
include ./$(DEPDIR)/smc_hubd-SoapServer.Po
include ./$(DEPDIR)/smc_hubd-StorageFile.Po
include ./$(DEPDIR)/smc_hubd-Stream.Po
include ./$(DEPDIR)/smc_hubd-Streaming.Po
include ./$(DEPDIR)/smc_hubd-Subject.Po
include ./$(DEPDIR)/smc_hubd-Thread.Po
include ./$(DEPDIR)/smc_hubd-VideoCamStorage.Po
include ./$(DEPDIR)/smc_hubd-VideoCamUDP.Po
include ./$(DEPDIR)/smc_hubd-VideoOutput.Po
include ./$(DEPDIR)/smc_hubd-main-hub.Po
include ./$(DEPDIR)/smc_manager-Application.Po
include ./$(DEPDIR)/smc_manager-Bye.Po
include ./$(DEPDIR)/smc_manager-Command.Po
include ./$(DEPDIR)/smc_manager-CoreServerProxy.Po
include ./$(DEPDIR)/smc_manager-DiscoveryRequest.Po
include ./$(DEPDIR)/smc_manager-Hello.Po
include ./$(DEPDIR)/smc_manager-ManagerAgent.Po
include ./$(DEPDIR)/smc_manager-Observer.Po
include ./$(DEPDIR)/smc_manager-RTSPserver.Po
include ./$(DEPDIR)/smc_manager-RTSPserverGate.Po
include ./$(DEPDIR)/smc_manager-RTSPserverManager.Po
include ./$(DEPDIR)/smc_manager-RTSPserverStorage.Po
include ./$(DEPDIR)/smc_manager-RemoteProxy.Po
include ./$(DEPDIR)/smc_manager-Request.Po
include ./$(DEPDIR)/smc_manager-SMCC.Po
include ./$(DEPDIR)/smc_manager-SMCagentService.Po
include ./$(DEPDIR)/smc_manager-SMCserverProxy.Po
include ./$(DEPDIR)/smc_manager-SoapServer.Po
include ./$(DEPDIR)/smc_manager-StorageFile.Po
include ./$(DEPDIR)/smc_manager-Stream.Po
include ./$(DEPDIR)/smc_manager-Streaming.Po
include ./$(DEPDIR)/smc_manager-Subject.Po
include ./$(DEPDIR)/smc_manager-Thread.Po
include ./$(DEPDIR)/smc_manager-VideoCamStorage.Po
include ./$(DEPDIR)/smc_manager-VideoCamUDP.Po
include ./$(DEPDIR)/smc_manager-VideoOutput.Po
include ./$(DEPDIR)/smc_manager-main-manager.Po
include ./$(DEPDIR)/smc_storaged-Application.Po
include ./$(DEPDIR)/smc_storaged-Bye.Po
include ./$(DEPDIR)/smc_storaged-Command.Po
include ./$(DEPDIR)/smc_storaged-CoreServerProxy.Po
include ./$(DEPDIR)/smc_storaged-DiscoveryRequest.Po
include ./$(DEPDIR)/smc_storaged-Hello.Po
include ./$(DEPDIR)/smc_storaged-Observer.Po
include ./$(DEPDIR)/smc_storaged-RTSPserver.Po
include ./$(DEPDIR)/smc_storaged-RTSPserverGate.Po
include ./$(DEPDIR)/smc_storaged-RTSPserverManager.Po
include ./$(DEPDIR)/smc_storaged-RTSPserverStorage.Po
include ./$(DEPDIR)/smc_storaged-RemoteProxy.Po
include ./$(DEPDIR)/smc_storaged-Request.Po
include ./$(DEPDIR)/smc_storaged-SMCC.Po
include ./$(DEPDIR)/smc_storaged-SMCagentService.Po
include ./$(DEPDIR)/smc_storaged-SMCserverProxy.Po
include ./$(DEPDIR)/smc_storaged-SoapServer.Po
include ./$(DEPDIR)/smc_storaged-StorageAgent.Po
include ./$(DEPDIR)/smc_storaged-StorageFile.Po
include ./$(DEPDIR)/smc_storaged-Stream.Po
include ./$(DEPDIR)/smc_storaged-Streaming.Po
include ./$(DEPDIR)/smc_storaged-Subject.Po
include ./$(DEPDIR)/smc_storaged-Thread.Po
include ./$(DEPDIR)/smc_storaged-VideoCamStorage.Po
include ./$(DEPDIR)/smc_storaged-VideoCamUDP.Po
include ./$(DEPDIR)/smc_storaged-VideoOutput.Po
include ./$(DEPDIR)/smc_storaged-main-storage.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

frontend-main-frontend.o: main-frontend.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-main-frontend.o -MD -MP -MF $(DEPDIR)/frontend-main-frontend.Tpo -c -o frontend-main-frontend.o `test -f 'main-frontend.cpp' || echo '$(srcdir)/'`main-frontend.cpp
	$(am__mv) $(DEPDIR)/frontend-main-frontend.Tpo $(DEPDIR)/frontend-main-frontend.Po
#	source='main-frontend.cpp' object='frontend-main-frontend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-main-frontend.o `test -f 'main-frontend.cpp' || echo '$(srcdir)/'`main-frontend.cpp

frontend-main-frontend.obj: main-frontend.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-main-frontend.obj -MD -MP -MF $(DEPDIR)/frontend-main-frontend.Tpo -c -o frontend-main-frontend.obj `if test -f 'main-frontend.cpp'; then $(CYGPATH_W) 'main-frontend.cpp'; else $(CYGPATH_W) '$(srcdir)/main-frontend.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-main-frontend.Tpo $(DEPDIR)/frontend-main-frontend.Po
#	source='main-frontend.cpp' object='frontend-main-frontend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-main-frontend.obj `if test -f 'main-frontend.cpp'; then $(CYGPATH_W) 'main-frontend.cpp'; else $(CYGPATH_W) '$(srcdir)/main-frontend.cpp'; fi`

frontend-Request.o: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Request.o -MD -MP -MF $(DEPDIR)/frontend-Request.Tpo -c -o frontend-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp
	$(am__mv) $(DEPDIR)/frontend-Request.Tpo $(DEPDIR)/frontend-Request.Po
#	source='onvif/Request.cpp' object='frontend-Request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp

frontend-Request.obj: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Request.obj -MD -MP -MF $(DEPDIR)/frontend-Request.Tpo -c -o frontend-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Request.Tpo $(DEPDIR)/frontend-Request.Po
#	source='onvif/Request.cpp' object='frontend-Request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`

frontend-DiscoveryRequest.o: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DiscoveryRequest.o -MD -MP -MF $(DEPDIR)/frontend-DiscoveryRequest.Tpo -c -o frontend-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp
	$(am__mv) $(DEPDIR)/frontend-DiscoveryRequest.Tpo $(DEPDIR)/frontend-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='frontend-DiscoveryRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp

frontend-DiscoveryRequest.obj: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DiscoveryRequest.obj -MD -MP -MF $(DEPDIR)/frontend-DiscoveryRequest.Tpo -c -o frontend-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-DiscoveryRequest.Tpo $(DEPDIR)/frontend-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='frontend-DiscoveryRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`

frontend-SMCagentService.o: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SMCagentService.o -MD -MP -MF $(DEPDIR)/frontend-SMCagentService.Tpo -c -o frontend-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp
	$(am__mv) $(DEPDIR)/frontend-SMCagentService.Tpo $(DEPDIR)/frontend-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='frontend-SMCagentService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp

frontend-SMCagentService.obj: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SMCagentService.obj -MD -MP -MF $(DEPDIR)/frontend-SMCagentService.Tpo -c -o frontend-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-SMCagentService.Tpo $(DEPDIR)/frontend-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='frontend-SMCagentService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`

frontend-SMCserverProxy.o: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SMCserverProxy.o -MD -MP -MF $(DEPDIR)/frontend-SMCserverProxy.Tpo -c -o frontend-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp
	$(am__mv) $(DEPDIR)/frontend-SMCserverProxy.Tpo $(DEPDIR)/frontend-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='frontend-SMCserverProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp

frontend-SMCserverProxy.obj: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SMCserverProxy.obj -MD -MP -MF $(DEPDIR)/frontend-SMCserverProxy.Tpo -c -o frontend-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-SMCserverProxy.Tpo $(DEPDIR)/frontend-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='frontend-SMCserverProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`

frontend-SMCC.o: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SMCC.o -MD -MP -MF $(DEPDIR)/frontend-SMCC.Tpo -c -o frontend-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp
	$(am__mv) $(DEPDIR)/frontend-SMCC.Tpo $(DEPDIR)/frontend-SMCC.Po
#	source='soap/SMCC.cpp' object='frontend-SMCC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp

frontend-SMCC.obj: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SMCC.obj -MD -MP -MF $(DEPDIR)/frontend-SMCC.Tpo -c -o frontend-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-SMCC.Tpo $(DEPDIR)/frontend-SMCC.Po
#	source='soap/SMCC.cpp' object='frontend-SMCC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`

frontend-Thread.o: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Thread.o -MD -MP -MF $(DEPDIR)/frontend-Thread.Tpo -c -o frontend-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp
	$(am__mv) $(DEPDIR)/frontend-Thread.Tpo $(DEPDIR)/frontend-Thread.Po
#	source='patterns/Thread.cpp' object='frontend-Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp

frontend-Thread.obj: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Thread.obj -MD -MP -MF $(DEPDIR)/frontend-Thread.Tpo -c -o frontend-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Thread.Tpo $(DEPDIR)/frontend-Thread.Po
#	source='patterns/Thread.cpp' object='frontend-Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`

frontend-SoapServer.o: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SoapServer.o -MD -MP -MF $(DEPDIR)/frontend-SoapServer.Tpo -c -o frontend-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp
	$(am__mv) $(DEPDIR)/frontend-SoapServer.Tpo $(DEPDIR)/frontend-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='frontend-SoapServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp

frontend-SoapServer.obj: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-SoapServer.obj -MD -MP -MF $(DEPDIR)/frontend-SoapServer.Tpo -c -o frontend-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-SoapServer.Tpo $(DEPDIR)/frontend-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='frontend-SoapServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`

frontend-Hello.o: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Hello.o -MD -MP -MF $(DEPDIR)/frontend-Hello.Tpo -c -o frontend-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp
	$(am__mv) $(DEPDIR)/frontend-Hello.Tpo $(DEPDIR)/frontend-Hello.Po
#	source='onvif/Hello.cpp' object='frontend-Hello.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp

frontend-Hello.obj: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Hello.obj -MD -MP -MF $(DEPDIR)/frontend-Hello.Tpo -c -o frontend-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Hello.Tpo $(DEPDIR)/frontend-Hello.Po
#	source='onvif/Hello.cpp' object='frontend-Hello.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`

frontend-Bye.o: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Bye.o -MD -MP -MF $(DEPDIR)/frontend-Bye.Tpo -c -o frontend-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp
	$(am__mv) $(DEPDIR)/frontend-Bye.Tpo $(DEPDIR)/frontend-Bye.Po
#	source='onvif/Bye.cpp' object='frontend-Bye.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp

frontend-Bye.obj: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Bye.obj -MD -MP -MF $(DEPDIR)/frontend-Bye.Tpo -c -o frontend-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Bye.Tpo $(DEPDIR)/frontend-Bye.Po
#	source='onvif/Bye.cpp' object='frontend-Bye.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`

frontend-Frontend.o: gui/Frontend.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Frontend.o -MD -MP -MF $(DEPDIR)/frontend-Frontend.Tpo -c -o frontend-Frontend.o `test -f 'gui/Frontend.cpp' || echo '$(srcdir)/'`gui/Frontend.cpp
	$(am__mv) $(DEPDIR)/frontend-Frontend.Tpo $(DEPDIR)/frontend-Frontend.Po
#	source='gui/Frontend.cpp' object='frontend-Frontend.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Frontend.o `test -f 'gui/Frontend.cpp' || echo '$(srcdir)/'`gui/Frontend.cpp

frontend-Frontend.obj: gui/Frontend.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Frontend.obj -MD -MP -MF $(DEPDIR)/frontend-Frontend.Tpo -c -o frontend-Frontend.obj `if test -f 'gui/Frontend.cpp'; then $(CYGPATH_W) 'gui/Frontend.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/Frontend.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Frontend.Tpo $(DEPDIR)/frontend-Frontend.Po
#	source='gui/Frontend.cpp' object='frontend-Frontend.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Frontend.obj `if test -f 'gui/Frontend.cpp'; then $(CYGPATH_W) 'gui/Frontend.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/Frontend.cpp'; fi`

frontend-Frontend.moc.o: gui/Frontend.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Frontend.moc.o -MD -MP -MF $(DEPDIR)/frontend-Frontend.moc.Tpo -c -o frontend-Frontend.moc.o `test -f 'gui/Frontend.moc.cpp' || echo '$(srcdir)/'`gui/Frontend.moc.cpp
	$(am__mv) $(DEPDIR)/frontend-Frontend.moc.Tpo $(DEPDIR)/frontend-Frontend.moc.Po
#	source='gui/Frontend.moc.cpp' object='frontend-Frontend.moc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Frontend.moc.o `test -f 'gui/Frontend.moc.cpp' || echo '$(srcdir)/'`gui/Frontend.moc.cpp

frontend-Frontend.moc.obj: gui/Frontend.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Frontend.moc.obj -MD -MP -MF $(DEPDIR)/frontend-Frontend.moc.Tpo -c -o frontend-Frontend.moc.obj `if test -f 'gui/Frontend.moc.cpp'; then $(CYGPATH_W) 'gui/Frontend.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/Frontend.moc.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Frontend.moc.Tpo $(DEPDIR)/frontend-Frontend.moc.Po
#	source='gui/Frontend.moc.cpp' object='frontend-Frontend.moc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Frontend.moc.obj `if test -f 'gui/Frontend.moc.cpp'; then $(CYGPATH_W) 'gui/Frontend.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/Frontend.moc.cpp'; fi`

frontend-qvideowidget.o: gui/qvideowidget.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-qvideowidget.o -MD -MP -MF $(DEPDIR)/frontend-qvideowidget.Tpo -c -o frontend-qvideowidget.o `test -f 'gui/qvideowidget.cpp' || echo '$(srcdir)/'`gui/qvideowidget.cpp
	$(am__mv) $(DEPDIR)/frontend-qvideowidget.Tpo $(DEPDIR)/frontend-qvideowidget.Po
#	source='gui/qvideowidget.cpp' object='frontend-qvideowidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-qvideowidget.o `test -f 'gui/qvideowidget.cpp' || echo '$(srcdir)/'`gui/qvideowidget.cpp

frontend-qvideowidget.obj: gui/qvideowidget.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-qvideowidget.obj -MD -MP -MF $(DEPDIR)/frontend-qvideowidget.Tpo -c -o frontend-qvideowidget.obj `if test -f 'gui/qvideowidget.cpp'; then $(CYGPATH_W) 'gui/qvideowidget.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/qvideowidget.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-qvideowidget.Tpo $(DEPDIR)/frontend-qvideowidget.Po
#	source='gui/qvideowidget.cpp' object='frontend-qvideowidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-qvideowidget.obj `if test -f 'gui/qvideowidget.cpp'; then $(CYGPATH_W) 'gui/qvideowidget.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/qvideowidget.cpp'; fi`

frontend-qvideowidget.moc.o: gui/qvideowidget.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-qvideowidget.moc.o -MD -MP -MF $(DEPDIR)/frontend-qvideowidget.moc.Tpo -c -o frontend-qvideowidget.moc.o `test -f 'gui/qvideowidget.moc.cpp' || echo '$(srcdir)/'`gui/qvideowidget.moc.cpp
	$(am__mv) $(DEPDIR)/frontend-qvideowidget.moc.Tpo $(DEPDIR)/frontend-qvideowidget.moc.Po
#	source='gui/qvideowidget.moc.cpp' object='frontend-qvideowidget.moc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-qvideowidget.moc.o `test -f 'gui/qvideowidget.moc.cpp' || echo '$(srcdir)/'`gui/qvideowidget.moc.cpp

frontend-qvideowidget.moc.obj: gui/qvideowidget.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-qvideowidget.moc.obj -MD -MP -MF $(DEPDIR)/frontend-qvideowidget.moc.Tpo -c -o frontend-qvideowidget.moc.obj `if test -f 'gui/qvideowidget.moc.cpp'; then $(CYGPATH_W) 'gui/qvideowidget.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/qvideowidget.moc.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-qvideowidget.moc.Tpo $(DEPDIR)/frontend-qvideowidget.moc.Po
#	source='gui/qvideowidget.moc.cpp' object='frontend-qvideowidget.moc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-qvideowidget.moc.obj `if test -f 'gui/qvideowidget.moc.cpp'; then $(CYGPATH_W) 'gui/qvideowidget.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/qvideowidget.moc.cpp'; fi`

frontend-Application.o: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Application.o -MD -MP -MF $(DEPDIR)/frontend-Application.Tpo -c -o frontend-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp
	$(am__mv) $(DEPDIR)/frontend-Application.Tpo $(DEPDIR)/frontend-Application.Po
#	source='apps/Application.cpp' object='frontend-Application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp

frontend-Application.obj: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Application.obj -MD -MP -MF $(DEPDIR)/frontend-Application.Tpo -c -o frontend-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Application.Tpo $(DEPDIR)/frontend-Application.Po
#	source='apps/Application.cpp' object='frontend-Application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`

frontend-DeviceCollection.o: gui/DeviceCollection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceCollection.o -MD -MP -MF $(DEPDIR)/frontend-DeviceCollection.Tpo -c -o frontend-DeviceCollection.o `test -f 'gui/DeviceCollection.cpp' || echo '$(srcdir)/'`gui/DeviceCollection.cpp
	$(am__mv) $(DEPDIR)/frontend-DeviceCollection.Tpo $(DEPDIR)/frontend-DeviceCollection.Po
#	source='gui/DeviceCollection.cpp' object='frontend-DeviceCollection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceCollection.o `test -f 'gui/DeviceCollection.cpp' || echo '$(srcdir)/'`gui/DeviceCollection.cpp

frontend-DeviceCollection.obj: gui/DeviceCollection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceCollection.obj -MD -MP -MF $(DEPDIR)/frontend-DeviceCollection.Tpo -c -o frontend-DeviceCollection.obj `if test -f 'gui/DeviceCollection.cpp'; then $(CYGPATH_W) 'gui/DeviceCollection.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceCollection.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-DeviceCollection.Tpo $(DEPDIR)/frontend-DeviceCollection.Po
#	source='gui/DeviceCollection.cpp' object='frontend-DeviceCollection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceCollection.obj `if test -f 'gui/DeviceCollection.cpp'; then $(CYGPATH_W) 'gui/DeviceCollection.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceCollection.cpp'; fi`

frontend-DeviceContainer.o: gui/DeviceContainer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceContainer.o -MD -MP -MF $(DEPDIR)/frontend-DeviceContainer.Tpo -c -o frontend-DeviceContainer.o `test -f 'gui/DeviceContainer.cpp' || echo '$(srcdir)/'`gui/DeviceContainer.cpp
	$(am__mv) $(DEPDIR)/frontend-DeviceContainer.Tpo $(DEPDIR)/frontend-DeviceContainer.Po
#	source='gui/DeviceContainer.cpp' object='frontend-DeviceContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceContainer.o `test -f 'gui/DeviceContainer.cpp' || echo '$(srcdir)/'`gui/DeviceContainer.cpp

frontend-DeviceContainer.obj: gui/DeviceContainer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceContainer.obj -MD -MP -MF $(DEPDIR)/frontend-DeviceContainer.Tpo -c -o frontend-DeviceContainer.obj `if test -f 'gui/DeviceContainer.cpp'; then $(CYGPATH_W) 'gui/DeviceContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceContainer.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-DeviceContainer.Tpo $(DEPDIR)/frontend-DeviceContainer.Po
#	source='gui/DeviceContainer.cpp' object='frontend-DeviceContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceContainer.obj `if test -f 'gui/DeviceContainer.cpp'; then $(CYGPATH_W) 'gui/DeviceContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceContainer.cpp'; fi`

frontend-DeviceCollection.moc.o: gui/DeviceCollection.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceCollection.moc.o -MD -MP -MF $(DEPDIR)/frontend-DeviceCollection.moc.Tpo -c -o frontend-DeviceCollection.moc.o `test -f 'gui/DeviceCollection.moc.cpp' || echo '$(srcdir)/'`gui/DeviceCollection.moc.cpp
	$(am__mv) $(DEPDIR)/frontend-DeviceCollection.moc.Tpo $(DEPDIR)/frontend-DeviceCollection.moc.Po
#	source='gui/DeviceCollection.moc.cpp' object='frontend-DeviceCollection.moc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceCollection.moc.o `test -f 'gui/DeviceCollection.moc.cpp' || echo '$(srcdir)/'`gui/DeviceCollection.moc.cpp

frontend-DeviceCollection.moc.obj: gui/DeviceCollection.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceCollection.moc.obj -MD -MP -MF $(DEPDIR)/frontend-DeviceCollection.moc.Tpo -c -o frontend-DeviceCollection.moc.obj `if test -f 'gui/DeviceCollection.moc.cpp'; then $(CYGPATH_W) 'gui/DeviceCollection.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceCollection.moc.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-DeviceCollection.moc.Tpo $(DEPDIR)/frontend-DeviceCollection.moc.Po
#	source='gui/DeviceCollection.moc.cpp' object='frontend-DeviceCollection.moc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceCollection.moc.obj `if test -f 'gui/DeviceCollection.moc.cpp'; then $(CYGPATH_W) 'gui/DeviceCollection.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceCollection.moc.cpp'; fi`

frontend-DeviceContainer.moc.o: gui/DeviceContainer.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceContainer.moc.o -MD -MP -MF $(DEPDIR)/frontend-DeviceContainer.moc.Tpo -c -o frontend-DeviceContainer.moc.o `test -f 'gui/DeviceContainer.moc.cpp' || echo '$(srcdir)/'`gui/DeviceContainer.moc.cpp
	$(am__mv) $(DEPDIR)/frontend-DeviceContainer.moc.Tpo $(DEPDIR)/frontend-DeviceContainer.moc.Po
#	source='gui/DeviceContainer.moc.cpp' object='frontend-DeviceContainer.moc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceContainer.moc.o `test -f 'gui/DeviceContainer.moc.cpp' || echo '$(srcdir)/'`gui/DeviceContainer.moc.cpp

frontend-DeviceContainer.moc.obj: gui/DeviceContainer.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-DeviceContainer.moc.obj -MD -MP -MF $(DEPDIR)/frontend-DeviceContainer.moc.Tpo -c -o frontend-DeviceContainer.moc.obj `if test -f 'gui/DeviceContainer.moc.cpp'; then $(CYGPATH_W) 'gui/DeviceContainer.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceContainer.moc.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-DeviceContainer.moc.Tpo $(DEPDIR)/frontend-DeviceContainer.moc.Po
#	source='gui/DeviceContainer.moc.cpp' object='frontend-DeviceContainer.moc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-DeviceContainer.moc.obj `if test -f 'gui/DeviceContainer.moc.cpp'; then $(CYGPATH_W) 'gui/DeviceContainer.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/DeviceContainer.moc.cpp'; fi`

frontend-restoreui.moc.o: gui/restoreui.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-restoreui.moc.o -MD -MP -MF $(DEPDIR)/frontend-restoreui.moc.Tpo -c -o frontend-restoreui.moc.o `test -f 'gui/restoreui.moc.cpp' || echo '$(srcdir)/'`gui/restoreui.moc.cpp
	$(am__mv) $(DEPDIR)/frontend-restoreui.moc.Tpo $(DEPDIR)/frontend-restoreui.moc.Po
#	source='gui/restoreui.moc.cpp' object='frontend-restoreui.moc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-restoreui.moc.o `test -f 'gui/restoreui.moc.cpp' || echo '$(srcdir)/'`gui/restoreui.moc.cpp

frontend-restoreui.moc.obj: gui/restoreui.moc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-restoreui.moc.obj -MD -MP -MF $(DEPDIR)/frontend-restoreui.moc.Tpo -c -o frontend-restoreui.moc.obj `if test -f 'gui/restoreui.moc.cpp'; then $(CYGPATH_W) 'gui/restoreui.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/restoreui.moc.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-restoreui.moc.Tpo $(DEPDIR)/frontend-restoreui.moc.Po
#	source='gui/restoreui.moc.cpp' object='frontend-restoreui.moc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-restoreui.moc.obj `if test -f 'gui/restoreui.moc.cpp'; then $(CYGPATH_W) 'gui/restoreui.moc.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/restoreui.moc.cpp'; fi`

frontend-restoreui.o: gui/restoreui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-restoreui.o -MD -MP -MF $(DEPDIR)/frontend-restoreui.Tpo -c -o frontend-restoreui.o `test -f 'gui/restoreui.cpp' || echo '$(srcdir)/'`gui/restoreui.cpp
	$(am__mv) $(DEPDIR)/frontend-restoreui.Tpo $(DEPDIR)/frontend-restoreui.Po
#	source='gui/restoreui.cpp' object='frontend-restoreui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-restoreui.o `test -f 'gui/restoreui.cpp' || echo '$(srcdir)/'`gui/restoreui.cpp

frontend-restoreui.obj: gui/restoreui.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-restoreui.obj -MD -MP -MF $(DEPDIR)/frontend-restoreui.Tpo -c -o frontend-restoreui.obj `if test -f 'gui/restoreui.cpp'; then $(CYGPATH_W) 'gui/restoreui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/restoreui.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-restoreui.Tpo $(DEPDIR)/frontend-restoreui.Po
#	source='gui/restoreui.cpp' object='frontend-restoreui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-restoreui.obj `if test -f 'gui/restoreui.cpp'; then $(CYGPATH_W) 'gui/restoreui.cpp'; else $(CYGPATH_W) '$(srcdir)/gui/restoreui.cpp'; fi`

frontend-Subject.o: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Subject.o -MD -MP -MF $(DEPDIR)/frontend-Subject.Tpo -c -o frontend-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp
	$(am__mv) $(DEPDIR)/frontend-Subject.Tpo $(DEPDIR)/frontend-Subject.Po
#	source='patterns/Subject.cpp' object='frontend-Subject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp

frontend-Subject.obj: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Subject.obj -MD -MP -MF $(DEPDIR)/frontend-Subject.Tpo -c -o frontend-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Subject.Tpo $(DEPDIR)/frontend-Subject.Po
#	source='patterns/Subject.cpp' object='frontend-Subject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`

frontend-Observer.o: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Observer.o -MD -MP -MF $(DEPDIR)/frontend-Observer.Tpo -c -o frontend-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp
	$(am__mv) $(DEPDIR)/frontend-Observer.Tpo $(DEPDIR)/frontend-Observer.Po
#	source='patterns/Observer.cpp' object='frontend-Observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp

frontend-Observer.obj: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Observer.obj -MD -MP -MF $(DEPDIR)/frontend-Observer.Tpo -c -o frontend-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Observer.Tpo $(DEPDIR)/frontend-Observer.Po
#	source='patterns/Observer.cpp' object='frontend-Observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`

frontend-Command.o: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Command.o -MD -MP -MF $(DEPDIR)/frontend-Command.Tpo -c -o frontend-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp
	$(am__mv) $(DEPDIR)/frontend-Command.Tpo $(DEPDIR)/frontend-Command.Po
#	source='patterns/Command.cpp' object='frontend-Command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp

frontend-Command.obj: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-Command.obj -MD -MP -MF $(DEPDIR)/frontend-Command.Tpo -c -o frontend-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-Command.Tpo $(DEPDIR)/frontend-Command.Po
#	source='patterns/Command.cpp' object='frontend-Command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`

frontend-RemoteProxy.o: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-RemoteProxy.o -MD -MP -MF $(DEPDIR)/frontend-RemoteProxy.Tpo -c -o frontend-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp
	$(am__mv) $(DEPDIR)/frontend-RemoteProxy.Tpo $(DEPDIR)/frontend-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='frontend-RemoteProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp

frontend-RemoteProxy.obj: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-RemoteProxy.obj -MD -MP -MF $(DEPDIR)/frontend-RemoteProxy.Tpo -c -o frontend-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-RemoteProxy.Tpo $(DEPDIR)/frontend-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='frontend-RemoteProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`

frontend-CoreServerProxy.o: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-CoreServerProxy.o -MD -MP -MF $(DEPDIR)/frontend-CoreServerProxy.Tpo -c -o frontend-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp
	$(am__mv) $(DEPDIR)/frontend-CoreServerProxy.Tpo $(DEPDIR)/frontend-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='frontend-CoreServerProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp

frontend-CoreServerProxy.obj: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -MT frontend-CoreServerProxy.obj -MD -MP -MF $(DEPDIR)/frontend-CoreServerProxy.Tpo -c -o frontend-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/frontend-CoreServerProxy.Tpo $(DEPDIR)/frontend-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='frontend-CoreServerProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frontend_CPPFLAGS) $(CPPFLAGS) $(frontend_CXXFLAGS) $(CXXFLAGS) -c -o frontend-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`

smc_cored-main.o: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-main.o -MD -MP -MF $(DEPDIR)/smc_cored-main.Tpo -c -o smc_cored-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(am__mv) $(DEPDIR)/smc_cored-main.Tpo $(DEPDIR)/smc_cored-main.Po
#	source='main.cpp' object='smc_cored-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

smc_cored-main.obj: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-main.obj -MD -MP -MF $(DEPDIR)/smc_cored-main.Tpo -c -o smc_cored-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-main.Tpo $(DEPDIR)/smc_cored-main.Po
#	source='main.cpp' object='smc_cored-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

smc_cored-AgentRequest.o: onvif/AgentRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-AgentRequest.o -MD -MP -MF $(DEPDIR)/smc_cored-AgentRequest.Tpo -c -o smc_cored-AgentRequest.o `test -f 'onvif/AgentRequest.cpp' || echo '$(srcdir)/'`onvif/AgentRequest.cpp
	$(am__mv) $(DEPDIR)/smc_cored-AgentRequest.Tpo $(DEPDIR)/smc_cored-AgentRequest.Po
#	source='onvif/AgentRequest.cpp' object='smc_cored-AgentRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-AgentRequest.o `test -f 'onvif/AgentRequest.cpp' || echo '$(srcdir)/'`onvif/AgentRequest.cpp

smc_cored-AgentRequest.obj: onvif/AgentRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-AgentRequest.obj -MD -MP -MF $(DEPDIR)/smc_cored-AgentRequest.Tpo -c -o smc_cored-AgentRequest.obj `if test -f 'onvif/AgentRequest.cpp'; then $(CYGPATH_W) 'onvif/AgentRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/AgentRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-AgentRequest.Tpo $(DEPDIR)/smc_cored-AgentRequest.Po
#	source='onvif/AgentRequest.cpp' object='smc_cored-AgentRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-AgentRequest.obj `if test -f 'onvif/AgentRequest.cpp'; then $(CYGPATH_W) 'onvif/AgentRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/AgentRequest.cpp'; fi`

smc_cored-DiscoveryRequest.o: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DiscoveryRequest.o -MD -MP -MF $(DEPDIR)/smc_cored-DiscoveryRequest.Tpo -c -o smc_cored-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp
	$(am__mv) $(DEPDIR)/smc_cored-DiscoveryRequest.Tpo $(DEPDIR)/smc_cored-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_cored-DiscoveryRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp

smc_cored-DiscoveryRequest.obj: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DiscoveryRequest.obj -MD -MP -MF $(DEPDIR)/smc_cored-DiscoveryRequest.Tpo -c -o smc_cored-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-DiscoveryRequest.Tpo $(DEPDIR)/smc_cored-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_cored-DiscoveryRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`

smc_cored-Request.o: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Request.o -MD -MP -MF $(DEPDIR)/smc_cored-Request.Tpo -c -o smc_cored-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Request.Tpo $(DEPDIR)/smc_cored-Request.Po
#	source='onvif/Request.cpp' object='smc_cored-Request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp

smc_cored-Request.obj: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Request.obj -MD -MP -MF $(DEPDIR)/smc_cored-Request.Tpo -c -o smc_cored-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Request.Tpo $(DEPDIR)/smc_cored-Request.Po
#	source='onvif/Request.cpp' object='smc_cored-Request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`

smc_cored-DeviceRequest.o: onvif/DeviceRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DeviceRequest.o -MD -MP -MF $(DEPDIR)/smc_cored-DeviceRequest.Tpo -c -o smc_cored-DeviceRequest.o `test -f 'onvif/DeviceRequest.cpp' || echo '$(srcdir)/'`onvif/DeviceRequest.cpp
	$(am__mv) $(DEPDIR)/smc_cored-DeviceRequest.Tpo $(DEPDIR)/smc_cored-DeviceRequest.Po
#	source='onvif/DeviceRequest.cpp' object='smc_cored-DeviceRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DeviceRequest.o `test -f 'onvif/DeviceRequest.cpp' || echo '$(srcdir)/'`onvif/DeviceRequest.cpp

smc_cored-DeviceRequest.obj: onvif/DeviceRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DeviceRequest.obj -MD -MP -MF $(DEPDIR)/smc_cored-DeviceRequest.Tpo -c -o smc_cored-DeviceRequest.obj `if test -f 'onvif/DeviceRequest.cpp'; then $(CYGPATH_W) 'onvif/DeviceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DeviceRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-DeviceRequest.Tpo $(DEPDIR)/smc_cored-DeviceRequest.Po
#	source='onvif/DeviceRequest.cpp' object='smc_cored-DeviceRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DeviceRequest.obj `if test -f 'onvif/DeviceRequest.cpp'; then $(CYGPATH_W) 'onvif/DeviceRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DeviceRequest.cpp'; fi`

smc_cored-MediaRequest.o: onvif/MediaRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-MediaRequest.o -MD -MP -MF $(DEPDIR)/smc_cored-MediaRequest.Tpo -c -o smc_cored-MediaRequest.o `test -f 'onvif/MediaRequest.cpp' || echo '$(srcdir)/'`onvif/MediaRequest.cpp
	$(am__mv) $(DEPDIR)/smc_cored-MediaRequest.Tpo $(DEPDIR)/smc_cored-MediaRequest.Po
#	source='onvif/MediaRequest.cpp' object='smc_cored-MediaRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-MediaRequest.o `test -f 'onvif/MediaRequest.cpp' || echo '$(srcdir)/'`onvif/MediaRequest.cpp

smc_cored-MediaRequest.obj: onvif/MediaRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-MediaRequest.obj -MD -MP -MF $(DEPDIR)/smc_cored-MediaRequest.Tpo -c -o smc_cored-MediaRequest.obj `if test -f 'onvif/MediaRequest.cpp'; then $(CYGPATH_W) 'onvif/MediaRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/MediaRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-MediaRequest.Tpo $(DEPDIR)/smc_cored-MediaRequest.Po
#	source='onvif/MediaRequest.cpp' object='smc_cored-MediaRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-MediaRequest.obj `if test -f 'onvif/MediaRequest.cpp'; then $(CYGPATH_W) 'onvif/MediaRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/MediaRequest.cpp'; fi`

smc_cored-NetworkVideoTransmitter.o: onvif/NetworkVideoTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-NetworkVideoTransmitter.o -MD -MP -MF $(DEPDIR)/smc_cored-NetworkVideoTransmitter.Tpo -c -o smc_cored-NetworkVideoTransmitter.o `test -f 'onvif/NetworkVideoTransmitter.cpp' || echo '$(srcdir)/'`onvif/NetworkVideoTransmitter.cpp
	$(am__mv) $(DEPDIR)/smc_cored-NetworkVideoTransmitter.Tpo $(DEPDIR)/smc_cored-NetworkVideoTransmitter.Po
#	source='onvif/NetworkVideoTransmitter.cpp' object='smc_cored-NetworkVideoTransmitter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-NetworkVideoTransmitter.o `test -f 'onvif/NetworkVideoTransmitter.cpp' || echo '$(srcdir)/'`onvif/NetworkVideoTransmitter.cpp

smc_cored-NetworkVideoTransmitter.obj: onvif/NetworkVideoTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-NetworkVideoTransmitter.obj -MD -MP -MF $(DEPDIR)/smc_cored-NetworkVideoTransmitter.Tpo -c -o smc_cored-NetworkVideoTransmitter.obj `if test -f 'onvif/NetworkVideoTransmitter.cpp'; then $(CYGPATH_W) 'onvif/NetworkVideoTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/NetworkVideoTransmitter.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-NetworkVideoTransmitter.Tpo $(DEPDIR)/smc_cored-NetworkVideoTransmitter.Po
#	source='onvif/NetworkVideoTransmitter.cpp' object='smc_cored-NetworkVideoTransmitter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-NetworkVideoTransmitter.obj `if test -f 'onvif/NetworkVideoTransmitter.cpp'; then $(CYGPATH_W) 'onvif/NetworkVideoTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/NetworkVideoTransmitter.cpp'; fi`

smc_cored-Profile.o: onvif/Profile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Profile.o -MD -MP -MF $(DEPDIR)/smc_cored-Profile.Tpo -c -o smc_cored-Profile.o `test -f 'onvif/Profile.cpp' || echo '$(srcdir)/'`onvif/Profile.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Profile.Tpo $(DEPDIR)/smc_cored-Profile.Po
#	source='onvif/Profile.cpp' object='smc_cored-Profile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Profile.o `test -f 'onvif/Profile.cpp' || echo '$(srcdir)/'`onvif/Profile.cpp

smc_cored-Profile.obj: onvif/Profile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Profile.obj -MD -MP -MF $(DEPDIR)/smc_cored-Profile.Tpo -c -o smc_cored-Profile.obj `if test -f 'onvif/Profile.cpp'; then $(CYGPATH_W) 'onvif/Profile.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Profile.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Profile.Tpo $(DEPDIR)/smc_cored-Profile.Po
#	source='onvif/Profile.cpp' object='smc_cored-Profile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Profile.obj `if test -f 'onvif/Profile.cpp'; then $(CYGPATH_W) 'onvif/Profile.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Profile.cpp'; fi`

smc_cored-GetDeviceInformation.o: onvif/GetDeviceInformation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetDeviceInformation.o -MD -MP -MF $(DEPDIR)/smc_cored-GetDeviceInformation.Tpo -c -o smc_cored-GetDeviceInformation.o `test -f 'onvif/GetDeviceInformation.cpp' || echo '$(srcdir)/'`onvif/GetDeviceInformation.cpp
	$(am__mv) $(DEPDIR)/smc_cored-GetDeviceInformation.Tpo $(DEPDIR)/smc_cored-GetDeviceInformation.Po
#	source='onvif/GetDeviceInformation.cpp' object='smc_cored-GetDeviceInformation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetDeviceInformation.o `test -f 'onvif/GetDeviceInformation.cpp' || echo '$(srcdir)/'`onvif/GetDeviceInformation.cpp

smc_cored-GetDeviceInformation.obj: onvif/GetDeviceInformation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetDeviceInformation.obj -MD -MP -MF $(DEPDIR)/smc_cored-GetDeviceInformation.Tpo -c -o smc_cored-GetDeviceInformation.obj `if test -f 'onvif/GetDeviceInformation.cpp'; then $(CYGPATH_W) 'onvif/GetDeviceInformation.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetDeviceInformation.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-GetDeviceInformation.Tpo $(DEPDIR)/smc_cored-GetDeviceInformation.Po
#	source='onvif/GetDeviceInformation.cpp' object='smc_cored-GetDeviceInformation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetDeviceInformation.obj `if test -f 'onvif/GetDeviceInformation.cpp'; then $(CYGPATH_W) 'onvif/GetDeviceInformation.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetDeviceInformation.cpp'; fi`

smc_cored-GetCapabilities.o: onvif/GetCapabilities.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetCapabilities.o -MD -MP -MF $(DEPDIR)/smc_cored-GetCapabilities.Tpo -c -o smc_cored-GetCapabilities.o `test -f 'onvif/GetCapabilities.cpp' || echo '$(srcdir)/'`onvif/GetCapabilities.cpp
	$(am__mv) $(DEPDIR)/smc_cored-GetCapabilities.Tpo $(DEPDIR)/smc_cored-GetCapabilities.Po
#	source='onvif/GetCapabilities.cpp' object='smc_cored-GetCapabilities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetCapabilities.o `test -f 'onvif/GetCapabilities.cpp' || echo '$(srcdir)/'`onvif/GetCapabilities.cpp

smc_cored-GetCapabilities.obj: onvif/GetCapabilities.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetCapabilities.obj -MD -MP -MF $(DEPDIR)/smc_cored-GetCapabilities.Tpo -c -o smc_cored-GetCapabilities.obj `if test -f 'onvif/GetCapabilities.cpp'; then $(CYGPATH_W) 'onvif/GetCapabilities.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetCapabilities.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-GetCapabilities.Tpo $(DEPDIR)/smc_cored-GetCapabilities.Po
#	source='onvif/GetCapabilities.cpp' object='smc_cored-GetCapabilities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetCapabilities.obj `if test -f 'onvif/GetCapabilities.cpp'; then $(CYGPATH_W) 'onvif/GetCapabilities.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetCapabilities.cpp'; fi`

smc_cored-SystemReboot.o: onvif/SystemReboot.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SystemReboot.o -MD -MP -MF $(DEPDIR)/smc_cored-SystemReboot.Tpo -c -o smc_cored-SystemReboot.o `test -f 'onvif/SystemReboot.cpp' || echo '$(srcdir)/'`onvif/SystemReboot.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SystemReboot.Tpo $(DEPDIR)/smc_cored-SystemReboot.Po
#	source='onvif/SystemReboot.cpp' object='smc_cored-SystemReboot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SystemReboot.o `test -f 'onvif/SystemReboot.cpp' || echo '$(srcdir)/'`onvif/SystemReboot.cpp

smc_cored-SystemReboot.obj: onvif/SystemReboot.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SystemReboot.obj -MD -MP -MF $(DEPDIR)/smc_cored-SystemReboot.Tpo -c -o smc_cored-SystemReboot.obj `if test -f 'onvif/SystemReboot.cpp'; then $(CYGPATH_W) 'onvif/SystemReboot.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/SystemReboot.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SystemReboot.Tpo $(DEPDIR)/smc_cored-SystemReboot.Po
#	source='onvif/SystemReboot.cpp' object='smc_cored-SystemReboot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SystemReboot.obj `if test -f 'onvif/SystemReboot.cpp'; then $(CYGPATH_W) 'onvif/SystemReboot.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/SystemReboot.cpp'; fi`

smc_cored-GetVideoSources.o: onvif/GetVideoSources.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetVideoSources.o -MD -MP -MF $(DEPDIR)/smc_cored-GetVideoSources.Tpo -c -o smc_cored-GetVideoSources.o `test -f 'onvif/GetVideoSources.cpp' || echo '$(srcdir)/'`onvif/GetVideoSources.cpp
	$(am__mv) $(DEPDIR)/smc_cored-GetVideoSources.Tpo $(DEPDIR)/smc_cored-GetVideoSources.Po
#	source='onvif/GetVideoSources.cpp' object='smc_cored-GetVideoSources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetVideoSources.o `test -f 'onvif/GetVideoSources.cpp' || echo '$(srcdir)/'`onvif/GetVideoSources.cpp

smc_cored-GetVideoSources.obj: onvif/GetVideoSources.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetVideoSources.obj -MD -MP -MF $(DEPDIR)/smc_cored-GetVideoSources.Tpo -c -o smc_cored-GetVideoSources.obj `if test -f 'onvif/GetVideoSources.cpp'; then $(CYGPATH_W) 'onvif/GetVideoSources.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetVideoSources.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-GetVideoSources.Tpo $(DEPDIR)/smc_cored-GetVideoSources.Po
#	source='onvif/GetVideoSources.cpp' object='smc_cored-GetVideoSources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetVideoSources.obj `if test -f 'onvif/GetVideoSources.cpp'; then $(CYGPATH_W) 'onvif/GetVideoSources.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetVideoSources.cpp'; fi`

smc_cored-GetProfiles.o: onvif/GetProfiles.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetProfiles.o -MD -MP -MF $(DEPDIR)/smc_cored-GetProfiles.Tpo -c -o smc_cored-GetProfiles.o `test -f 'onvif/GetProfiles.cpp' || echo '$(srcdir)/'`onvif/GetProfiles.cpp
	$(am__mv) $(DEPDIR)/smc_cored-GetProfiles.Tpo $(DEPDIR)/smc_cored-GetProfiles.Po
#	source='onvif/GetProfiles.cpp' object='smc_cored-GetProfiles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetProfiles.o `test -f 'onvif/GetProfiles.cpp' || echo '$(srcdir)/'`onvif/GetProfiles.cpp

smc_cored-GetProfiles.obj: onvif/GetProfiles.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetProfiles.obj -MD -MP -MF $(DEPDIR)/smc_cored-GetProfiles.Tpo -c -o smc_cored-GetProfiles.obj `if test -f 'onvif/GetProfiles.cpp'; then $(CYGPATH_W) 'onvif/GetProfiles.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetProfiles.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-GetProfiles.Tpo $(DEPDIR)/smc_cored-GetProfiles.Po
#	source='onvif/GetProfiles.cpp' object='smc_cored-GetProfiles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetProfiles.obj `if test -f 'onvif/GetProfiles.cpp'; then $(CYGPATH_W) 'onvif/GetProfiles.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetProfiles.cpp'; fi`

smc_cored-GetStreamUri.o: onvif/GetStreamUri.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetStreamUri.o -MD -MP -MF $(DEPDIR)/smc_cored-GetStreamUri.Tpo -c -o smc_cored-GetStreamUri.o `test -f 'onvif/GetStreamUri.cpp' || echo '$(srcdir)/'`onvif/GetStreamUri.cpp
	$(am__mv) $(DEPDIR)/smc_cored-GetStreamUri.Tpo $(DEPDIR)/smc_cored-GetStreamUri.Po
#	source='onvif/GetStreamUri.cpp' object='smc_cored-GetStreamUri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetStreamUri.o `test -f 'onvif/GetStreamUri.cpp' || echo '$(srcdir)/'`onvif/GetStreamUri.cpp

smc_cored-GetStreamUri.obj: onvif/GetStreamUri.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-GetStreamUri.obj -MD -MP -MF $(DEPDIR)/smc_cored-GetStreamUri.Tpo -c -o smc_cored-GetStreamUri.obj `if test -f 'onvif/GetStreamUri.cpp'; then $(CYGPATH_W) 'onvif/GetStreamUri.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetStreamUri.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-GetStreamUri.Tpo $(DEPDIR)/smc_cored-GetStreamUri.Po
#	source='onvif/GetStreamUri.cpp' object='smc_cored-GetStreamUri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-GetStreamUri.obj `if test -f 'onvif/GetStreamUri.cpp'; then $(CYGPATH_W) 'onvif/GetStreamUri.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/GetStreamUri.cpp'; fi`

smc_cored-Hello.o: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Hello.o -MD -MP -MF $(DEPDIR)/smc_cored-Hello.Tpo -c -o smc_cored-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Hello.Tpo $(DEPDIR)/smc_cored-Hello.Po
#	source='onvif/Hello.cpp' object='smc_cored-Hello.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp

smc_cored-Hello.obj: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Hello.obj -MD -MP -MF $(DEPDIR)/smc_cored-Hello.Tpo -c -o smc_cored-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Hello.Tpo $(DEPDIR)/smc_cored-Hello.Po
#	source='onvif/Hello.cpp' object='smc_cored-Hello.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`

smc_cored-Bye.o: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Bye.o -MD -MP -MF $(DEPDIR)/smc_cored-Bye.Tpo -c -o smc_cored-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Bye.Tpo $(DEPDIR)/smc_cored-Bye.Po
#	source='onvif/Bye.cpp' object='smc_cored-Bye.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp

smc_cored-Bye.obj: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Bye.obj -MD -MP -MF $(DEPDIR)/smc_cored-Bye.Tpo -c -o smc_cored-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Bye.Tpo $(DEPDIR)/smc_cored-Bye.Po
#	source='onvif/Bye.cpp' object='smc_cored-Bye.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`

smc_cored-SetCameraUri.o: onvif/SetCameraUri.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SetCameraUri.o -MD -MP -MF $(DEPDIR)/smc_cored-SetCameraUri.Tpo -c -o smc_cored-SetCameraUri.o `test -f 'onvif/SetCameraUri.cpp' || echo '$(srcdir)/'`onvif/SetCameraUri.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SetCameraUri.Tpo $(DEPDIR)/smc_cored-SetCameraUri.Po
#	source='onvif/SetCameraUri.cpp' object='smc_cored-SetCameraUri.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SetCameraUri.o `test -f 'onvif/SetCameraUri.cpp' || echo '$(srcdir)/'`onvif/SetCameraUri.cpp

smc_cored-SetCameraUri.obj: onvif/SetCameraUri.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SetCameraUri.obj -MD -MP -MF $(DEPDIR)/smc_cored-SetCameraUri.Tpo -c -o smc_cored-SetCameraUri.obj `if test -f 'onvif/SetCameraUri.cpp'; then $(CYGPATH_W) 'onvif/SetCameraUri.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/SetCameraUri.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SetCameraUri.Tpo $(DEPDIR)/smc_cored-SetCameraUri.Po
#	source='onvif/SetCameraUri.cpp' object='smc_cored-SetCameraUri.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SetCameraUri.obj `if test -f 'onvif/SetCameraUri.cpp'; then $(CYGPATH_W) 'onvif/SetCameraUri.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/SetCameraUri.cpp'; fi`

smc_cored-SetCameraInfo.o: onvif/SetCameraInfo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SetCameraInfo.o -MD -MP -MF $(DEPDIR)/smc_cored-SetCameraInfo.Tpo -c -o smc_cored-SetCameraInfo.o `test -f 'onvif/SetCameraInfo.cpp' || echo '$(srcdir)/'`onvif/SetCameraInfo.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SetCameraInfo.Tpo $(DEPDIR)/smc_cored-SetCameraInfo.Po
#	source='onvif/SetCameraInfo.cpp' object='smc_cored-SetCameraInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SetCameraInfo.o `test -f 'onvif/SetCameraInfo.cpp' || echo '$(srcdir)/'`onvif/SetCameraInfo.cpp

smc_cored-SetCameraInfo.obj: onvif/SetCameraInfo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SetCameraInfo.obj -MD -MP -MF $(DEPDIR)/smc_cored-SetCameraInfo.Tpo -c -o smc_cored-SetCameraInfo.obj `if test -f 'onvif/SetCameraInfo.cpp'; then $(CYGPATH_W) 'onvif/SetCameraInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/SetCameraInfo.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SetCameraInfo.Tpo $(DEPDIR)/smc_cored-SetCameraInfo.Po
#	source='onvif/SetCameraInfo.cpp' object='smc_cored-SetCameraInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SetCameraInfo.obj `if test -f 'onvif/SetCameraInfo.cpp'; then $(CYGPATH_W) 'onvif/SetCameraInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/SetCameraInfo.cpp'; fi`

smc_cored-coreStation.o: onvif/coreStation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-coreStation.o -MD -MP -MF $(DEPDIR)/smc_cored-coreStation.Tpo -c -o smc_cored-coreStation.o `test -f 'onvif/coreStation.cpp' || echo '$(srcdir)/'`onvif/coreStation.cpp
	$(am__mv) $(DEPDIR)/smc_cored-coreStation.Tpo $(DEPDIR)/smc_cored-coreStation.Po
#	source='onvif/coreStation.cpp' object='smc_cored-coreStation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-coreStation.o `test -f 'onvif/coreStation.cpp' || echo '$(srcdir)/'`onvif/coreStation.cpp

smc_cored-coreStation.obj: onvif/coreStation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-coreStation.obj -MD -MP -MF $(DEPDIR)/smc_cored-coreStation.Tpo -c -o smc_cored-coreStation.obj `if test -f 'onvif/coreStation.cpp'; then $(CYGPATH_W) 'onvif/coreStation.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/coreStation.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-coreStation.Tpo $(DEPDIR)/smc_cored-coreStation.Po
#	source='onvif/coreStation.cpp' object='smc_cored-coreStation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-coreStation.obj `if test -f 'onvif/coreStation.cpp'; then $(CYGPATH_W) 'onvif/coreStation.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/coreStation.cpp'; fi`

smc_cored-Application.o: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Application.o -MD -MP -MF $(DEPDIR)/smc_cored-Application.Tpo -c -o smc_cored-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Application.Tpo $(DEPDIR)/smc_cored-Application.Po
#	source='apps/Application.cpp' object='smc_cored-Application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp

smc_cored-Application.obj: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Application.obj -MD -MP -MF $(DEPDIR)/smc_cored-Application.Tpo -c -o smc_cored-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Application.Tpo $(DEPDIR)/smc_cored-Application.Po
#	source='apps/Application.cpp' object='smc_cored-Application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`

smc_cored-CoreServer.o: apps/CoreServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-CoreServer.o -MD -MP -MF $(DEPDIR)/smc_cored-CoreServer.Tpo -c -o smc_cored-CoreServer.o `test -f 'apps/CoreServer.cpp' || echo '$(srcdir)/'`apps/CoreServer.cpp
	$(am__mv) $(DEPDIR)/smc_cored-CoreServer.Tpo $(DEPDIR)/smc_cored-CoreServer.Po
#	source='apps/CoreServer.cpp' object='smc_cored-CoreServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-CoreServer.o `test -f 'apps/CoreServer.cpp' || echo '$(srcdir)/'`apps/CoreServer.cpp

smc_cored-CoreServer.obj: apps/CoreServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-CoreServer.obj -MD -MP -MF $(DEPDIR)/smc_cored-CoreServer.Tpo -c -o smc_cored-CoreServer.obj `if test -f 'apps/CoreServer.cpp'; then $(CYGPATH_W) 'apps/CoreServer.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/CoreServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-CoreServer.Tpo $(DEPDIR)/smc_cored-CoreServer.Po
#	source='apps/CoreServer.cpp' object='smc_cored-CoreServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-CoreServer.obj `if test -f 'apps/CoreServer.cpp'; then $(CYGPATH_W) 'apps/CoreServer.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/CoreServer.cpp'; fi`

smc_cored-Subject.o: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Subject.o -MD -MP -MF $(DEPDIR)/smc_cored-Subject.Tpo -c -o smc_cored-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Subject.Tpo $(DEPDIR)/smc_cored-Subject.Po
#	source='patterns/Subject.cpp' object='smc_cored-Subject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp

smc_cored-Subject.obj: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Subject.obj -MD -MP -MF $(DEPDIR)/smc_cored-Subject.Tpo -c -o smc_cored-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Subject.Tpo $(DEPDIR)/smc_cored-Subject.Po
#	source='patterns/Subject.cpp' object='smc_cored-Subject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`

smc_cored-Observer.o: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Observer.o -MD -MP -MF $(DEPDIR)/smc_cored-Observer.Tpo -c -o smc_cored-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Observer.Tpo $(DEPDIR)/smc_cored-Observer.Po
#	source='patterns/Observer.cpp' object='smc_cored-Observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp

smc_cored-Observer.obj: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Observer.obj -MD -MP -MF $(DEPDIR)/smc_cored-Observer.Tpo -c -o smc_cored-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Observer.Tpo $(DEPDIR)/smc_cored-Observer.Po
#	source='patterns/Observer.cpp' object='smc_cored-Observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`

smc_cored-Command.o: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Command.o -MD -MP -MF $(DEPDIR)/smc_cored-Command.Tpo -c -o smc_cored-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Command.Tpo $(DEPDIR)/smc_cored-Command.Po
#	source='patterns/Command.cpp' object='smc_cored-Command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp

smc_cored-Command.obj: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Command.obj -MD -MP -MF $(DEPDIR)/smc_cored-Command.Tpo -c -o smc_cored-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Command.Tpo $(DEPDIR)/smc_cored-Command.Po
#	source='patterns/Command.cpp' object='smc_cored-Command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`

smc_cored-Thread.o: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Thread.o -MD -MP -MF $(DEPDIR)/smc_cored-Thread.Tpo -c -o smc_cored-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp
	$(am__mv) $(DEPDIR)/smc_cored-Thread.Tpo $(DEPDIR)/smc_cored-Thread.Po
#	source='patterns/Thread.cpp' object='smc_cored-Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp

smc_cored-Thread.obj: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-Thread.obj -MD -MP -MF $(DEPDIR)/smc_cored-Thread.Tpo -c -o smc_cored-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-Thread.Tpo $(DEPDIR)/smc_cored-Thread.Po
#	source='patterns/Thread.cpp' object='smc_cored-Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`

smc_cored-AgentProxy.o: observers/AgentProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-AgentProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-AgentProxy.Tpo -c -o smc_cored-AgentProxy.o `test -f 'observers/AgentProxy.cpp' || echo '$(srcdir)/'`observers/AgentProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-AgentProxy.Tpo $(DEPDIR)/smc_cored-AgentProxy.Po
#	source='observers/AgentProxy.cpp' object='smc_cored-AgentProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-AgentProxy.o `test -f 'observers/AgentProxy.cpp' || echo '$(srcdir)/'`observers/AgentProxy.cpp

smc_cored-AgentProxy.obj: observers/AgentProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-AgentProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-AgentProxy.Tpo -c -o smc_cored-AgentProxy.obj `if test -f 'observers/AgentProxy.cpp'; then $(CYGPATH_W) 'observers/AgentProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/AgentProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-AgentProxy.Tpo $(DEPDIR)/smc_cored-AgentProxy.Po
#	source='observers/AgentProxy.cpp' object='smc_cored-AgentProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-AgentProxy.obj `if test -f 'observers/AgentProxy.cpp'; then $(CYGPATH_W) 'observers/AgentProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/AgentProxy.cpp'; fi`

smc_cored-DeviceProxy.o: observers/DeviceProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DeviceProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-DeviceProxy.Tpo -c -o smc_cored-DeviceProxy.o `test -f 'observers/DeviceProxy.cpp' || echo '$(srcdir)/'`observers/DeviceProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-DeviceProxy.Tpo $(DEPDIR)/smc_cored-DeviceProxy.Po
#	source='observers/DeviceProxy.cpp' object='smc_cored-DeviceProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DeviceProxy.o `test -f 'observers/DeviceProxy.cpp' || echo '$(srcdir)/'`observers/DeviceProxy.cpp

smc_cored-DeviceProxy.obj: observers/DeviceProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DeviceProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-DeviceProxy.Tpo -c -o smc_cored-DeviceProxy.obj `if test -f 'observers/DeviceProxy.cpp'; then $(CYGPATH_W) 'observers/DeviceProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/DeviceProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-DeviceProxy.Tpo $(DEPDIR)/smc_cored-DeviceProxy.Po
#	source='observers/DeviceProxy.cpp' object='smc_cored-DeviceProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DeviceProxy.obj `if test -f 'observers/DeviceProxy.cpp'; then $(CYGPATH_W) 'observers/DeviceProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/DeviceProxy.cpp'; fi`

smc_cored-RemoteProxy.o: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-RemoteProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-RemoteProxy.Tpo -c -o smc_cored-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-RemoteProxy.Tpo $(DEPDIR)/smc_cored-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_cored-RemoteProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp

smc_cored-RemoteProxy.obj: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-RemoteProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-RemoteProxy.Tpo -c -o smc_cored-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-RemoteProxy.Tpo $(DEPDIR)/smc_cored-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_cored-RemoteProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`

smc_cored-FrontendProxy.o: observers/FrontendProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-FrontendProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-FrontendProxy.Tpo -c -o smc_cored-FrontendProxy.o `test -f 'observers/FrontendProxy.cpp' || echo '$(srcdir)/'`observers/FrontendProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-FrontendProxy.Tpo $(DEPDIR)/smc_cored-FrontendProxy.Po
#	source='observers/FrontendProxy.cpp' object='smc_cored-FrontendProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-FrontendProxy.o `test -f 'observers/FrontendProxy.cpp' || echo '$(srcdir)/'`observers/FrontendProxy.cpp

smc_cored-FrontendProxy.obj: observers/FrontendProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-FrontendProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-FrontendProxy.Tpo -c -o smc_cored-FrontendProxy.obj `if test -f 'observers/FrontendProxy.cpp'; then $(CYGPATH_W) 'observers/FrontendProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/FrontendProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-FrontendProxy.Tpo $(DEPDIR)/smc_cored-FrontendProxy.Po
#	source='observers/FrontendProxy.cpp' object='smc_cored-FrontendProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-FrontendProxy.obj `if test -f 'observers/FrontendProxy.cpp'; then $(CYGPATH_W) 'observers/FrontendProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/FrontendProxy.cpp'; fi`

smc_cored-HubProxy.o: observers/HubProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-HubProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-HubProxy.Tpo -c -o smc_cored-HubProxy.o `test -f 'observers/HubProxy.cpp' || echo '$(srcdir)/'`observers/HubProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-HubProxy.Tpo $(DEPDIR)/smc_cored-HubProxy.Po
#	source='observers/HubProxy.cpp' object='smc_cored-HubProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-HubProxy.o `test -f 'observers/HubProxy.cpp' || echo '$(srcdir)/'`observers/HubProxy.cpp

smc_cored-HubProxy.obj: observers/HubProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-HubProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-HubProxy.Tpo -c -o smc_cored-HubProxy.obj `if test -f 'observers/HubProxy.cpp'; then $(CYGPATH_W) 'observers/HubProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/HubProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-HubProxy.Tpo $(DEPDIR)/smc_cored-HubProxy.Po
#	source='observers/HubProxy.cpp' object='smc_cored-HubProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-HubProxy.obj `if test -f 'observers/HubProxy.cpp'; then $(CYGPATH_W) 'observers/HubProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/HubProxy.cpp'; fi`

smc_cored-ManagerProxy.o: observers/ManagerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-ManagerProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-ManagerProxy.Tpo -c -o smc_cored-ManagerProxy.o `test -f 'observers/ManagerProxy.cpp' || echo '$(srcdir)/'`observers/ManagerProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-ManagerProxy.Tpo $(DEPDIR)/smc_cored-ManagerProxy.Po
#	source='observers/ManagerProxy.cpp' object='smc_cored-ManagerProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-ManagerProxy.o `test -f 'observers/ManagerProxy.cpp' || echo '$(srcdir)/'`observers/ManagerProxy.cpp

smc_cored-ManagerProxy.obj: observers/ManagerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-ManagerProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-ManagerProxy.Tpo -c -o smc_cored-ManagerProxy.obj `if test -f 'observers/ManagerProxy.cpp'; then $(CYGPATH_W) 'observers/ManagerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/ManagerProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-ManagerProxy.Tpo $(DEPDIR)/smc_cored-ManagerProxy.Po
#	source='observers/ManagerProxy.cpp' object='smc_cored-ManagerProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-ManagerProxy.obj `if test -f 'observers/ManagerProxy.cpp'; then $(CYGPATH_W) 'observers/ManagerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/ManagerProxy.cpp'; fi`

smc_cored-StorageProxy.o: observers/StorageProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-StorageProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-StorageProxy.Tpo -c -o smc_cored-StorageProxy.o `test -f 'observers/StorageProxy.cpp' || echo '$(srcdir)/'`observers/StorageProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-StorageProxy.Tpo $(DEPDIR)/smc_cored-StorageProxy.Po
#	source='observers/StorageProxy.cpp' object='smc_cored-StorageProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-StorageProxy.o `test -f 'observers/StorageProxy.cpp' || echo '$(srcdir)/'`observers/StorageProxy.cpp

smc_cored-StorageProxy.obj: observers/StorageProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-StorageProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-StorageProxy.Tpo -c -o smc_cored-StorageProxy.obj `if test -f 'observers/StorageProxy.cpp'; then $(CYGPATH_W) 'observers/StorageProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/StorageProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-StorageProxy.Tpo $(DEPDIR)/smc_cored-StorageProxy.Po
#	source='observers/StorageProxy.cpp' object='smc_cored-StorageProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-StorageProxy.obj `if test -f 'observers/StorageProxy.cpp'; then $(CYGPATH_W) 'observers/StorageProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/StorageProxy.cpp'; fi`

smc_cored-SMCserverService.o: soap/SMCserverService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SMCserverService.o -MD -MP -MF $(DEPDIR)/smc_cored-SMCserverService.Tpo -c -o smc_cored-SMCserverService.o `test -f 'soap/SMCserverService.cpp' || echo '$(srcdir)/'`soap/SMCserverService.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SMCserverService.Tpo $(DEPDIR)/smc_cored-SMCserverService.Po
#	source='soap/SMCserverService.cpp' object='smc_cored-SMCserverService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SMCserverService.o `test -f 'soap/SMCserverService.cpp' || echo '$(srcdir)/'`soap/SMCserverService.cpp

smc_cored-SMCserverService.obj: soap/SMCserverService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SMCserverService.obj -MD -MP -MF $(DEPDIR)/smc_cored-SMCserverService.Tpo -c -o smc_cored-SMCserverService.obj `if test -f 'soap/SMCserverService.cpp'; then $(CYGPATH_W) 'soap/SMCserverService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverService.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SMCserverService.Tpo $(DEPDIR)/smc_cored-SMCserverService.Po
#	source='soap/SMCserverService.cpp' object='smc_cored-SMCserverService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SMCserverService.obj `if test -f 'soap/SMCserverService.cpp'; then $(CYGPATH_W) 'soap/SMCserverService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverService.cpp'; fi`

smc_cored-SMCagentProxy.o: soap/SMCagentProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SMCagentProxy.o -MD -MP -MF $(DEPDIR)/smc_cored-SMCagentProxy.Tpo -c -o smc_cored-SMCagentProxy.o `test -f 'soap/SMCagentProxy.cpp' || echo '$(srcdir)/'`soap/SMCagentProxy.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SMCagentProxy.Tpo $(DEPDIR)/smc_cored-SMCagentProxy.Po
#	source='soap/SMCagentProxy.cpp' object='smc_cored-SMCagentProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SMCagentProxy.o `test -f 'soap/SMCagentProxy.cpp' || echo '$(srcdir)/'`soap/SMCagentProxy.cpp

smc_cored-SMCagentProxy.obj: soap/SMCagentProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SMCagentProxy.obj -MD -MP -MF $(DEPDIR)/smc_cored-SMCagentProxy.Tpo -c -o smc_cored-SMCagentProxy.obj `if test -f 'soap/SMCagentProxy.cpp'; then $(CYGPATH_W) 'soap/SMCagentProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SMCagentProxy.Tpo $(DEPDIR)/smc_cored-SMCagentProxy.Po
#	source='soap/SMCagentProxy.cpp' object='smc_cored-SMCagentProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SMCagentProxy.obj `if test -f 'soap/SMCagentProxy.cpp'; then $(CYGPATH_W) 'soap/SMCagentProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentProxy.cpp'; fi`

smc_cored-SMCC.o: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SMCC.o -MD -MP -MF $(DEPDIR)/smc_cored-SMCC.Tpo -c -o smc_cored-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SMCC.Tpo $(DEPDIR)/smc_cored-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_cored-SMCC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp

smc_cored-SMCC.obj: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SMCC.obj -MD -MP -MF $(DEPDIR)/smc_cored-SMCC.Tpo -c -o smc_cored-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SMCC.Tpo $(DEPDIR)/smc_cored-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_cored-SMCC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`

smc_cored-SoapServer.o: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SoapServer.o -MD -MP -MF $(DEPDIR)/smc_cored-SoapServer.Tpo -c -o smc_cored-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp
	$(am__mv) $(DEPDIR)/smc_cored-SoapServer.Tpo $(DEPDIR)/smc_cored-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_cored-SoapServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp

smc_cored-SoapServer.obj: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-SoapServer.obj -MD -MP -MF $(DEPDIR)/smc_cored-SoapServer.Tpo -c -o smc_cored-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-SoapServer.Tpo $(DEPDIR)/smc_cored-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_cored-SoapServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`

smc_cored-DiscoveryServer.o: SMC/DiscoveryServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DiscoveryServer.o -MD -MP -MF $(DEPDIR)/smc_cored-DiscoveryServer.Tpo -c -o smc_cored-DiscoveryServer.o `test -f 'SMC/DiscoveryServer.cpp' || echo '$(srcdir)/'`SMC/DiscoveryServer.cpp
	$(am__mv) $(DEPDIR)/smc_cored-DiscoveryServer.Tpo $(DEPDIR)/smc_cored-DiscoveryServer.Po
#	source='SMC/DiscoveryServer.cpp' object='smc_cored-DiscoveryServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DiscoveryServer.o `test -f 'SMC/DiscoveryServer.cpp' || echo '$(srcdir)/'`SMC/DiscoveryServer.cpp

smc_cored-DiscoveryServer.obj: SMC/DiscoveryServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -MT smc_cored-DiscoveryServer.obj -MD -MP -MF $(DEPDIR)/smc_cored-DiscoveryServer.Tpo -c -o smc_cored-DiscoveryServer.obj `if test -f 'SMC/DiscoveryServer.cpp'; then $(CYGPATH_W) 'SMC/DiscoveryServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/DiscoveryServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_cored-DiscoveryServer.Tpo $(DEPDIR)/smc_cored-DiscoveryServer.Po
#	source='SMC/DiscoveryServer.cpp' object='smc_cored-DiscoveryServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_cored_CXXFLAGS) $(CXXFLAGS) -c -o smc_cored-DiscoveryServer.obj `if test -f 'SMC/DiscoveryServer.cpp'; then $(CYGPATH_W) 'SMC/DiscoveryServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/DiscoveryServer.cpp'; fi`

smc_hubd-main-hub.o: main-hub.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-main-hub.o -MD -MP -MF $(DEPDIR)/smc_hubd-main-hub.Tpo -c -o smc_hubd-main-hub.o `test -f 'main-hub.cpp' || echo '$(srcdir)/'`main-hub.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-main-hub.Tpo $(DEPDIR)/smc_hubd-main-hub.Po
#	source='main-hub.cpp' object='smc_hubd-main-hub.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-main-hub.o `test -f 'main-hub.cpp' || echo '$(srcdir)/'`main-hub.cpp

smc_hubd-main-hub.obj: main-hub.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-main-hub.obj -MD -MP -MF $(DEPDIR)/smc_hubd-main-hub.Tpo -c -o smc_hubd-main-hub.obj `if test -f 'main-hub.cpp'; then $(CYGPATH_W) 'main-hub.cpp'; else $(CYGPATH_W) '$(srcdir)/main-hub.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-main-hub.Tpo $(DEPDIR)/smc_hubd-main-hub.Po
#	source='main-hub.cpp' object='smc_hubd-main-hub.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-main-hub.obj `if test -f 'main-hub.cpp'; then $(CYGPATH_W) 'main-hub.cpp'; else $(CYGPATH_W) '$(srcdir)/main-hub.cpp'; fi`

smc_hubd-Stream.o: stream/Stream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Stream.o -MD -MP -MF $(DEPDIR)/smc_hubd-Stream.Tpo -c -o smc_hubd-Stream.o `test -f 'stream/Stream.cpp' || echo '$(srcdir)/'`stream/Stream.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Stream.Tpo $(DEPDIR)/smc_hubd-Stream.Po
#	source='stream/Stream.cpp' object='smc_hubd-Stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Stream.o `test -f 'stream/Stream.cpp' || echo '$(srcdir)/'`stream/Stream.cpp

smc_hubd-Stream.obj: stream/Stream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Stream.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Stream.Tpo -c -o smc_hubd-Stream.obj `if test -f 'stream/Stream.cpp'; then $(CYGPATH_W) 'stream/Stream.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Stream.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Stream.Tpo $(DEPDIR)/smc_hubd-Stream.Po
#	source='stream/Stream.cpp' object='smc_hubd-Stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Stream.obj `if test -f 'stream/Stream.cpp'; then $(CYGPATH_W) 'stream/Stream.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Stream.cpp'; fi`

smc_hubd-VideoCamStorage.o: stream/VideoCamStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-VideoCamStorage.o -MD -MP -MF $(DEPDIR)/smc_hubd-VideoCamStorage.Tpo -c -o smc_hubd-VideoCamStorage.o `test -f 'stream/VideoCamStorage.cpp' || echo '$(srcdir)/'`stream/VideoCamStorage.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-VideoCamStorage.Tpo $(DEPDIR)/smc_hubd-VideoCamStorage.Po
#	source='stream/VideoCamStorage.cpp' object='smc_hubd-VideoCamStorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-VideoCamStorage.o `test -f 'stream/VideoCamStorage.cpp' || echo '$(srcdir)/'`stream/VideoCamStorage.cpp

smc_hubd-VideoCamStorage.obj: stream/VideoCamStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-VideoCamStorage.obj -MD -MP -MF $(DEPDIR)/smc_hubd-VideoCamStorage.Tpo -c -o smc_hubd-VideoCamStorage.obj `if test -f 'stream/VideoCamStorage.cpp'; then $(CYGPATH_W) 'stream/VideoCamStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamStorage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-VideoCamStorage.Tpo $(DEPDIR)/smc_hubd-VideoCamStorage.Po
#	source='stream/VideoCamStorage.cpp' object='smc_hubd-VideoCamStorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-VideoCamStorage.obj `if test -f 'stream/VideoCamStorage.cpp'; then $(CYGPATH_W) 'stream/VideoCamStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamStorage.cpp'; fi`

smc_hubd-VideoCamUDP.o: stream/VideoCamUDP.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-VideoCamUDP.o -MD -MP -MF $(DEPDIR)/smc_hubd-VideoCamUDP.Tpo -c -o smc_hubd-VideoCamUDP.o `test -f 'stream/VideoCamUDP.cpp' || echo '$(srcdir)/'`stream/VideoCamUDP.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-VideoCamUDP.Tpo $(DEPDIR)/smc_hubd-VideoCamUDP.Po
#	source='stream/VideoCamUDP.cpp' object='smc_hubd-VideoCamUDP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-VideoCamUDP.o `test -f 'stream/VideoCamUDP.cpp' || echo '$(srcdir)/'`stream/VideoCamUDP.cpp

smc_hubd-VideoCamUDP.obj: stream/VideoCamUDP.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-VideoCamUDP.obj -MD -MP -MF $(DEPDIR)/smc_hubd-VideoCamUDP.Tpo -c -o smc_hubd-VideoCamUDP.obj `if test -f 'stream/VideoCamUDP.cpp'; then $(CYGPATH_W) 'stream/VideoCamUDP.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamUDP.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-VideoCamUDP.Tpo $(DEPDIR)/smc_hubd-VideoCamUDP.Po
#	source='stream/VideoCamUDP.cpp' object='smc_hubd-VideoCamUDP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-VideoCamUDP.obj `if test -f 'stream/VideoCamUDP.cpp'; then $(CYGPATH_W) 'stream/VideoCamUDP.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamUDP.cpp'; fi`

smc_hubd-VideoOutput.o: stream/VideoOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-VideoOutput.o -MD -MP -MF $(DEPDIR)/smc_hubd-VideoOutput.Tpo -c -o smc_hubd-VideoOutput.o `test -f 'stream/VideoOutput.cpp' || echo '$(srcdir)/'`stream/VideoOutput.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-VideoOutput.Tpo $(DEPDIR)/smc_hubd-VideoOutput.Po
#	source='stream/VideoOutput.cpp' object='smc_hubd-VideoOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-VideoOutput.o `test -f 'stream/VideoOutput.cpp' || echo '$(srcdir)/'`stream/VideoOutput.cpp

smc_hubd-VideoOutput.obj: stream/VideoOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-VideoOutput.obj -MD -MP -MF $(DEPDIR)/smc_hubd-VideoOutput.Tpo -c -o smc_hubd-VideoOutput.obj `if test -f 'stream/VideoOutput.cpp'; then $(CYGPATH_W) 'stream/VideoOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-VideoOutput.Tpo $(DEPDIR)/smc_hubd-VideoOutput.Po
#	source='stream/VideoOutput.cpp' object='smc_hubd-VideoOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-VideoOutput.obj `if test -f 'stream/VideoOutput.cpp'; then $(CYGPATH_W) 'stream/VideoOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoOutput.cpp'; fi`

smc_hubd-Streaming.o: stream/Streaming.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Streaming.o -MD -MP -MF $(DEPDIR)/smc_hubd-Streaming.Tpo -c -o smc_hubd-Streaming.o `test -f 'stream/Streaming.cpp' || echo '$(srcdir)/'`stream/Streaming.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Streaming.Tpo $(DEPDIR)/smc_hubd-Streaming.Po
#	source='stream/Streaming.cpp' object='smc_hubd-Streaming.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Streaming.o `test -f 'stream/Streaming.cpp' || echo '$(srcdir)/'`stream/Streaming.cpp

smc_hubd-Streaming.obj: stream/Streaming.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Streaming.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Streaming.Tpo -c -o smc_hubd-Streaming.obj `if test -f 'stream/Streaming.cpp'; then $(CYGPATH_W) 'stream/Streaming.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Streaming.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Streaming.Tpo $(DEPDIR)/smc_hubd-Streaming.Po
#	source='stream/Streaming.cpp' object='smc_hubd-Streaming.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Streaming.obj `if test -f 'stream/Streaming.cpp'; then $(CYGPATH_W) 'stream/Streaming.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Streaming.cpp'; fi`

smc_hubd-StorageFile.o: stream/StorageFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-StorageFile.o -MD -MP -MF $(DEPDIR)/smc_hubd-StorageFile.Tpo -c -o smc_hubd-StorageFile.o `test -f 'stream/StorageFile.cpp' || echo '$(srcdir)/'`stream/StorageFile.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-StorageFile.Tpo $(DEPDIR)/smc_hubd-StorageFile.Po
#	source='stream/StorageFile.cpp' object='smc_hubd-StorageFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-StorageFile.o `test -f 'stream/StorageFile.cpp' || echo '$(srcdir)/'`stream/StorageFile.cpp

smc_hubd-StorageFile.obj: stream/StorageFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-StorageFile.obj -MD -MP -MF $(DEPDIR)/smc_hubd-StorageFile.Tpo -c -o smc_hubd-StorageFile.obj `if test -f 'stream/StorageFile.cpp'; then $(CYGPATH_W) 'stream/StorageFile.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/StorageFile.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-StorageFile.Tpo $(DEPDIR)/smc_hubd-StorageFile.Po
#	source='stream/StorageFile.cpp' object='smc_hubd-StorageFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-StorageFile.obj `if test -f 'stream/StorageFile.cpp'; then $(CYGPATH_W) 'stream/StorageFile.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/StorageFile.cpp'; fi`

smc_hubd-RTSPserver.o: stream/RTSPserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserver.o -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserver.Tpo -c -o smc_hubd-RTSPserver.o `test -f 'stream/RTSPserver.cpp' || echo '$(srcdir)/'`stream/RTSPserver.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserver.Tpo $(DEPDIR)/smc_hubd-RTSPserver.Po
#	source='stream/RTSPserver.cpp' object='smc_hubd-RTSPserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserver.o `test -f 'stream/RTSPserver.cpp' || echo '$(srcdir)/'`stream/RTSPserver.cpp

smc_hubd-RTSPserver.obj: stream/RTSPserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserver.obj -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserver.Tpo -c -o smc_hubd-RTSPserver.obj `if test -f 'stream/RTSPserver.cpp'; then $(CYGPATH_W) 'stream/RTSPserver.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserver.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserver.Tpo $(DEPDIR)/smc_hubd-RTSPserver.Po
#	source='stream/RTSPserver.cpp' object='smc_hubd-RTSPserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserver.obj `if test -f 'stream/RTSPserver.cpp'; then $(CYGPATH_W) 'stream/RTSPserver.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserver.cpp'; fi`

smc_hubd-RTSPserverManager.o: stream/RTSPserverManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserverManager.o -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserverManager.Tpo -c -o smc_hubd-RTSPserverManager.o `test -f 'stream/RTSPserverManager.cpp' || echo '$(srcdir)/'`stream/RTSPserverManager.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserverManager.Tpo $(DEPDIR)/smc_hubd-RTSPserverManager.Po
#	source='stream/RTSPserverManager.cpp' object='smc_hubd-RTSPserverManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserverManager.o `test -f 'stream/RTSPserverManager.cpp' || echo '$(srcdir)/'`stream/RTSPserverManager.cpp

smc_hubd-RTSPserverManager.obj: stream/RTSPserverManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserverManager.obj -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserverManager.Tpo -c -o smc_hubd-RTSPserverManager.obj `if test -f 'stream/RTSPserverManager.cpp'; then $(CYGPATH_W) 'stream/RTSPserverManager.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserverManager.Tpo $(DEPDIR)/smc_hubd-RTSPserverManager.Po
#	source='stream/RTSPserverManager.cpp' object='smc_hubd-RTSPserverManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserverManager.obj `if test -f 'stream/RTSPserverManager.cpp'; then $(CYGPATH_W) 'stream/RTSPserverManager.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverManager.cpp'; fi`

smc_hubd-RTSPserverGate.o: stream/RTSPserverGate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserverGate.o -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserverGate.Tpo -c -o smc_hubd-RTSPserverGate.o `test -f 'stream/RTSPserverGate.cpp' || echo '$(srcdir)/'`stream/RTSPserverGate.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserverGate.Tpo $(DEPDIR)/smc_hubd-RTSPserverGate.Po
#	source='stream/RTSPserverGate.cpp' object='smc_hubd-RTSPserverGate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserverGate.o `test -f 'stream/RTSPserverGate.cpp' || echo '$(srcdir)/'`stream/RTSPserverGate.cpp

smc_hubd-RTSPserverGate.obj: stream/RTSPserverGate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserverGate.obj -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserverGate.Tpo -c -o smc_hubd-RTSPserverGate.obj `if test -f 'stream/RTSPserverGate.cpp'; then $(CYGPATH_W) 'stream/RTSPserverGate.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverGate.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserverGate.Tpo $(DEPDIR)/smc_hubd-RTSPserverGate.Po
#	source='stream/RTSPserverGate.cpp' object='smc_hubd-RTSPserverGate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserverGate.obj `if test -f 'stream/RTSPserverGate.cpp'; then $(CYGPATH_W) 'stream/RTSPserverGate.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverGate.cpp'; fi`

smc_hubd-RTSPserverStorage.o: stream/RTSPserverStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserverStorage.o -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserverStorage.Tpo -c -o smc_hubd-RTSPserverStorage.o `test -f 'stream/RTSPserverStorage.cpp' || echo '$(srcdir)/'`stream/RTSPserverStorage.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserverStorage.Tpo $(DEPDIR)/smc_hubd-RTSPserverStorage.Po
#	source='stream/RTSPserverStorage.cpp' object='smc_hubd-RTSPserverStorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserverStorage.o `test -f 'stream/RTSPserverStorage.cpp' || echo '$(srcdir)/'`stream/RTSPserverStorage.cpp

smc_hubd-RTSPserverStorage.obj: stream/RTSPserverStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RTSPserverStorage.obj -MD -MP -MF $(DEPDIR)/smc_hubd-RTSPserverStorage.Tpo -c -o smc_hubd-RTSPserverStorage.obj `if test -f 'stream/RTSPserverStorage.cpp'; then $(CYGPATH_W) 'stream/RTSPserverStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverStorage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-RTSPserverStorage.Tpo $(DEPDIR)/smc_hubd-RTSPserverStorage.Po
#	source='stream/RTSPserverStorage.cpp' object='smc_hubd-RTSPserverStorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RTSPserverStorage.obj `if test -f 'stream/RTSPserverStorage.cpp'; then $(CYGPATH_W) 'stream/RTSPserverStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverStorage.cpp'; fi`

smc_hubd-Request.o: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Request.o -MD -MP -MF $(DEPDIR)/smc_hubd-Request.Tpo -c -o smc_hubd-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Request.Tpo $(DEPDIR)/smc_hubd-Request.Po
#	source='onvif/Request.cpp' object='smc_hubd-Request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp

smc_hubd-Request.obj: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Request.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Request.Tpo -c -o smc_hubd-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Request.Tpo $(DEPDIR)/smc_hubd-Request.Po
#	source='onvif/Request.cpp' object='smc_hubd-Request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`

smc_hubd-DiscoveryRequest.o: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-DiscoveryRequest.o -MD -MP -MF $(DEPDIR)/smc_hubd-DiscoveryRequest.Tpo -c -o smc_hubd-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-DiscoveryRequest.Tpo $(DEPDIR)/smc_hubd-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_hubd-DiscoveryRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp

smc_hubd-DiscoveryRequest.obj: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-DiscoveryRequest.obj -MD -MP -MF $(DEPDIR)/smc_hubd-DiscoveryRequest.Tpo -c -o smc_hubd-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-DiscoveryRequest.Tpo $(DEPDIR)/smc_hubd-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_hubd-DiscoveryRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`

smc_hubd-SMCagentService.o: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SMCagentService.o -MD -MP -MF $(DEPDIR)/smc_hubd-SMCagentService.Tpo -c -o smc_hubd-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-SMCagentService.Tpo $(DEPDIR)/smc_hubd-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='smc_hubd-SMCagentService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp

smc_hubd-SMCagentService.obj: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SMCagentService.obj -MD -MP -MF $(DEPDIR)/smc_hubd-SMCagentService.Tpo -c -o smc_hubd-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-SMCagentService.Tpo $(DEPDIR)/smc_hubd-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='smc_hubd-SMCagentService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`

smc_hubd-SMCserverProxy.o: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SMCserverProxy.o -MD -MP -MF $(DEPDIR)/smc_hubd-SMCserverProxy.Tpo -c -o smc_hubd-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-SMCserverProxy.Tpo $(DEPDIR)/smc_hubd-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='smc_hubd-SMCserverProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp

smc_hubd-SMCserverProxy.obj: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SMCserverProxy.obj -MD -MP -MF $(DEPDIR)/smc_hubd-SMCserverProxy.Tpo -c -o smc_hubd-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-SMCserverProxy.Tpo $(DEPDIR)/smc_hubd-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='smc_hubd-SMCserverProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`

smc_hubd-SMCC.o: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SMCC.o -MD -MP -MF $(DEPDIR)/smc_hubd-SMCC.Tpo -c -o smc_hubd-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-SMCC.Tpo $(DEPDIR)/smc_hubd-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_hubd-SMCC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp

smc_hubd-SMCC.obj: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SMCC.obj -MD -MP -MF $(DEPDIR)/smc_hubd-SMCC.Tpo -c -o smc_hubd-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-SMCC.Tpo $(DEPDIR)/smc_hubd-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_hubd-SMCC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`

smc_hubd-Thread.o: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Thread.o -MD -MP -MF $(DEPDIR)/smc_hubd-Thread.Tpo -c -o smc_hubd-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Thread.Tpo $(DEPDIR)/smc_hubd-Thread.Po
#	source='patterns/Thread.cpp' object='smc_hubd-Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp

smc_hubd-Thread.obj: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Thread.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Thread.Tpo -c -o smc_hubd-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Thread.Tpo $(DEPDIR)/smc_hubd-Thread.Po
#	source='patterns/Thread.cpp' object='smc_hubd-Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`

smc_hubd-SoapServer.o: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SoapServer.o -MD -MP -MF $(DEPDIR)/smc_hubd-SoapServer.Tpo -c -o smc_hubd-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-SoapServer.Tpo $(DEPDIR)/smc_hubd-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_hubd-SoapServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp

smc_hubd-SoapServer.obj: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-SoapServer.obj -MD -MP -MF $(DEPDIR)/smc_hubd-SoapServer.Tpo -c -o smc_hubd-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-SoapServer.Tpo $(DEPDIR)/smc_hubd-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_hubd-SoapServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`

smc_hubd-Hello.o: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Hello.o -MD -MP -MF $(DEPDIR)/smc_hubd-Hello.Tpo -c -o smc_hubd-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Hello.Tpo $(DEPDIR)/smc_hubd-Hello.Po
#	source='onvif/Hello.cpp' object='smc_hubd-Hello.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp

smc_hubd-Hello.obj: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Hello.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Hello.Tpo -c -o smc_hubd-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Hello.Tpo $(DEPDIR)/smc_hubd-Hello.Po
#	source='onvif/Hello.cpp' object='smc_hubd-Hello.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`

smc_hubd-Bye.o: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Bye.o -MD -MP -MF $(DEPDIR)/smc_hubd-Bye.Tpo -c -o smc_hubd-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Bye.Tpo $(DEPDIR)/smc_hubd-Bye.Po
#	source='onvif/Bye.cpp' object='smc_hubd-Bye.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp

smc_hubd-Bye.obj: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Bye.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Bye.Tpo -c -o smc_hubd-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Bye.Tpo $(DEPDIR)/smc_hubd-Bye.Po
#	source='onvif/Bye.cpp' object='smc_hubd-Bye.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`

smc_hubd-Application.o: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Application.o -MD -MP -MF $(DEPDIR)/smc_hubd-Application.Tpo -c -o smc_hubd-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Application.Tpo $(DEPDIR)/smc_hubd-Application.Po
#	source='apps/Application.cpp' object='smc_hubd-Application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp

smc_hubd-Application.obj: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Application.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Application.Tpo -c -o smc_hubd-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Application.Tpo $(DEPDIR)/smc_hubd-Application.Po
#	source='apps/Application.cpp' object='smc_hubd-Application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`

smc_hubd-HubAgent.o: apps/HubAgent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-HubAgent.o -MD -MP -MF $(DEPDIR)/smc_hubd-HubAgent.Tpo -c -o smc_hubd-HubAgent.o `test -f 'apps/HubAgent.cpp' || echo '$(srcdir)/'`apps/HubAgent.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-HubAgent.Tpo $(DEPDIR)/smc_hubd-HubAgent.Po
#	source='apps/HubAgent.cpp' object='smc_hubd-HubAgent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-HubAgent.o `test -f 'apps/HubAgent.cpp' || echo '$(srcdir)/'`apps/HubAgent.cpp

smc_hubd-HubAgent.obj: apps/HubAgent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-HubAgent.obj -MD -MP -MF $(DEPDIR)/smc_hubd-HubAgent.Tpo -c -o smc_hubd-HubAgent.obj `if test -f 'apps/HubAgent.cpp'; then $(CYGPATH_W) 'apps/HubAgent.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/HubAgent.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-HubAgent.Tpo $(DEPDIR)/smc_hubd-HubAgent.Po
#	source='apps/HubAgent.cpp' object='smc_hubd-HubAgent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-HubAgent.obj `if test -f 'apps/HubAgent.cpp'; then $(CYGPATH_W) 'apps/HubAgent.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/HubAgent.cpp'; fi`

smc_hubd-Subject.o: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Subject.o -MD -MP -MF $(DEPDIR)/smc_hubd-Subject.Tpo -c -o smc_hubd-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Subject.Tpo $(DEPDIR)/smc_hubd-Subject.Po
#	source='patterns/Subject.cpp' object='smc_hubd-Subject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp

smc_hubd-Subject.obj: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Subject.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Subject.Tpo -c -o smc_hubd-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Subject.Tpo $(DEPDIR)/smc_hubd-Subject.Po
#	source='patterns/Subject.cpp' object='smc_hubd-Subject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`

smc_hubd-Observer.o: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Observer.o -MD -MP -MF $(DEPDIR)/smc_hubd-Observer.Tpo -c -o smc_hubd-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Observer.Tpo $(DEPDIR)/smc_hubd-Observer.Po
#	source='patterns/Observer.cpp' object='smc_hubd-Observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp

smc_hubd-Observer.obj: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Observer.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Observer.Tpo -c -o smc_hubd-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Observer.Tpo $(DEPDIR)/smc_hubd-Observer.Po
#	source='patterns/Observer.cpp' object='smc_hubd-Observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`

smc_hubd-Command.o: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Command.o -MD -MP -MF $(DEPDIR)/smc_hubd-Command.Tpo -c -o smc_hubd-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-Command.Tpo $(DEPDIR)/smc_hubd-Command.Po
#	source='patterns/Command.cpp' object='smc_hubd-Command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp

smc_hubd-Command.obj: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-Command.obj -MD -MP -MF $(DEPDIR)/smc_hubd-Command.Tpo -c -o smc_hubd-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-Command.Tpo $(DEPDIR)/smc_hubd-Command.Po
#	source='patterns/Command.cpp' object='smc_hubd-Command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`

smc_hubd-RemoteProxy.o: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RemoteProxy.o -MD -MP -MF $(DEPDIR)/smc_hubd-RemoteProxy.Tpo -c -o smc_hubd-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-RemoteProxy.Tpo $(DEPDIR)/smc_hubd-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_hubd-RemoteProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp

smc_hubd-RemoteProxy.obj: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-RemoteProxy.obj -MD -MP -MF $(DEPDIR)/smc_hubd-RemoteProxy.Tpo -c -o smc_hubd-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-RemoteProxy.Tpo $(DEPDIR)/smc_hubd-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_hubd-RemoteProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`

smc_hubd-CoreServerProxy.o: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-CoreServerProxy.o -MD -MP -MF $(DEPDIR)/smc_hubd-CoreServerProxy.Tpo -c -o smc_hubd-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp
	$(am__mv) $(DEPDIR)/smc_hubd-CoreServerProxy.Tpo $(DEPDIR)/smc_hubd-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='smc_hubd-CoreServerProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp

smc_hubd-CoreServerProxy.obj: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -MT smc_hubd-CoreServerProxy.obj -MD -MP -MF $(DEPDIR)/smc_hubd-CoreServerProxy.Tpo -c -o smc_hubd-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_hubd-CoreServerProxy.Tpo $(DEPDIR)/smc_hubd-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='smc_hubd-CoreServerProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_hubd_CXXFLAGS) $(CXXFLAGS) -c -o smc_hubd-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`

smc_manager-main-manager.o: main-manager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-main-manager.o -MD -MP -MF $(DEPDIR)/smc_manager-main-manager.Tpo -c -o smc_manager-main-manager.o `test -f 'main-manager.cpp' || echo '$(srcdir)/'`main-manager.cpp
	$(am__mv) $(DEPDIR)/smc_manager-main-manager.Tpo $(DEPDIR)/smc_manager-main-manager.Po
#	source='main-manager.cpp' object='smc_manager-main-manager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-main-manager.o `test -f 'main-manager.cpp' || echo '$(srcdir)/'`main-manager.cpp

smc_manager-main-manager.obj: main-manager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-main-manager.obj -MD -MP -MF $(DEPDIR)/smc_manager-main-manager.Tpo -c -o smc_manager-main-manager.obj `if test -f 'main-manager.cpp'; then $(CYGPATH_W) 'main-manager.cpp'; else $(CYGPATH_W) '$(srcdir)/main-manager.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-main-manager.Tpo $(DEPDIR)/smc_manager-main-manager.Po
#	source='main-manager.cpp' object='smc_manager-main-manager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-main-manager.obj `if test -f 'main-manager.cpp'; then $(CYGPATH_W) 'main-manager.cpp'; else $(CYGPATH_W) '$(srcdir)/main-manager.cpp'; fi`

smc_manager-Stream.o: stream/Stream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Stream.o -MD -MP -MF $(DEPDIR)/smc_manager-Stream.Tpo -c -o smc_manager-Stream.o `test -f 'stream/Stream.cpp' || echo '$(srcdir)/'`stream/Stream.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Stream.Tpo $(DEPDIR)/smc_manager-Stream.Po
#	source='stream/Stream.cpp' object='smc_manager-Stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Stream.o `test -f 'stream/Stream.cpp' || echo '$(srcdir)/'`stream/Stream.cpp

smc_manager-Stream.obj: stream/Stream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Stream.obj -MD -MP -MF $(DEPDIR)/smc_manager-Stream.Tpo -c -o smc_manager-Stream.obj `if test -f 'stream/Stream.cpp'; then $(CYGPATH_W) 'stream/Stream.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Stream.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Stream.Tpo $(DEPDIR)/smc_manager-Stream.Po
#	source='stream/Stream.cpp' object='smc_manager-Stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Stream.obj `if test -f 'stream/Stream.cpp'; then $(CYGPATH_W) 'stream/Stream.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Stream.cpp'; fi`

smc_manager-VideoCamStorage.o: stream/VideoCamStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-VideoCamStorage.o -MD -MP -MF $(DEPDIR)/smc_manager-VideoCamStorage.Tpo -c -o smc_manager-VideoCamStorage.o `test -f 'stream/VideoCamStorage.cpp' || echo '$(srcdir)/'`stream/VideoCamStorage.cpp
	$(am__mv) $(DEPDIR)/smc_manager-VideoCamStorage.Tpo $(DEPDIR)/smc_manager-VideoCamStorage.Po
#	source='stream/VideoCamStorage.cpp' object='smc_manager-VideoCamStorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-VideoCamStorage.o `test -f 'stream/VideoCamStorage.cpp' || echo '$(srcdir)/'`stream/VideoCamStorage.cpp

smc_manager-VideoCamStorage.obj: stream/VideoCamStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-VideoCamStorage.obj -MD -MP -MF $(DEPDIR)/smc_manager-VideoCamStorage.Tpo -c -o smc_manager-VideoCamStorage.obj `if test -f 'stream/VideoCamStorage.cpp'; then $(CYGPATH_W) 'stream/VideoCamStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamStorage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-VideoCamStorage.Tpo $(DEPDIR)/smc_manager-VideoCamStorage.Po
#	source='stream/VideoCamStorage.cpp' object='smc_manager-VideoCamStorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-VideoCamStorage.obj `if test -f 'stream/VideoCamStorage.cpp'; then $(CYGPATH_W) 'stream/VideoCamStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamStorage.cpp'; fi`

smc_manager-VideoCamUDP.o: stream/VideoCamUDP.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-VideoCamUDP.o -MD -MP -MF $(DEPDIR)/smc_manager-VideoCamUDP.Tpo -c -o smc_manager-VideoCamUDP.o `test -f 'stream/VideoCamUDP.cpp' || echo '$(srcdir)/'`stream/VideoCamUDP.cpp
	$(am__mv) $(DEPDIR)/smc_manager-VideoCamUDP.Tpo $(DEPDIR)/smc_manager-VideoCamUDP.Po
#	source='stream/VideoCamUDP.cpp' object='smc_manager-VideoCamUDP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-VideoCamUDP.o `test -f 'stream/VideoCamUDP.cpp' || echo '$(srcdir)/'`stream/VideoCamUDP.cpp

smc_manager-VideoCamUDP.obj: stream/VideoCamUDP.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-VideoCamUDP.obj -MD -MP -MF $(DEPDIR)/smc_manager-VideoCamUDP.Tpo -c -o smc_manager-VideoCamUDP.obj `if test -f 'stream/VideoCamUDP.cpp'; then $(CYGPATH_W) 'stream/VideoCamUDP.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamUDP.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-VideoCamUDP.Tpo $(DEPDIR)/smc_manager-VideoCamUDP.Po
#	source='stream/VideoCamUDP.cpp' object='smc_manager-VideoCamUDP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-VideoCamUDP.obj `if test -f 'stream/VideoCamUDP.cpp'; then $(CYGPATH_W) 'stream/VideoCamUDP.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamUDP.cpp'; fi`

smc_manager-VideoOutput.o: stream/VideoOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-VideoOutput.o -MD -MP -MF $(DEPDIR)/smc_manager-VideoOutput.Tpo -c -o smc_manager-VideoOutput.o `test -f 'stream/VideoOutput.cpp' || echo '$(srcdir)/'`stream/VideoOutput.cpp
	$(am__mv) $(DEPDIR)/smc_manager-VideoOutput.Tpo $(DEPDIR)/smc_manager-VideoOutput.Po
#	source='stream/VideoOutput.cpp' object='smc_manager-VideoOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-VideoOutput.o `test -f 'stream/VideoOutput.cpp' || echo '$(srcdir)/'`stream/VideoOutput.cpp

smc_manager-VideoOutput.obj: stream/VideoOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-VideoOutput.obj -MD -MP -MF $(DEPDIR)/smc_manager-VideoOutput.Tpo -c -o smc_manager-VideoOutput.obj `if test -f 'stream/VideoOutput.cpp'; then $(CYGPATH_W) 'stream/VideoOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-VideoOutput.Tpo $(DEPDIR)/smc_manager-VideoOutput.Po
#	source='stream/VideoOutput.cpp' object='smc_manager-VideoOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-VideoOutput.obj `if test -f 'stream/VideoOutput.cpp'; then $(CYGPATH_W) 'stream/VideoOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoOutput.cpp'; fi`

smc_manager-Streaming.o: stream/Streaming.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Streaming.o -MD -MP -MF $(DEPDIR)/smc_manager-Streaming.Tpo -c -o smc_manager-Streaming.o `test -f 'stream/Streaming.cpp' || echo '$(srcdir)/'`stream/Streaming.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Streaming.Tpo $(DEPDIR)/smc_manager-Streaming.Po
#	source='stream/Streaming.cpp' object='smc_manager-Streaming.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Streaming.o `test -f 'stream/Streaming.cpp' || echo '$(srcdir)/'`stream/Streaming.cpp

smc_manager-Streaming.obj: stream/Streaming.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Streaming.obj -MD -MP -MF $(DEPDIR)/smc_manager-Streaming.Tpo -c -o smc_manager-Streaming.obj `if test -f 'stream/Streaming.cpp'; then $(CYGPATH_W) 'stream/Streaming.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Streaming.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Streaming.Tpo $(DEPDIR)/smc_manager-Streaming.Po
#	source='stream/Streaming.cpp' object='smc_manager-Streaming.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Streaming.obj `if test -f 'stream/Streaming.cpp'; then $(CYGPATH_W) 'stream/Streaming.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Streaming.cpp'; fi`

smc_manager-StorageFile.o: stream/StorageFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-StorageFile.o -MD -MP -MF $(DEPDIR)/smc_manager-StorageFile.Tpo -c -o smc_manager-StorageFile.o `test -f 'stream/StorageFile.cpp' || echo '$(srcdir)/'`stream/StorageFile.cpp
	$(am__mv) $(DEPDIR)/smc_manager-StorageFile.Tpo $(DEPDIR)/smc_manager-StorageFile.Po
#	source='stream/StorageFile.cpp' object='smc_manager-StorageFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-StorageFile.o `test -f 'stream/StorageFile.cpp' || echo '$(srcdir)/'`stream/StorageFile.cpp

smc_manager-StorageFile.obj: stream/StorageFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-StorageFile.obj -MD -MP -MF $(DEPDIR)/smc_manager-StorageFile.Tpo -c -o smc_manager-StorageFile.obj `if test -f 'stream/StorageFile.cpp'; then $(CYGPATH_W) 'stream/StorageFile.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/StorageFile.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-StorageFile.Tpo $(DEPDIR)/smc_manager-StorageFile.Po
#	source='stream/StorageFile.cpp' object='smc_manager-StorageFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-StorageFile.obj `if test -f 'stream/StorageFile.cpp'; then $(CYGPATH_W) 'stream/StorageFile.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/StorageFile.cpp'; fi`

smc_manager-RTSPserver.o: stream/RTSPserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserver.o -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserver.Tpo -c -o smc_manager-RTSPserver.o `test -f 'stream/RTSPserver.cpp' || echo '$(srcdir)/'`stream/RTSPserver.cpp
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserver.Tpo $(DEPDIR)/smc_manager-RTSPserver.Po
#	source='stream/RTSPserver.cpp' object='smc_manager-RTSPserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserver.o `test -f 'stream/RTSPserver.cpp' || echo '$(srcdir)/'`stream/RTSPserver.cpp

smc_manager-RTSPserver.obj: stream/RTSPserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserver.obj -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserver.Tpo -c -o smc_manager-RTSPserver.obj `if test -f 'stream/RTSPserver.cpp'; then $(CYGPATH_W) 'stream/RTSPserver.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserver.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserver.Tpo $(DEPDIR)/smc_manager-RTSPserver.Po
#	source='stream/RTSPserver.cpp' object='smc_manager-RTSPserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserver.obj `if test -f 'stream/RTSPserver.cpp'; then $(CYGPATH_W) 'stream/RTSPserver.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserver.cpp'; fi`

smc_manager-RTSPserverManager.o: stream/RTSPserverManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserverManager.o -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserverManager.Tpo -c -o smc_manager-RTSPserverManager.o `test -f 'stream/RTSPserverManager.cpp' || echo '$(srcdir)/'`stream/RTSPserverManager.cpp
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserverManager.Tpo $(DEPDIR)/smc_manager-RTSPserverManager.Po
#	source='stream/RTSPserverManager.cpp' object='smc_manager-RTSPserverManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserverManager.o `test -f 'stream/RTSPserverManager.cpp' || echo '$(srcdir)/'`stream/RTSPserverManager.cpp

smc_manager-RTSPserverManager.obj: stream/RTSPserverManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserverManager.obj -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserverManager.Tpo -c -o smc_manager-RTSPserverManager.obj `if test -f 'stream/RTSPserverManager.cpp'; then $(CYGPATH_W) 'stream/RTSPserverManager.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserverManager.Tpo $(DEPDIR)/smc_manager-RTSPserverManager.Po
#	source='stream/RTSPserverManager.cpp' object='smc_manager-RTSPserverManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserverManager.obj `if test -f 'stream/RTSPserverManager.cpp'; then $(CYGPATH_W) 'stream/RTSPserverManager.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverManager.cpp'; fi`

smc_manager-RTSPserverGate.o: stream/RTSPserverGate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserverGate.o -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserverGate.Tpo -c -o smc_manager-RTSPserverGate.o `test -f 'stream/RTSPserverGate.cpp' || echo '$(srcdir)/'`stream/RTSPserverGate.cpp
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserverGate.Tpo $(DEPDIR)/smc_manager-RTSPserverGate.Po
#	source='stream/RTSPserverGate.cpp' object='smc_manager-RTSPserverGate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserverGate.o `test -f 'stream/RTSPserverGate.cpp' || echo '$(srcdir)/'`stream/RTSPserverGate.cpp

smc_manager-RTSPserverGate.obj: stream/RTSPserverGate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserverGate.obj -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserverGate.Tpo -c -o smc_manager-RTSPserverGate.obj `if test -f 'stream/RTSPserverGate.cpp'; then $(CYGPATH_W) 'stream/RTSPserverGate.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverGate.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserverGate.Tpo $(DEPDIR)/smc_manager-RTSPserverGate.Po
#	source='stream/RTSPserverGate.cpp' object='smc_manager-RTSPserverGate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserverGate.obj `if test -f 'stream/RTSPserverGate.cpp'; then $(CYGPATH_W) 'stream/RTSPserverGate.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverGate.cpp'; fi`

smc_manager-RTSPserverStorage.o: stream/RTSPserverStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserverStorage.o -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserverStorage.Tpo -c -o smc_manager-RTSPserverStorage.o `test -f 'stream/RTSPserverStorage.cpp' || echo '$(srcdir)/'`stream/RTSPserverStorage.cpp
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserverStorage.Tpo $(DEPDIR)/smc_manager-RTSPserverStorage.Po
#	source='stream/RTSPserverStorage.cpp' object='smc_manager-RTSPserverStorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserverStorage.o `test -f 'stream/RTSPserverStorage.cpp' || echo '$(srcdir)/'`stream/RTSPserverStorage.cpp

smc_manager-RTSPserverStorage.obj: stream/RTSPserverStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RTSPserverStorage.obj -MD -MP -MF $(DEPDIR)/smc_manager-RTSPserverStorage.Tpo -c -o smc_manager-RTSPserverStorage.obj `if test -f 'stream/RTSPserverStorage.cpp'; then $(CYGPATH_W) 'stream/RTSPserverStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverStorage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-RTSPserverStorage.Tpo $(DEPDIR)/smc_manager-RTSPserverStorage.Po
#	source='stream/RTSPserverStorage.cpp' object='smc_manager-RTSPserverStorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RTSPserverStorage.obj `if test -f 'stream/RTSPserverStorage.cpp'; then $(CYGPATH_W) 'stream/RTSPserverStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverStorage.cpp'; fi`

smc_manager-Request.o: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Request.o -MD -MP -MF $(DEPDIR)/smc_manager-Request.Tpo -c -o smc_manager-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Request.Tpo $(DEPDIR)/smc_manager-Request.Po
#	source='onvif/Request.cpp' object='smc_manager-Request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp

smc_manager-Request.obj: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Request.obj -MD -MP -MF $(DEPDIR)/smc_manager-Request.Tpo -c -o smc_manager-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Request.Tpo $(DEPDIR)/smc_manager-Request.Po
#	source='onvif/Request.cpp' object='smc_manager-Request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`

smc_manager-DiscoveryRequest.o: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-DiscoveryRequest.o -MD -MP -MF $(DEPDIR)/smc_manager-DiscoveryRequest.Tpo -c -o smc_manager-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp
	$(am__mv) $(DEPDIR)/smc_manager-DiscoveryRequest.Tpo $(DEPDIR)/smc_manager-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_manager-DiscoveryRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp

smc_manager-DiscoveryRequest.obj: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-DiscoveryRequest.obj -MD -MP -MF $(DEPDIR)/smc_manager-DiscoveryRequest.Tpo -c -o smc_manager-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-DiscoveryRequest.Tpo $(DEPDIR)/smc_manager-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_manager-DiscoveryRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`

smc_manager-SMCagentService.o: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SMCagentService.o -MD -MP -MF $(DEPDIR)/smc_manager-SMCagentService.Tpo -c -o smc_manager-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp
	$(am__mv) $(DEPDIR)/smc_manager-SMCagentService.Tpo $(DEPDIR)/smc_manager-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='smc_manager-SMCagentService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp

smc_manager-SMCagentService.obj: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SMCagentService.obj -MD -MP -MF $(DEPDIR)/smc_manager-SMCagentService.Tpo -c -o smc_manager-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-SMCagentService.Tpo $(DEPDIR)/smc_manager-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='smc_manager-SMCagentService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`

smc_manager-SMCserverProxy.o: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SMCserverProxy.o -MD -MP -MF $(DEPDIR)/smc_manager-SMCserverProxy.Tpo -c -o smc_manager-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp
	$(am__mv) $(DEPDIR)/smc_manager-SMCserverProxy.Tpo $(DEPDIR)/smc_manager-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='smc_manager-SMCserverProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp

smc_manager-SMCserverProxy.obj: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SMCserverProxy.obj -MD -MP -MF $(DEPDIR)/smc_manager-SMCserverProxy.Tpo -c -o smc_manager-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-SMCserverProxy.Tpo $(DEPDIR)/smc_manager-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='smc_manager-SMCserverProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`

smc_manager-SMCC.o: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SMCC.o -MD -MP -MF $(DEPDIR)/smc_manager-SMCC.Tpo -c -o smc_manager-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp
	$(am__mv) $(DEPDIR)/smc_manager-SMCC.Tpo $(DEPDIR)/smc_manager-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_manager-SMCC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp

smc_manager-SMCC.obj: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SMCC.obj -MD -MP -MF $(DEPDIR)/smc_manager-SMCC.Tpo -c -o smc_manager-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-SMCC.Tpo $(DEPDIR)/smc_manager-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_manager-SMCC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`

smc_manager-Thread.o: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Thread.o -MD -MP -MF $(DEPDIR)/smc_manager-Thread.Tpo -c -o smc_manager-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Thread.Tpo $(DEPDIR)/smc_manager-Thread.Po
#	source='patterns/Thread.cpp' object='smc_manager-Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp

smc_manager-Thread.obj: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Thread.obj -MD -MP -MF $(DEPDIR)/smc_manager-Thread.Tpo -c -o smc_manager-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Thread.Tpo $(DEPDIR)/smc_manager-Thread.Po
#	source='patterns/Thread.cpp' object='smc_manager-Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`

smc_manager-SoapServer.o: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SoapServer.o -MD -MP -MF $(DEPDIR)/smc_manager-SoapServer.Tpo -c -o smc_manager-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp
	$(am__mv) $(DEPDIR)/smc_manager-SoapServer.Tpo $(DEPDIR)/smc_manager-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_manager-SoapServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp

smc_manager-SoapServer.obj: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-SoapServer.obj -MD -MP -MF $(DEPDIR)/smc_manager-SoapServer.Tpo -c -o smc_manager-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-SoapServer.Tpo $(DEPDIR)/smc_manager-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_manager-SoapServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`

smc_manager-Hello.o: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Hello.o -MD -MP -MF $(DEPDIR)/smc_manager-Hello.Tpo -c -o smc_manager-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Hello.Tpo $(DEPDIR)/smc_manager-Hello.Po
#	source='onvif/Hello.cpp' object='smc_manager-Hello.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp

smc_manager-Hello.obj: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Hello.obj -MD -MP -MF $(DEPDIR)/smc_manager-Hello.Tpo -c -o smc_manager-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Hello.Tpo $(DEPDIR)/smc_manager-Hello.Po
#	source='onvif/Hello.cpp' object='smc_manager-Hello.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`

smc_manager-Bye.o: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Bye.o -MD -MP -MF $(DEPDIR)/smc_manager-Bye.Tpo -c -o smc_manager-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Bye.Tpo $(DEPDIR)/smc_manager-Bye.Po
#	source='onvif/Bye.cpp' object='smc_manager-Bye.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp

smc_manager-Bye.obj: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Bye.obj -MD -MP -MF $(DEPDIR)/smc_manager-Bye.Tpo -c -o smc_manager-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Bye.Tpo $(DEPDIR)/smc_manager-Bye.Po
#	source='onvif/Bye.cpp' object='smc_manager-Bye.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`

smc_manager-Application.o: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Application.o -MD -MP -MF $(DEPDIR)/smc_manager-Application.Tpo -c -o smc_manager-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Application.Tpo $(DEPDIR)/smc_manager-Application.Po
#	source='apps/Application.cpp' object='smc_manager-Application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp

smc_manager-Application.obj: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Application.obj -MD -MP -MF $(DEPDIR)/smc_manager-Application.Tpo -c -o smc_manager-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Application.Tpo $(DEPDIR)/smc_manager-Application.Po
#	source='apps/Application.cpp' object='smc_manager-Application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`

smc_manager-ManagerAgent.o: apps/ManagerAgent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-ManagerAgent.o -MD -MP -MF $(DEPDIR)/smc_manager-ManagerAgent.Tpo -c -o smc_manager-ManagerAgent.o `test -f 'apps/ManagerAgent.cpp' || echo '$(srcdir)/'`apps/ManagerAgent.cpp
	$(am__mv) $(DEPDIR)/smc_manager-ManagerAgent.Tpo $(DEPDIR)/smc_manager-ManagerAgent.Po
#	source='apps/ManagerAgent.cpp' object='smc_manager-ManagerAgent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-ManagerAgent.o `test -f 'apps/ManagerAgent.cpp' || echo '$(srcdir)/'`apps/ManagerAgent.cpp

smc_manager-ManagerAgent.obj: apps/ManagerAgent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-ManagerAgent.obj -MD -MP -MF $(DEPDIR)/smc_manager-ManagerAgent.Tpo -c -o smc_manager-ManagerAgent.obj `if test -f 'apps/ManagerAgent.cpp'; then $(CYGPATH_W) 'apps/ManagerAgent.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/ManagerAgent.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-ManagerAgent.Tpo $(DEPDIR)/smc_manager-ManagerAgent.Po
#	source='apps/ManagerAgent.cpp' object='smc_manager-ManagerAgent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-ManagerAgent.obj `if test -f 'apps/ManagerAgent.cpp'; then $(CYGPATH_W) 'apps/ManagerAgent.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/ManagerAgent.cpp'; fi`

smc_manager-Subject.o: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Subject.o -MD -MP -MF $(DEPDIR)/smc_manager-Subject.Tpo -c -o smc_manager-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Subject.Tpo $(DEPDIR)/smc_manager-Subject.Po
#	source='patterns/Subject.cpp' object='smc_manager-Subject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp

smc_manager-Subject.obj: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Subject.obj -MD -MP -MF $(DEPDIR)/smc_manager-Subject.Tpo -c -o smc_manager-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Subject.Tpo $(DEPDIR)/smc_manager-Subject.Po
#	source='patterns/Subject.cpp' object='smc_manager-Subject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`

smc_manager-Observer.o: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Observer.o -MD -MP -MF $(DEPDIR)/smc_manager-Observer.Tpo -c -o smc_manager-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Observer.Tpo $(DEPDIR)/smc_manager-Observer.Po
#	source='patterns/Observer.cpp' object='smc_manager-Observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp

smc_manager-Observer.obj: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Observer.obj -MD -MP -MF $(DEPDIR)/smc_manager-Observer.Tpo -c -o smc_manager-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Observer.Tpo $(DEPDIR)/smc_manager-Observer.Po
#	source='patterns/Observer.cpp' object='smc_manager-Observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`

smc_manager-Command.o: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Command.o -MD -MP -MF $(DEPDIR)/smc_manager-Command.Tpo -c -o smc_manager-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp
	$(am__mv) $(DEPDIR)/smc_manager-Command.Tpo $(DEPDIR)/smc_manager-Command.Po
#	source='patterns/Command.cpp' object='smc_manager-Command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp

smc_manager-Command.obj: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-Command.obj -MD -MP -MF $(DEPDIR)/smc_manager-Command.Tpo -c -o smc_manager-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-Command.Tpo $(DEPDIR)/smc_manager-Command.Po
#	source='patterns/Command.cpp' object='smc_manager-Command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`

smc_manager-RemoteProxy.o: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RemoteProxy.o -MD -MP -MF $(DEPDIR)/smc_manager-RemoteProxy.Tpo -c -o smc_manager-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp
	$(am__mv) $(DEPDIR)/smc_manager-RemoteProxy.Tpo $(DEPDIR)/smc_manager-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_manager-RemoteProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp

smc_manager-RemoteProxy.obj: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-RemoteProxy.obj -MD -MP -MF $(DEPDIR)/smc_manager-RemoteProxy.Tpo -c -o smc_manager-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-RemoteProxy.Tpo $(DEPDIR)/smc_manager-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_manager-RemoteProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`

smc_manager-CoreServerProxy.o: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-CoreServerProxy.o -MD -MP -MF $(DEPDIR)/smc_manager-CoreServerProxy.Tpo -c -o smc_manager-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp
	$(am__mv) $(DEPDIR)/smc_manager-CoreServerProxy.Tpo $(DEPDIR)/smc_manager-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='smc_manager-CoreServerProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp

smc_manager-CoreServerProxy.obj: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -MT smc_manager-CoreServerProxy.obj -MD -MP -MF $(DEPDIR)/smc_manager-CoreServerProxy.Tpo -c -o smc_manager-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_manager-CoreServerProxy.Tpo $(DEPDIR)/smc_manager-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='smc_manager-CoreServerProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_manager_CXXFLAGS) $(CXXFLAGS) -c -o smc_manager-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`

smc_storaged-main-storage.o: main-storage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-main-storage.o -MD -MP -MF $(DEPDIR)/smc_storaged-main-storage.Tpo -c -o smc_storaged-main-storage.o `test -f 'main-storage.cpp' || echo '$(srcdir)/'`main-storage.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-main-storage.Tpo $(DEPDIR)/smc_storaged-main-storage.Po
#	source='main-storage.cpp' object='smc_storaged-main-storage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-main-storage.o `test -f 'main-storage.cpp' || echo '$(srcdir)/'`main-storage.cpp

smc_storaged-main-storage.obj: main-storage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-main-storage.obj -MD -MP -MF $(DEPDIR)/smc_storaged-main-storage.Tpo -c -o smc_storaged-main-storage.obj `if test -f 'main-storage.cpp'; then $(CYGPATH_W) 'main-storage.cpp'; else $(CYGPATH_W) '$(srcdir)/main-storage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-main-storage.Tpo $(DEPDIR)/smc_storaged-main-storage.Po
#	source='main-storage.cpp' object='smc_storaged-main-storage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-main-storage.obj `if test -f 'main-storage.cpp'; then $(CYGPATH_W) 'main-storage.cpp'; else $(CYGPATH_W) '$(srcdir)/main-storage.cpp'; fi`

smc_storaged-Stream.o: stream/Stream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Stream.o -MD -MP -MF $(DEPDIR)/smc_storaged-Stream.Tpo -c -o smc_storaged-Stream.o `test -f 'stream/Stream.cpp' || echo '$(srcdir)/'`stream/Stream.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Stream.Tpo $(DEPDIR)/smc_storaged-Stream.Po
#	source='stream/Stream.cpp' object='smc_storaged-Stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Stream.o `test -f 'stream/Stream.cpp' || echo '$(srcdir)/'`stream/Stream.cpp

smc_storaged-Stream.obj: stream/Stream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Stream.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Stream.Tpo -c -o smc_storaged-Stream.obj `if test -f 'stream/Stream.cpp'; then $(CYGPATH_W) 'stream/Stream.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Stream.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Stream.Tpo $(DEPDIR)/smc_storaged-Stream.Po
#	source='stream/Stream.cpp' object='smc_storaged-Stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Stream.obj `if test -f 'stream/Stream.cpp'; then $(CYGPATH_W) 'stream/Stream.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Stream.cpp'; fi`

smc_storaged-VideoCamStorage.o: stream/VideoCamStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-VideoCamStorage.o -MD -MP -MF $(DEPDIR)/smc_storaged-VideoCamStorage.Tpo -c -o smc_storaged-VideoCamStorage.o `test -f 'stream/VideoCamStorage.cpp' || echo '$(srcdir)/'`stream/VideoCamStorage.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-VideoCamStorage.Tpo $(DEPDIR)/smc_storaged-VideoCamStorage.Po
#	source='stream/VideoCamStorage.cpp' object='smc_storaged-VideoCamStorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-VideoCamStorage.o `test -f 'stream/VideoCamStorage.cpp' || echo '$(srcdir)/'`stream/VideoCamStorage.cpp

smc_storaged-VideoCamStorage.obj: stream/VideoCamStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-VideoCamStorage.obj -MD -MP -MF $(DEPDIR)/smc_storaged-VideoCamStorage.Tpo -c -o smc_storaged-VideoCamStorage.obj `if test -f 'stream/VideoCamStorage.cpp'; then $(CYGPATH_W) 'stream/VideoCamStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamStorage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-VideoCamStorage.Tpo $(DEPDIR)/smc_storaged-VideoCamStorage.Po
#	source='stream/VideoCamStorage.cpp' object='smc_storaged-VideoCamStorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-VideoCamStorage.obj `if test -f 'stream/VideoCamStorage.cpp'; then $(CYGPATH_W) 'stream/VideoCamStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamStorage.cpp'; fi`

smc_storaged-VideoCamUDP.o: stream/VideoCamUDP.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-VideoCamUDP.o -MD -MP -MF $(DEPDIR)/smc_storaged-VideoCamUDP.Tpo -c -o smc_storaged-VideoCamUDP.o `test -f 'stream/VideoCamUDP.cpp' || echo '$(srcdir)/'`stream/VideoCamUDP.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-VideoCamUDP.Tpo $(DEPDIR)/smc_storaged-VideoCamUDP.Po
#	source='stream/VideoCamUDP.cpp' object='smc_storaged-VideoCamUDP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-VideoCamUDP.o `test -f 'stream/VideoCamUDP.cpp' || echo '$(srcdir)/'`stream/VideoCamUDP.cpp

smc_storaged-VideoCamUDP.obj: stream/VideoCamUDP.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-VideoCamUDP.obj -MD -MP -MF $(DEPDIR)/smc_storaged-VideoCamUDP.Tpo -c -o smc_storaged-VideoCamUDP.obj `if test -f 'stream/VideoCamUDP.cpp'; then $(CYGPATH_W) 'stream/VideoCamUDP.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamUDP.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-VideoCamUDP.Tpo $(DEPDIR)/smc_storaged-VideoCamUDP.Po
#	source='stream/VideoCamUDP.cpp' object='smc_storaged-VideoCamUDP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-VideoCamUDP.obj `if test -f 'stream/VideoCamUDP.cpp'; then $(CYGPATH_W) 'stream/VideoCamUDP.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoCamUDP.cpp'; fi`

smc_storaged-VideoOutput.o: stream/VideoOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-VideoOutput.o -MD -MP -MF $(DEPDIR)/smc_storaged-VideoOutput.Tpo -c -o smc_storaged-VideoOutput.o `test -f 'stream/VideoOutput.cpp' || echo '$(srcdir)/'`stream/VideoOutput.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-VideoOutput.Tpo $(DEPDIR)/smc_storaged-VideoOutput.Po
#	source='stream/VideoOutput.cpp' object='smc_storaged-VideoOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-VideoOutput.o `test -f 'stream/VideoOutput.cpp' || echo '$(srcdir)/'`stream/VideoOutput.cpp

smc_storaged-VideoOutput.obj: stream/VideoOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-VideoOutput.obj -MD -MP -MF $(DEPDIR)/smc_storaged-VideoOutput.Tpo -c -o smc_storaged-VideoOutput.obj `if test -f 'stream/VideoOutput.cpp'; then $(CYGPATH_W) 'stream/VideoOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-VideoOutput.Tpo $(DEPDIR)/smc_storaged-VideoOutput.Po
#	source='stream/VideoOutput.cpp' object='smc_storaged-VideoOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-VideoOutput.obj `if test -f 'stream/VideoOutput.cpp'; then $(CYGPATH_W) 'stream/VideoOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/VideoOutput.cpp'; fi`

smc_storaged-Streaming.o: stream/Streaming.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Streaming.o -MD -MP -MF $(DEPDIR)/smc_storaged-Streaming.Tpo -c -o smc_storaged-Streaming.o `test -f 'stream/Streaming.cpp' || echo '$(srcdir)/'`stream/Streaming.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Streaming.Tpo $(DEPDIR)/smc_storaged-Streaming.Po
#	source='stream/Streaming.cpp' object='smc_storaged-Streaming.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Streaming.o `test -f 'stream/Streaming.cpp' || echo '$(srcdir)/'`stream/Streaming.cpp

smc_storaged-Streaming.obj: stream/Streaming.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Streaming.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Streaming.Tpo -c -o smc_storaged-Streaming.obj `if test -f 'stream/Streaming.cpp'; then $(CYGPATH_W) 'stream/Streaming.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Streaming.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Streaming.Tpo $(DEPDIR)/smc_storaged-Streaming.Po
#	source='stream/Streaming.cpp' object='smc_storaged-Streaming.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Streaming.obj `if test -f 'stream/Streaming.cpp'; then $(CYGPATH_W) 'stream/Streaming.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/Streaming.cpp'; fi`

smc_storaged-StorageFile.o: stream/StorageFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-StorageFile.o -MD -MP -MF $(DEPDIR)/smc_storaged-StorageFile.Tpo -c -o smc_storaged-StorageFile.o `test -f 'stream/StorageFile.cpp' || echo '$(srcdir)/'`stream/StorageFile.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-StorageFile.Tpo $(DEPDIR)/smc_storaged-StorageFile.Po
#	source='stream/StorageFile.cpp' object='smc_storaged-StorageFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-StorageFile.o `test -f 'stream/StorageFile.cpp' || echo '$(srcdir)/'`stream/StorageFile.cpp

smc_storaged-StorageFile.obj: stream/StorageFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-StorageFile.obj -MD -MP -MF $(DEPDIR)/smc_storaged-StorageFile.Tpo -c -o smc_storaged-StorageFile.obj `if test -f 'stream/StorageFile.cpp'; then $(CYGPATH_W) 'stream/StorageFile.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/StorageFile.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-StorageFile.Tpo $(DEPDIR)/smc_storaged-StorageFile.Po
#	source='stream/StorageFile.cpp' object='smc_storaged-StorageFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-StorageFile.obj `if test -f 'stream/StorageFile.cpp'; then $(CYGPATH_W) 'stream/StorageFile.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/StorageFile.cpp'; fi`

smc_storaged-RTSPserver.o: stream/RTSPserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserver.o -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserver.Tpo -c -o smc_storaged-RTSPserver.o `test -f 'stream/RTSPserver.cpp' || echo '$(srcdir)/'`stream/RTSPserver.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserver.Tpo $(DEPDIR)/smc_storaged-RTSPserver.Po
#	source='stream/RTSPserver.cpp' object='smc_storaged-RTSPserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserver.o `test -f 'stream/RTSPserver.cpp' || echo '$(srcdir)/'`stream/RTSPserver.cpp

smc_storaged-RTSPserver.obj: stream/RTSPserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserver.obj -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserver.Tpo -c -o smc_storaged-RTSPserver.obj `if test -f 'stream/RTSPserver.cpp'; then $(CYGPATH_W) 'stream/RTSPserver.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserver.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserver.Tpo $(DEPDIR)/smc_storaged-RTSPserver.Po
#	source='stream/RTSPserver.cpp' object='smc_storaged-RTSPserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserver.obj `if test -f 'stream/RTSPserver.cpp'; then $(CYGPATH_W) 'stream/RTSPserver.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserver.cpp'; fi`

smc_storaged-RTSPserverManager.o: stream/RTSPserverManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserverManager.o -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserverManager.Tpo -c -o smc_storaged-RTSPserverManager.o `test -f 'stream/RTSPserverManager.cpp' || echo '$(srcdir)/'`stream/RTSPserverManager.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserverManager.Tpo $(DEPDIR)/smc_storaged-RTSPserverManager.Po
#	source='stream/RTSPserverManager.cpp' object='smc_storaged-RTSPserverManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserverManager.o `test -f 'stream/RTSPserverManager.cpp' || echo '$(srcdir)/'`stream/RTSPserverManager.cpp

smc_storaged-RTSPserverManager.obj: stream/RTSPserverManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserverManager.obj -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserverManager.Tpo -c -o smc_storaged-RTSPserverManager.obj `if test -f 'stream/RTSPserverManager.cpp'; then $(CYGPATH_W) 'stream/RTSPserverManager.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserverManager.Tpo $(DEPDIR)/smc_storaged-RTSPserverManager.Po
#	source='stream/RTSPserverManager.cpp' object='smc_storaged-RTSPserverManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserverManager.obj `if test -f 'stream/RTSPserverManager.cpp'; then $(CYGPATH_W) 'stream/RTSPserverManager.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverManager.cpp'; fi`

smc_storaged-RTSPserverGate.o: stream/RTSPserverGate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserverGate.o -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserverGate.Tpo -c -o smc_storaged-RTSPserverGate.o `test -f 'stream/RTSPserverGate.cpp' || echo '$(srcdir)/'`stream/RTSPserverGate.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserverGate.Tpo $(DEPDIR)/smc_storaged-RTSPserverGate.Po
#	source='stream/RTSPserverGate.cpp' object='smc_storaged-RTSPserverGate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserverGate.o `test -f 'stream/RTSPserverGate.cpp' || echo '$(srcdir)/'`stream/RTSPserverGate.cpp

smc_storaged-RTSPserverGate.obj: stream/RTSPserverGate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserverGate.obj -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserverGate.Tpo -c -o smc_storaged-RTSPserverGate.obj `if test -f 'stream/RTSPserverGate.cpp'; then $(CYGPATH_W) 'stream/RTSPserverGate.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverGate.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserverGate.Tpo $(DEPDIR)/smc_storaged-RTSPserverGate.Po
#	source='stream/RTSPserverGate.cpp' object='smc_storaged-RTSPserverGate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserverGate.obj `if test -f 'stream/RTSPserverGate.cpp'; then $(CYGPATH_W) 'stream/RTSPserverGate.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverGate.cpp'; fi`

smc_storaged-RTSPserverStorage.o: stream/RTSPserverStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserverStorage.o -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserverStorage.Tpo -c -o smc_storaged-RTSPserverStorage.o `test -f 'stream/RTSPserverStorage.cpp' || echo '$(srcdir)/'`stream/RTSPserverStorage.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserverStorage.Tpo $(DEPDIR)/smc_storaged-RTSPserverStorage.Po
#	source='stream/RTSPserverStorage.cpp' object='smc_storaged-RTSPserverStorage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserverStorage.o `test -f 'stream/RTSPserverStorage.cpp' || echo '$(srcdir)/'`stream/RTSPserverStorage.cpp

smc_storaged-RTSPserverStorage.obj: stream/RTSPserverStorage.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RTSPserverStorage.obj -MD -MP -MF $(DEPDIR)/smc_storaged-RTSPserverStorage.Tpo -c -o smc_storaged-RTSPserverStorage.obj `if test -f 'stream/RTSPserverStorage.cpp'; then $(CYGPATH_W) 'stream/RTSPserverStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverStorage.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-RTSPserverStorage.Tpo $(DEPDIR)/smc_storaged-RTSPserverStorage.Po
#	source='stream/RTSPserverStorage.cpp' object='smc_storaged-RTSPserverStorage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RTSPserverStorage.obj `if test -f 'stream/RTSPserverStorage.cpp'; then $(CYGPATH_W) 'stream/RTSPserverStorage.cpp'; else $(CYGPATH_W) '$(srcdir)/stream/RTSPserverStorage.cpp'; fi`

smc_storaged-Request.o: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Request.o -MD -MP -MF $(DEPDIR)/smc_storaged-Request.Tpo -c -o smc_storaged-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Request.Tpo $(DEPDIR)/smc_storaged-Request.Po
#	source='onvif/Request.cpp' object='smc_storaged-Request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Request.o `test -f 'onvif/Request.cpp' || echo '$(srcdir)/'`onvif/Request.cpp

smc_storaged-Request.obj: onvif/Request.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Request.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Request.Tpo -c -o smc_storaged-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Request.Tpo $(DEPDIR)/smc_storaged-Request.Po
#	source='onvif/Request.cpp' object='smc_storaged-Request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Request.obj `if test -f 'onvif/Request.cpp'; then $(CYGPATH_W) 'onvif/Request.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Request.cpp'; fi`

smc_storaged-DiscoveryRequest.o: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-DiscoveryRequest.o -MD -MP -MF $(DEPDIR)/smc_storaged-DiscoveryRequest.Tpo -c -o smc_storaged-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-DiscoveryRequest.Tpo $(DEPDIR)/smc_storaged-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_storaged-DiscoveryRequest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-DiscoveryRequest.o `test -f 'onvif/DiscoveryRequest.cpp' || echo '$(srcdir)/'`onvif/DiscoveryRequest.cpp

smc_storaged-DiscoveryRequest.obj: onvif/DiscoveryRequest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-DiscoveryRequest.obj -MD -MP -MF $(DEPDIR)/smc_storaged-DiscoveryRequest.Tpo -c -o smc_storaged-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-DiscoveryRequest.Tpo $(DEPDIR)/smc_storaged-DiscoveryRequest.Po
#	source='onvif/DiscoveryRequest.cpp' object='smc_storaged-DiscoveryRequest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-DiscoveryRequest.obj `if test -f 'onvif/DiscoveryRequest.cpp'; then $(CYGPATH_W) 'onvif/DiscoveryRequest.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/DiscoveryRequest.cpp'; fi`

smc_storaged-SMCagentService.o: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SMCagentService.o -MD -MP -MF $(DEPDIR)/smc_storaged-SMCagentService.Tpo -c -o smc_storaged-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-SMCagentService.Tpo $(DEPDIR)/smc_storaged-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='smc_storaged-SMCagentService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SMCagentService.o `test -f 'soap/SMCagentService.cpp' || echo '$(srcdir)/'`soap/SMCagentService.cpp

smc_storaged-SMCagentService.obj: soap/SMCagentService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SMCagentService.obj -MD -MP -MF $(DEPDIR)/smc_storaged-SMCagentService.Tpo -c -o smc_storaged-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-SMCagentService.Tpo $(DEPDIR)/smc_storaged-SMCagentService.Po
#	source='soap/SMCagentService.cpp' object='smc_storaged-SMCagentService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SMCagentService.obj `if test -f 'soap/SMCagentService.cpp'; then $(CYGPATH_W) 'soap/SMCagentService.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCagentService.cpp'; fi`

smc_storaged-SMCserverProxy.o: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SMCserverProxy.o -MD -MP -MF $(DEPDIR)/smc_storaged-SMCserverProxy.Tpo -c -o smc_storaged-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-SMCserverProxy.Tpo $(DEPDIR)/smc_storaged-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='smc_storaged-SMCserverProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SMCserverProxy.o `test -f 'soap/SMCserverProxy.cpp' || echo '$(srcdir)/'`soap/SMCserverProxy.cpp

smc_storaged-SMCserverProxy.obj: soap/SMCserverProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SMCserverProxy.obj -MD -MP -MF $(DEPDIR)/smc_storaged-SMCserverProxy.Tpo -c -o smc_storaged-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-SMCserverProxy.Tpo $(DEPDIR)/smc_storaged-SMCserverProxy.Po
#	source='soap/SMCserverProxy.cpp' object='smc_storaged-SMCserverProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SMCserverProxy.obj `if test -f 'soap/SMCserverProxy.cpp'; then $(CYGPATH_W) 'soap/SMCserverProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCserverProxy.cpp'; fi`

smc_storaged-SMCC.o: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SMCC.o -MD -MP -MF $(DEPDIR)/smc_storaged-SMCC.Tpo -c -o smc_storaged-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-SMCC.Tpo $(DEPDIR)/smc_storaged-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_storaged-SMCC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SMCC.o `test -f 'soap/SMCC.cpp' || echo '$(srcdir)/'`soap/SMCC.cpp

smc_storaged-SMCC.obj: soap/SMCC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SMCC.obj -MD -MP -MF $(DEPDIR)/smc_storaged-SMCC.Tpo -c -o smc_storaged-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-SMCC.Tpo $(DEPDIR)/smc_storaged-SMCC.Po
#	source='soap/SMCC.cpp' object='smc_storaged-SMCC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SMCC.obj `if test -f 'soap/SMCC.cpp'; then $(CYGPATH_W) 'soap/SMCC.cpp'; else $(CYGPATH_W) '$(srcdir)/soap/SMCC.cpp'; fi`

smc_storaged-Thread.o: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Thread.o -MD -MP -MF $(DEPDIR)/smc_storaged-Thread.Tpo -c -o smc_storaged-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Thread.Tpo $(DEPDIR)/smc_storaged-Thread.Po
#	source='patterns/Thread.cpp' object='smc_storaged-Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Thread.o `test -f 'patterns/Thread.cpp' || echo '$(srcdir)/'`patterns/Thread.cpp

smc_storaged-Thread.obj: patterns/Thread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Thread.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Thread.Tpo -c -o smc_storaged-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Thread.Tpo $(DEPDIR)/smc_storaged-Thread.Po
#	source='patterns/Thread.cpp' object='smc_storaged-Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Thread.obj `if test -f 'patterns/Thread.cpp'; then $(CYGPATH_W) 'patterns/Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Thread.cpp'; fi`

smc_storaged-SoapServer.o: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SoapServer.o -MD -MP -MF $(DEPDIR)/smc_storaged-SoapServer.Tpo -c -o smc_storaged-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-SoapServer.Tpo $(DEPDIR)/smc_storaged-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_storaged-SoapServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SoapServer.o `test -f 'SMC/SoapServer.cpp' || echo '$(srcdir)/'`SMC/SoapServer.cpp

smc_storaged-SoapServer.obj: SMC/SoapServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-SoapServer.obj -MD -MP -MF $(DEPDIR)/smc_storaged-SoapServer.Tpo -c -o smc_storaged-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-SoapServer.Tpo $(DEPDIR)/smc_storaged-SoapServer.Po
#	source='SMC/SoapServer.cpp' object='smc_storaged-SoapServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-SoapServer.obj `if test -f 'SMC/SoapServer.cpp'; then $(CYGPATH_W) 'SMC/SoapServer.cpp'; else $(CYGPATH_W) '$(srcdir)/SMC/SoapServer.cpp'; fi`

smc_storaged-Hello.o: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Hello.o -MD -MP -MF $(DEPDIR)/smc_storaged-Hello.Tpo -c -o smc_storaged-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Hello.Tpo $(DEPDIR)/smc_storaged-Hello.Po
#	source='onvif/Hello.cpp' object='smc_storaged-Hello.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Hello.o `test -f 'onvif/Hello.cpp' || echo '$(srcdir)/'`onvif/Hello.cpp

smc_storaged-Hello.obj: onvif/Hello.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Hello.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Hello.Tpo -c -o smc_storaged-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Hello.Tpo $(DEPDIR)/smc_storaged-Hello.Po
#	source='onvif/Hello.cpp' object='smc_storaged-Hello.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Hello.obj `if test -f 'onvif/Hello.cpp'; then $(CYGPATH_W) 'onvif/Hello.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Hello.cpp'; fi`

smc_storaged-Bye.o: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Bye.o -MD -MP -MF $(DEPDIR)/smc_storaged-Bye.Tpo -c -o smc_storaged-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Bye.Tpo $(DEPDIR)/smc_storaged-Bye.Po
#	source='onvif/Bye.cpp' object='smc_storaged-Bye.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Bye.o `test -f 'onvif/Bye.cpp' || echo '$(srcdir)/'`onvif/Bye.cpp

smc_storaged-Bye.obj: onvif/Bye.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Bye.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Bye.Tpo -c -o smc_storaged-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Bye.Tpo $(DEPDIR)/smc_storaged-Bye.Po
#	source='onvif/Bye.cpp' object='smc_storaged-Bye.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Bye.obj `if test -f 'onvif/Bye.cpp'; then $(CYGPATH_W) 'onvif/Bye.cpp'; else $(CYGPATH_W) '$(srcdir)/onvif/Bye.cpp'; fi`

smc_storaged-Application.o: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Application.o -MD -MP -MF $(DEPDIR)/smc_storaged-Application.Tpo -c -o smc_storaged-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Application.Tpo $(DEPDIR)/smc_storaged-Application.Po
#	source='apps/Application.cpp' object='smc_storaged-Application.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Application.o `test -f 'apps/Application.cpp' || echo '$(srcdir)/'`apps/Application.cpp

smc_storaged-Application.obj: apps/Application.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Application.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Application.Tpo -c -o smc_storaged-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Application.Tpo $(DEPDIR)/smc_storaged-Application.Po
#	source='apps/Application.cpp' object='smc_storaged-Application.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Application.obj `if test -f 'apps/Application.cpp'; then $(CYGPATH_W) 'apps/Application.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/Application.cpp'; fi`

smc_storaged-StorageAgent.o: apps/StorageAgent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-StorageAgent.o -MD -MP -MF $(DEPDIR)/smc_storaged-StorageAgent.Tpo -c -o smc_storaged-StorageAgent.o `test -f 'apps/StorageAgent.cpp' || echo '$(srcdir)/'`apps/StorageAgent.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-StorageAgent.Tpo $(DEPDIR)/smc_storaged-StorageAgent.Po
#	source='apps/StorageAgent.cpp' object='smc_storaged-StorageAgent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-StorageAgent.o `test -f 'apps/StorageAgent.cpp' || echo '$(srcdir)/'`apps/StorageAgent.cpp

smc_storaged-StorageAgent.obj: apps/StorageAgent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-StorageAgent.obj -MD -MP -MF $(DEPDIR)/smc_storaged-StorageAgent.Tpo -c -o smc_storaged-StorageAgent.obj `if test -f 'apps/StorageAgent.cpp'; then $(CYGPATH_W) 'apps/StorageAgent.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/StorageAgent.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-StorageAgent.Tpo $(DEPDIR)/smc_storaged-StorageAgent.Po
#	source='apps/StorageAgent.cpp' object='smc_storaged-StorageAgent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-StorageAgent.obj `if test -f 'apps/StorageAgent.cpp'; then $(CYGPATH_W) 'apps/StorageAgent.cpp'; else $(CYGPATH_W) '$(srcdir)/apps/StorageAgent.cpp'; fi`

smc_storaged-Subject.o: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Subject.o -MD -MP -MF $(DEPDIR)/smc_storaged-Subject.Tpo -c -o smc_storaged-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Subject.Tpo $(DEPDIR)/smc_storaged-Subject.Po
#	source='patterns/Subject.cpp' object='smc_storaged-Subject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Subject.o `test -f 'patterns/Subject.cpp' || echo '$(srcdir)/'`patterns/Subject.cpp

smc_storaged-Subject.obj: patterns/Subject.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Subject.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Subject.Tpo -c -o smc_storaged-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Subject.Tpo $(DEPDIR)/smc_storaged-Subject.Po
#	source='patterns/Subject.cpp' object='smc_storaged-Subject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Subject.obj `if test -f 'patterns/Subject.cpp'; then $(CYGPATH_W) 'patterns/Subject.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Subject.cpp'; fi`

smc_storaged-Observer.o: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Observer.o -MD -MP -MF $(DEPDIR)/smc_storaged-Observer.Tpo -c -o smc_storaged-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Observer.Tpo $(DEPDIR)/smc_storaged-Observer.Po
#	source='patterns/Observer.cpp' object='smc_storaged-Observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Observer.o `test -f 'patterns/Observer.cpp' || echo '$(srcdir)/'`patterns/Observer.cpp

smc_storaged-Observer.obj: patterns/Observer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Observer.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Observer.Tpo -c -o smc_storaged-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Observer.Tpo $(DEPDIR)/smc_storaged-Observer.Po
#	source='patterns/Observer.cpp' object='smc_storaged-Observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Observer.obj `if test -f 'patterns/Observer.cpp'; then $(CYGPATH_W) 'patterns/Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Observer.cpp'; fi`

smc_storaged-Command.o: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Command.o -MD -MP -MF $(DEPDIR)/smc_storaged-Command.Tpo -c -o smc_storaged-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-Command.Tpo $(DEPDIR)/smc_storaged-Command.Po
#	source='patterns/Command.cpp' object='smc_storaged-Command.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Command.o `test -f 'patterns/Command.cpp' || echo '$(srcdir)/'`patterns/Command.cpp

smc_storaged-Command.obj: patterns/Command.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-Command.obj -MD -MP -MF $(DEPDIR)/smc_storaged-Command.Tpo -c -o smc_storaged-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-Command.Tpo $(DEPDIR)/smc_storaged-Command.Po
#	source='patterns/Command.cpp' object='smc_storaged-Command.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-Command.obj `if test -f 'patterns/Command.cpp'; then $(CYGPATH_W) 'patterns/Command.cpp'; else $(CYGPATH_W) '$(srcdir)/patterns/Command.cpp'; fi`

smc_storaged-RemoteProxy.o: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RemoteProxy.o -MD -MP -MF $(DEPDIR)/smc_storaged-RemoteProxy.Tpo -c -o smc_storaged-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-RemoteProxy.Tpo $(DEPDIR)/smc_storaged-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_storaged-RemoteProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RemoteProxy.o `test -f 'observers/RemoteProxy.cpp' || echo '$(srcdir)/'`observers/RemoteProxy.cpp

smc_storaged-RemoteProxy.obj: observers/RemoteProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-RemoteProxy.obj -MD -MP -MF $(DEPDIR)/smc_storaged-RemoteProxy.Tpo -c -o smc_storaged-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-RemoteProxy.Tpo $(DEPDIR)/smc_storaged-RemoteProxy.Po
#	source='observers/RemoteProxy.cpp' object='smc_storaged-RemoteProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-RemoteProxy.obj `if test -f 'observers/RemoteProxy.cpp'; then $(CYGPATH_W) 'observers/RemoteProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/RemoteProxy.cpp'; fi`

smc_storaged-CoreServerProxy.o: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-CoreServerProxy.o -MD -MP -MF $(DEPDIR)/smc_storaged-CoreServerProxy.Tpo -c -o smc_storaged-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp
	$(am__mv) $(DEPDIR)/smc_storaged-CoreServerProxy.Tpo $(DEPDIR)/smc_storaged-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='smc_storaged-CoreServerProxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-CoreServerProxy.o `test -f 'observers/CoreServerProxy.cpp' || echo '$(srcdir)/'`observers/CoreServerProxy.cpp

smc_storaged-CoreServerProxy.obj: observers/CoreServerProxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -MT smc_storaged-CoreServerProxy.obj -MD -MP -MF $(DEPDIR)/smc_storaged-CoreServerProxy.Tpo -c -o smc_storaged-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/smc_storaged-CoreServerProxy.Tpo $(DEPDIR)/smc_storaged-CoreServerProxy.Po
#	source='observers/CoreServerProxy.cpp' object='smc_storaged-CoreServerProxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smc_storaged_CXXFLAGS) $(CXXFLAGS) -c -o smc_storaged-CoreServerProxy.obj `if test -f 'observers/CoreServerProxy.cpp'; then $(CYGPATH_W) 'observers/CoreServerProxy.cpp'; else $(CYGPATH_W) '$(srcdir)/observers/CoreServerProxy.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


 # ------------- #
 # DOCUMENTATION #
 # ------------- #

# --- #
# MOC #
# --- #

.hpp.moc.cpp:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.hh.moc.cpp:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.h.moc.cpp:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@

.hpp.moc.cc:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.hh.moc.cc:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.h.moc.cc:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@

.hpp.moc.cxx:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.hh.moc.cxx:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.h.moc.cxx:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@

.hpp.moc.C:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.hh.moc.C:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@
.h.moc.C:
	$(MOC) $(QT_CPPFLAGS) $(EXTRA_CPPFLAGS) $< -o $@

# --- #
# UIC #
# --- #

.ui.ui.hpp:
	$(UIC) $< -o $@

.ui.ui.hh:
	$(UIC) $< -o $@

.ui.ui.h:
	$(UIC) $< -o $@

# --- #
# RCC #
# --- #

.qrc.qrc.cpp:
	$(RCC) -name `echo "$<" | sed 's|^.*/\(.*\)\.qrc$$|\1|'` $< -o $@

.qrc.qrc.cc:
	$(RCC) -name `echo "$<" | sed 's|^.*/\(.*\)\.qrc$$|\1|'` $< -o $@

.qrc.qrc.cxx:
	$(RCC) -name `echo "$<" | sed 's|^.*/\(.*\)\.qrc$$|\1|'` $< -o $@

.qrc.qrc.C:
	$(RCC) -name `echo "$<" | sed 's|^.*/\(.*\)\.qrc$$|\1|'` $< -o $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
