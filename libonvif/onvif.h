// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.0 from analytics.wsdl devicemgmt.wsdl media.wsdl imaging.wsdl and typemap.dat
   2011-07-31 17:07:09 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tan = "http://www.onvif.org/ver20/analytics/wsdl"
onv = "http://www.onvif.org/ver10/schema"
wsnb = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
tds = "http://www.onvif.org/ver10/device/wsdl"
trt = "http://www.onvif.org/ver10/media/wsdl"
timg = "http://www.onvif.org/ver20/imaging/wsdl"

*/

#define SOAP_NAMESPACE_OF_tan	"http://www.onvif.org/ver20/analytics/wsdl"
//gsoap tan   schema namespace:	http://www.onvif.org/ver20/analytics/wsdl
//gsoap tan   schema elementForm:	qualified
//gsoap tan   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onv	"http://www.onvif.org/ver10/schema"
//gsoap onv   schema namespace:	http://www.onvif.org/ver10/schema
//gsoap onv   schema elementForm:	qualified
//gsoap onv   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnb	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnb  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnb  schema elementForm:	qualified
//gsoap wsnb  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_timg	"http://www.onvif.org/ver20/imaging/wsdl"
//gsoap timg  schema namespace:	http://www.onvif.org/ver20/imaging/wsdl
//gsoap timg  schema elementForm:	qualified
//gsoap timg  schema attributeForm:	unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


// Imported type "http://www.w3.org/2005/08/addressing":EndpointReferenceType defined by wsa5__EndpointReferenceType

/// Primitive built-in type "xs:NCName"
typedef std::string xsd__NCName;

/// Class wrapper for built-in type "xs:NCName" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__NCName_ to check runtime type (see soapStub.h)
class xsd__NCName_ : public xsd__anyType
{ public:
    xsd__NCName                          __item;                       
};

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Class wrapper for built-in type "xs:QName" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__QName_ to check runtime type (see soapStub.h)
class xsd__QName_ : public xsd__anyType
{ public:
    xsd__QName                           __item;                       
};

/// Primitive built-in type "xs:anySimpleType"
typedef std::string xsd__anySimpleType;

/// Class wrapper for built-in type "xs:anySimpleType" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__anySimpleType_ to check runtime type (see soapStub.h)
class xsd__anySimpleType_ : public xsd__anyType
{ public:
    xsd__anySimpleType                   __item;                       
};

/// Primitive built-in type "xs:anyURI"
typedef std::string xsd__anyURI;

/// Class wrapper for built-in type "xs:anyURI" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__anyURI_ to check runtime type (see soapStub.h)
class xsd__anyURI_ : public xsd__anyType
{ public:
    xsd__anyURI                          __item;                       
};

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
	struct soap *soap;
};

/// Class wrapper for built-in type "xs:base64Binary" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__base64Binary_ to check runtime type (see soapStub.h)
class xsd__base64Binary_ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item;                       
};

/// Class wrapper for built-in type "xs:boolean" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__boolean to check runtime type (see soapStub.h)
class xsd__boolean : public xsd__anyType
{ public:
    bool                                 __item;                       
};

/// Class wrapper for built-in type "xs:dateTime" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__dateTime to check runtime type (see soapStub.h)
class xsd__dateTime : public xsd__anyType
{ public:
    time_t                               __item;                       
};

/// Built-in type "xs:duration".
#import "custom/duration.h"

/// Class wrapper for built-in type "xs:duration" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__duration_ to check runtime type (see soapStub.h)
class xsd__duration_ : public xsd__anyType
{ public:
    xsd__duration                        __item;                       
};

/// Class wrapper for built-in type "xs:float" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__float to check runtime type (see soapStub.h)
class xsd__float : public xsd__anyType
{ public:
    float                                __item;                       
};

/// Built-in type "xs:hexBinary".
class xsd__hexBinary { unsigned char *__ptr; int __size; };

/// Class wrapper for built-in type "xs:hexBinary" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__hexBinary_ to check runtime type (see soapStub.h)
class xsd__hexBinary_ : public xsd__anyType
{ public:
    xsd__hexBinary                       __item;                       
};

/// Class wrapper for built-in type "xs:int" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__int to check runtime type (see soapStub.h)
class xsd__int : public xsd__anyType
{ public:
    int                                  __item;                       
};

/// Primitive built-in type "xs:integer"
typedef std::string xsd__integer;

/// Class wrapper for built-in type "xs:integer" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__integer_ to check runtime type (see soapStub.h)
class xsd__integer_ : public xsd__anyType
{ public:
    xsd__integer                         __item;                       
};

/// Primitive built-in type "xs:nonNegativeInteger"
typedef std::string xsd__nonNegativeInteger;

/// Class wrapper for built-in type "xs:nonNegativeInteger" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__nonNegativeInteger_ to check runtime type (see soapStub.h)
class xsd__nonNegativeInteger_ : public xsd__anyType
{ public:
    xsd__nonNegativeInteger              __item;                       
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    std::string                          __item;                       
};

/// Primitive built-in type "xs:token"
typedef std::string xsd__token;

/// Class wrapper for built-in type "xs:token" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__token_ to check runtime type (see soapStub.h)
class xsd__token_ : public xsd__anyType
{ public:
    xsd__token                           __item;                       
};

// Imported element "http://www.w3.org/2004/08/xop/include":Include declared as _xop__Include

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class _tan__GetSupportedRules.
class _tan__GetSupportedRules;

//  Forward declaration of class _tan__GetSupportedRulesResponse.
class _tan__GetSupportedRulesResponse;

//  Forward declaration of class _tan__CreateRules.
class _tan__CreateRules;

//  Forward declaration of class _tan__CreateRulesResponse.
class _tan__CreateRulesResponse;

//  Forward declaration of class _tan__DeleteRules.
class _tan__DeleteRules;

//  Forward declaration of class _tan__DeleteRulesResponse.
class _tan__DeleteRulesResponse;

//  Forward declaration of class _tan__ModifyRules.
class _tan__ModifyRules;

//  Forward declaration of class _tan__ModifyRulesResponse.
class _tan__ModifyRulesResponse;

//  Forward declaration of class _tan__GetRules.
class _tan__GetRules;

//  Forward declaration of class _tan__GetRulesResponse.
class _tan__GetRulesResponse;

//  Forward declaration of class _tan__GetSupportedAnalyticsModules.
class _tan__GetSupportedAnalyticsModules;

//  Forward declaration of class _tan__GetSupportedAnalyticsModulesResponse.
class _tan__GetSupportedAnalyticsModulesResponse;

//  Forward declaration of class _tan__CreateAnalyticsModules.
class _tan__CreateAnalyticsModules;

//  Forward declaration of class _tan__CreateAnalyticsModulesResponse.
class _tan__CreateAnalyticsModulesResponse;

//  Forward declaration of class _tan__DeleteAnalyticsModules.
class _tan__DeleteAnalyticsModules;

//  Forward declaration of class _tan__DeleteAnalyticsModulesResponse.
class _tan__DeleteAnalyticsModulesResponse;

//  Forward declaration of class _tan__ModifyAnalyticsModules.
class _tan__ModifyAnalyticsModules;

//  Forward declaration of class _tan__ModifyAnalyticsModulesResponse.
class _tan__ModifyAnalyticsModulesResponse;

//  Forward declaration of class _tan__GetAnalyticsModules.
class _tan__GetAnalyticsModules;

//  Forward declaration of class _tan__GetAnalyticsModulesResponse.
class _tan__GetAnalyticsModulesResponse;

//  Forward declaration of class onv__DeviceEntity.
class onv__DeviceEntity;

//  Forward declaration of class onv__IntRectangle.
class onv__IntRectangle;

//  Forward declaration of class onv__IntRectangleRange.
class onv__IntRectangleRange;

//  Forward declaration of class onv__IntRange.
class onv__IntRange;

//  Forward declaration of class onv__FloatRange.
class onv__FloatRange;

//  Forward declaration of class onv__DurationRange.
class onv__DurationRange;

//  Forward declaration of class onv__IntList.
class onv__IntList;

//  Forward declaration of class onv__VideoSource.
class onv__VideoSource;

//  Forward declaration of class onv__VideoSourceExtension.
class onv__VideoSourceExtension;

//  Forward declaration of class onv__VideoSourceExtension2.
class onv__VideoSourceExtension2;

//  Forward declaration of class onv__AudioSource.
class onv__AudioSource;

//  Forward declaration of class onv__Profile.
class onv__Profile;

//  Forward declaration of class onv__ProfileExtension.
class onv__ProfileExtension;

//  Forward declaration of class onv__ProfileExtension2.
class onv__ProfileExtension2;

//  Forward declaration of class onv__ConfigurationEntity.
class onv__ConfigurationEntity;

//  Forward declaration of class onv__VideoSourceConfiguration.
class onv__VideoSourceConfiguration;

//  Forward declaration of class onv__VideoSourceConfigurationOptions.
class onv__VideoSourceConfigurationOptions;

//  Forward declaration of class onv__VideoSourceConfigurationOptionsExtension.
class onv__VideoSourceConfigurationOptionsExtension;

//  Forward declaration of class onv__VideoEncoderConfiguration.
class onv__VideoEncoderConfiguration;

//  Forward declaration of class onv__VideoResolution.
class onv__VideoResolution;

//  Forward declaration of class onv__VideoRateControl.
class onv__VideoRateControl;

//  Forward declaration of class onv__Mpeg4Configuration.
class onv__Mpeg4Configuration;

//  Forward declaration of class onv__H264Configuration.
class onv__H264Configuration;

//  Forward declaration of class onv__VideoEncoderConfigurationOptions.
class onv__VideoEncoderConfigurationOptions;

//  Forward declaration of class onv__VideoEncoderOptionsExtension.
class onv__VideoEncoderOptionsExtension;

//  Forward declaration of class onv__VideoEncoderOptionsExtension2.
class onv__VideoEncoderOptionsExtension2;

//  Forward declaration of class onv__JpegOptions.
class onv__JpegOptions;

//  Forward declaration of class onv__JpegOptions2.
class onv__JpegOptions2;

//  Forward declaration of class onv__Mpeg4Options.
class onv__Mpeg4Options;

//  Forward declaration of class onv__Mpeg4Options2.
class onv__Mpeg4Options2;

//  Forward declaration of class onv__H264Options.
class onv__H264Options;

//  Forward declaration of class onv__H264Options2.
class onv__H264Options2;

//  Forward declaration of class onv__AudioSourceConfiguration.
class onv__AudioSourceConfiguration;

//  Forward declaration of class onv__AudioSourceConfigurationOptions.
class onv__AudioSourceConfigurationOptions;

//  Forward declaration of class onv__AudioSourceOptionsExtension.
class onv__AudioSourceOptionsExtension;

//  Forward declaration of class onv__AudioEncoderConfiguration.
class onv__AudioEncoderConfiguration;

//  Forward declaration of class onv__AudioEncoderConfigurationOptions.
class onv__AudioEncoderConfigurationOptions;

//  Forward declaration of class onv__AudioEncoderConfigurationOption.
class onv__AudioEncoderConfigurationOption;

//  Forward declaration of class onv__VideoAnalyticsConfiguration.
class onv__VideoAnalyticsConfiguration;

//  Forward declaration of class onv__MetadataConfiguration.
class onv__MetadataConfiguration;

//  Forward declaration of class onv__PTZFilter.
class onv__PTZFilter;

//  Forward declaration of class onv__EventSubscription.
class onv__EventSubscription;

//  Forward declaration of class onv__MetadataConfigurationOptions.
class onv__MetadataConfigurationOptions;

//  Forward declaration of class onv__PTZStatusFilterOptions.
class onv__PTZStatusFilterOptions;

//  Forward declaration of class onv__PTZStatusFilterOptionsExtension.
class onv__PTZStatusFilterOptionsExtension;

//  Forward declaration of class onv__VideoOutput.
class onv__VideoOutput;

//  Forward declaration of class onv__VideoOutputConfiguration.
class onv__VideoOutputConfiguration;

//  Forward declaration of class onv__VideoOutputConfigurationOptions.
class onv__VideoOutputConfigurationOptions;

//  Forward declaration of class onv__VideoDecoderConfigurationOptions.
class onv__VideoDecoderConfigurationOptions;

//  Forward declaration of class onv__H264DecOptions.
class onv__H264DecOptions;

//  Forward declaration of class onv__JpegDecOptions.
class onv__JpegDecOptions;

//  Forward declaration of class onv__Mpeg4DecOptions.
class onv__Mpeg4DecOptions;

//  Forward declaration of class onv__VideoDecoderConfigurationOptionsExtension.
class onv__VideoDecoderConfigurationOptionsExtension;

//  Forward declaration of class onv__AudioOutput.
class onv__AudioOutput;

//  Forward declaration of class onv__AudioOutputConfiguration.
class onv__AudioOutputConfiguration;

//  Forward declaration of class onv__AudioOutputConfigurationOptions.
class onv__AudioOutputConfigurationOptions;

//  Forward declaration of class onv__AudioDecoderConfiguration.
class onv__AudioDecoderConfiguration;

//  Forward declaration of class onv__AudioDecoderConfigurationOptions.
class onv__AudioDecoderConfigurationOptions;

//  Forward declaration of class onv__G711DecOptions.
class onv__G711DecOptions;

//  Forward declaration of class onv__AACDecOptions.
class onv__AACDecOptions;

//  Forward declaration of class onv__G726DecOptions.
class onv__G726DecOptions;

//  Forward declaration of class onv__AudioDecoderConfigurationOptionsExtension.
class onv__AudioDecoderConfigurationOptionsExtension;

//  Forward declaration of class onv__MulticastConfiguration.
class onv__MulticastConfiguration;

//  Forward declaration of class onv__StreamSetup.
class onv__StreamSetup;

//  Forward declaration of class onv__Transport.
class onv__Transport;

//  Forward declaration of class onv__MediaUri.
class onv__MediaUri;

//  Forward declaration of class onv__Scope.
class onv__Scope;

//  Forward declaration of class onv__NetworkInterface.
class onv__NetworkInterface;

//  Forward declaration of class onv__NetworkInterfaceExtension.
class onv__NetworkInterfaceExtension;

//  Forward declaration of class onv__Dot3Configuration.
class onv__Dot3Configuration;

//  Forward declaration of class onv__NetworkInterfaceExtension2.
class onv__NetworkInterfaceExtension2;

//  Forward declaration of class onv__NetworkInterfaceLink.
class onv__NetworkInterfaceLink;

//  Forward declaration of class onv__NetworkInterfaceConnectionSetting.
class onv__NetworkInterfaceConnectionSetting;

//  Forward declaration of class onv__NetworkInterfaceInfo.
class onv__NetworkInterfaceInfo;

//  Forward declaration of class onv__IPv6NetworkInterface.
class onv__IPv6NetworkInterface;

//  Forward declaration of class onv__IPv4NetworkInterface.
class onv__IPv4NetworkInterface;

//  Forward declaration of class onv__IPv4Configuration.
class onv__IPv4Configuration;

//  Forward declaration of class onv__IPv6Configuration.
class onv__IPv6Configuration;

//  Forward declaration of class onv__IPv6ConfigurationExtension.
class onv__IPv6ConfigurationExtension;

//  Forward declaration of class onv__NetworkProtocol.
class onv__NetworkProtocol;

//  Forward declaration of class onv__NetworkProtocolExtension.
class onv__NetworkProtocolExtension;

//  Forward declaration of class onv__NetworkHost.
class onv__NetworkHost;

//  Forward declaration of class onv__NetworkHostExtension.
class onv__NetworkHostExtension;

//  Forward declaration of class onv__IPAddress.
class onv__IPAddress;

//  Forward declaration of class onv__PrefixedIPv4Address.
class onv__PrefixedIPv4Address;

//  Forward declaration of class onv__PrefixedIPv6Address.
class onv__PrefixedIPv6Address;

//  Forward declaration of class onv__HostnameInformation.
class onv__HostnameInformation;

//  Forward declaration of class onv__HostnameInformationExtension.
class onv__HostnameInformationExtension;

//  Forward declaration of class onv__DNSInformation.
class onv__DNSInformation;

//  Forward declaration of class onv__DNSInformationExtension.
class onv__DNSInformationExtension;

//  Forward declaration of class onv__NTPInformation.
class onv__NTPInformation;

//  Forward declaration of class onv__NTPInformationExtension.
class onv__NTPInformationExtension;

//  Forward declaration of class onv__DynamicDNSInformation.
class onv__DynamicDNSInformation;

//  Forward declaration of class onv__DynamicDNSInformationExtension.
class onv__DynamicDNSInformationExtension;

//  Forward declaration of class onv__NetworkInterfaceSetConfiguration.
class onv__NetworkInterfaceSetConfiguration;

//  Forward declaration of class onv__NetworkInterfaceSetConfigurationExtension.
class onv__NetworkInterfaceSetConfigurationExtension;

//  Forward declaration of class onv__IPv6NetworkInterfaceSetConfiguration.
class onv__IPv6NetworkInterfaceSetConfiguration;

//  Forward declaration of class onv__IPv4NetworkInterfaceSetConfiguration.
class onv__IPv4NetworkInterfaceSetConfiguration;

//  Forward declaration of class onv__NetworkGateway.
class onv__NetworkGateway;

//  Forward declaration of class onv__NetworkZeroConfiguration.
class onv__NetworkZeroConfiguration;

//  Forward declaration of class onv__NetworkZeroConfigurationExtension.
class onv__NetworkZeroConfigurationExtension;

//  Forward declaration of class onv__IPAddressFilter.
class onv__IPAddressFilter;

//  Forward declaration of class onv__IPAddressFilterExtension.
class onv__IPAddressFilterExtension;

//  Forward declaration of class onv__Dot11Configuration.
class onv__Dot11Configuration;

//  Forward declaration of class onv__Dot11SecurityConfiguration.
class onv__Dot11SecurityConfiguration;

//  Forward declaration of class onv__Dot11SecurityConfigurationExtension.
class onv__Dot11SecurityConfigurationExtension;

//  Forward declaration of class onv__Dot11PSKSet.
class onv__Dot11PSKSet;

//  Forward declaration of class onv__Dot11PSKSetExtension.
class onv__Dot11PSKSetExtension;

//  Forward declaration of class onv__NetworkInterfaceSetConfigurationExtension2.
class onv__NetworkInterfaceSetConfigurationExtension2;

//  Forward declaration of class onv__Dot11Capabilities.
class onv__Dot11Capabilities;

//  Forward declaration of class onv__Dot11Status.
class onv__Dot11Status;

//  Forward declaration of class onv__Dot11AvailableNetworks.
class onv__Dot11AvailableNetworks;

//  Forward declaration of class onv__Dot11AvailableNetworksExtension.
class onv__Dot11AvailableNetworksExtension;

//  Forward declaration of class onv__Capabilities.
class onv__Capabilities;

//  Forward declaration of class onv__CapabilitiesExtension.
class onv__CapabilitiesExtension;

//  Forward declaration of class onv__CapabilitiesExtension2.
class onv__CapabilitiesExtension2;

//  Forward declaration of class onv__AnalyticsCapabilities.
class onv__AnalyticsCapabilities;

//  Forward declaration of class onv__DeviceCapabilities.
class onv__DeviceCapabilities;

//  Forward declaration of class onv__DeviceCapabilitiesExtension.
class onv__DeviceCapabilitiesExtension;

//  Forward declaration of class onv__EventCapabilities.
class onv__EventCapabilities;

//  Forward declaration of class onv__IOCapabilities.
class onv__IOCapabilities;

//  Forward declaration of class onv__IOCapabilitiesExtension.
class onv__IOCapabilitiesExtension;

//  Forward declaration of class onv__IOCapabilitiesExtension2.
class onv__IOCapabilitiesExtension2;

//  Forward declaration of class onv__MediaCapabilities.
class onv__MediaCapabilities;

//  Forward declaration of class onv__MediaCapabilitiesExtension.
class onv__MediaCapabilitiesExtension;

//  Forward declaration of class onv__RealTimeStreamingCapabilities.
class onv__RealTimeStreamingCapabilities;

//  Forward declaration of class onv__RealTimeStreamingCapabilitiesExtension.
class onv__RealTimeStreamingCapabilitiesExtension;

//  Forward declaration of class onv__ProfileCapabilities.
class onv__ProfileCapabilities;

//  Forward declaration of class onv__NetworkCapabilities.
class onv__NetworkCapabilities;

//  Forward declaration of class onv__NetworkCapabilitiesExtension.
class onv__NetworkCapabilitiesExtension;

//  Forward declaration of class onv__NetworkCapabilitiesExtension2.
class onv__NetworkCapabilitiesExtension2;

//  Forward declaration of class onv__SecurityCapabilities.
class onv__SecurityCapabilities;

//  Forward declaration of class onv__SecurityCapabilitiesExtension.
class onv__SecurityCapabilitiesExtension;

//  Forward declaration of class onv__SecurityCapabilitiesExtension2.
class onv__SecurityCapabilitiesExtension2;

//  Forward declaration of class onv__SystemCapabilities.
class onv__SystemCapabilities;

//  Forward declaration of class onv__SystemCapabilitiesExtension.
class onv__SystemCapabilitiesExtension;

//  Forward declaration of class onv__SystemCapabilitiesExtension2.
class onv__SystemCapabilitiesExtension2;

//  Forward declaration of class onv__OnvifVersion.
class onv__OnvifVersion;

//  Forward declaration of class onv__ImagingCapabilities.
class onv__ImagingCapabilities;

//  Forward declaration of class onv__PTZCapabilities.
class onv__PTZCapabilities;

//  Forward declaration of class onv__DeviceIOCapabilities.
class onv__DeviceIOCapabilities;

//  Forward declaration of class onv__DisplayCapabilities.
class onv__DisplayCapabilities;

//  Forward declaration of class onv__RecordingCapabilities.
class onv__RecordingCapabilities;

//  Forward declaration of class onv__SearchCapabilities.
class onv__SearchCapabilities;

//  Forward declaration of class onv__ReplayCapabilities.
class onv__ReplayCapabilities;

//  Forward declaration of class onv__ReceiverCapabilities.
class onv__ReceiverCapabilities;

//  Forward declaration of class onv__AnalyticsDeviceCapabilities.
class onv__AnalyticsDeviceCapabilities;

//  Forward declaration of class onv__AnalyticsDeviceExtension.
class onv__AnalyticsDeviceExtension;

//  Forward declaration of class onv__SystemLog.
class onv__SystemLog;

//  Forward declaration of class onv__SupportInformation.
class onv__SupportInformation;

//  Forward declaration of class onv__BinaryData.
class onv__BinaryData;

//  Forward declaration of class onv__AttachmentData.
class onv__AttachmentData;

//  Forward declaration of class onv__BackupFile.
class onv__BackupFile;

//  Forward declaration of class onv__SystemLogUriList.
class onv__SystemLogUriList;

//  Forward declaration of class onv__SystemLogUri.
class onv__SystemLogUri;

//  Forward declaration of class onv__SystemDateTime.
class onv__SystemDateTime;

//  Forward declaration of class onv__SystemDateTimeExtension.
class onv__SystemDateTimeExtension;

//  Forward declaration of class onv__DateTime.
class onv__DateTime;

//  Forward declaration of class onv__Date.
class onv__Date;

//  Forward declaration of class onv__Time.
class onv__Time;

//  Forward declaration of class onv__TimeZone.
class onv__TimeZone;

//  Forward declaration of class onv__RemoteUser.
class onv__RemoteUser;

//  Forward declaration of class onv__User.
class onv__User;

//  Forward declaration of class onv__UserExtension.
class onv__UserExtension;

//  Forward declaration of class onv__CertificateGenerationParameters.
class onv__CertificateGenerationParameters;

//  Forward declaration of class onv__CertificateGenerationParametersExtension.
class onv__CertificateGenerationParametersExtension;

//  Forward declaration of class onv__Certificate.
class onv__Certificate;

//  Forward declaration of class onv__CertificateStatus.
class onv__CertificateStatus;

//  Forward declaration of class onv__CertificateWithPrivateKey.
class onv__CertificateWithPrivateKey;

//  Forward declaration of class onv__CertificateInformation.
class onv__CertificateInformation;

//  Forward declaration of class onv__CertificateUsage.
class onv__CertificateUsage;

//  Forward declaration of class onv__CertificateInformationExtension.
class onv__CertificateInformationExtension;

//  Forward declaration of class onv__Dot1XConfiguration.
class onv__Dot1XConfiguration;

//  Forward declaration of class onv__Dot1XConfigurationExtension.
class onv__Dot1XConfigurationExtension;

//  Forward declaration of class onv__EAPMethodConfiguration.
class onv__EAPMethodConfiguration;

//  Forward declaration of class onv__EapMethodExtension.
class onv__EapMethodExtension;

//  Forward declaration of class onv__TLSConfiguration.
class onv__TLSConfiguration;

//  Forward declaration of class onv__GenericEapPwdConfigurationExtension.
class onv__GenericEapPwdConfigurationExtension;

//  Forward declaration of class onv__RelayOutputSettings.
class onv__RelayOutputSettings;

//  Forward declaration of class onv__RelayOutput.
class onv__RelayOutput;

//  Forward declaration of class onv__PTZNode.
class onv__PTZNode;

//  Forward declaration of class onv__PTZNodeExtension.
class onv__PTZNodeExtension;

//  Forward declaration of class onv__PTZConfiguration.
class onv__PTZConfiguration;

//  Forward declaration of class onv__PTZConfigurationExtension.
class onv__PTZConfigurationExtension;

//  Forward declaration of class onv__PTZConfigurationOptions.
class onv__PTZConfigurationOptions;

//  Forward declaration of class onv__PanTiltLimits.
class onv__PanTiltLimits;

//  Forward declaration of class onv__ZoomLimits.
class onv__ZoomLimits;

//  Forward declaration of class onv__PTZSpaces.
class onv__PTZSpaces;

//  Forward declaration of class onv__PTZSpacesExtension.
class onv__PTZSpacesExtension;

//  Forward declaration of class onv__Space2DDescription.
class onv__Space2DDescription;

//  Forward declaration of class onv__Space1DDescription.
class onv__Space1DDescription;

//  Forward declaration of class onv__Vector2D.
class onv__Vector2D;

//  Forward declaration of class onv__Vector1D.
class onv__Vector1D;

//  Forward declaration of class onv__PTZVector.
class onv__PTZVector;

//  Forward declaration of class onv__PTZSpeed.
class onv__PTZSpeed;

//  Forward declaration of class onv__PTZStatus.
class onv__PTZStatus;

//  Forward declaration of class onv__PTZPreset.
class onv__PTZPreset;

//  Forward declaration of class onv__PTZMoveStatus.
class onv__PTZMoveStatus;

//  Forward declaration of class onv__ImagingStatus.
class onv__ImagingStatus;

//  Forward declaration of class onv__FocusStatus.
class onv__FocusStatus;

//  Forward declaration of class onv__FocusConfiguration.
class onv__FocusConfiguration;

//  Forward declaration of class onv__ImagingSettings.
class onv__ImagingSettings;

//  Forward declaration of class onv__ImagingSettingsExtension.
class onv__ImagingSettingsExtension;

//  Forward declaration of class onv__Exposure.
class onv__Exposure;

//  Forward declaration of class onv__WideDynamicRange.
class onv__WideDynamicRange;

//  Forward declaration of class onv__BacklightCompensation.
class onv__BacklightCompensation;

//  Forward declaration of class onv__ImagingOptions.
class onv__ImagingOptions;

//  Forward declaration of class onv__WideDynamicRangeOptions.
class onv__WideDynamicRangeOptions;

//  Forward declaration of class onv__BacklightCompensationOptions.
class onv__BacklightCompensationOptions;

//  Forward declaration of class onv__FocusOptions.
class onv__FocusOptions;

//  Forward declaration of class onv__ExposureOptions.
class onv__ExposureOptions;

//  Forward declaration of class onv__WhiteBalanceOptions.
class onv__WhiteBalanceOptions;

//  Forward declaration of class onv__FocusMove.
class onv__FocusMove;

//  Forward declaration of class onv__AbsoluteFocus.
class onv__AbsoluteFocus;

//  Forward declaration of class onv__RelativeFocus.
class onv__RelativeFocus;

//  Forward declaration of class onv__ContinuousFocus.
class onv__ContinuousFocus;

//  Forward declaration of class onv__MoveOptions.
class onv__MoveOptions;

//  Forward declaration of class onv__AbsoluteFocusOptions.
class onv__AbsoluteFocusOptions;

//  Forward declaration of class onv__RelativeFocusOptions.
class onv__RelativeFocusOptions;

//  Forward declaration of class onv__ContinuousFocusOptions.
class onv__ContinuousFocusOptions;

//  Forward declaration of class onv__WhiteBalance.
class onv__WhiteBalance;

//  Forward declaration of class onv__ImagingStatus20.
class onv__ImagingStatus20;

//  Forward declaration of class onv__ImagingStatus20Extension.
class onv__ImagingStatus20Extension;

//  Forward declaration of class onv__FocusStatus20.
class onv__FocusStatus20;

//  Forward declaration of class onv__FocusStatus20Extension.
class onv__FocusStatus20Extension;

//  Forward declaration of class onv__ImagingSettings20.
class onv__ImagingSettings20;

//  Forward declaration of class onv__ImagingSettingsExtension20.
class onv__ImagingSettingsExtension20;

//  Forward declaration of class onv__WideDynamicRange20.
class onv__WideDynamicRange20;

//  Forward declaration of class onv__BacklightCompensation20.
class onv__BacklightCompensation20;

//  Forward declaration of class onv__Exposure20.
class onv__Exposure20;

//  Forward declaration of class onv__ImagingOptions20.
class onv__ImagingOptions20;

//  Forward declaration of class onv__ImagingOptions20Extension.
class onv__ImagingOptions20Extension;

//  Forward declaration of class onv__WideDynamicRangeOptions20.
class onv__WideDynamicRangeOptions20;

//  Forward declaration of class onv__BacklightCompensationOptions20.
class onv__BacklightCompensationOptions20;

//  Forward declaration of class onv__ExposureOptions20.
class onv__ExposureOptions20;

//  Forward declaration of class onv__MoveOptions20.
class onv__MoveOptions20;

//  Forward declaration of class onv__RelativeFocusOptions20.
class onv__RelativeFocusOptions20;

//  Forward declaration of class onv__WhiteBalance20.
class onv__WhiteBalance20;

//  Forward declaration of class onv__WhiteBalance20Extension.
class onv__WhiteBalance20Extension;

//  Forward declaration of class onv__FocusConfiguration20.
class onv__FocusConfiguration20;

//  Forward declaration of class onv__FocusConfiguration20Extension.
class onv__FocusConfiguration20Extension;

//  Forward declaration of class onv__WhiteBalanceOptions20.
class onv__WhiteBalanceOptions20;

//  Forward declaration of class onv__WhiteBalanceOptions20Extension.
class onv__WhiteBalanceOptions20Extension;

//  Forward declaration of class onv__FocusOptions20.
class onv__FocusOptions20;

//  Forward declaration of class onv__FocusOptions20Extension.
class onv__FocusOptions20Extension;

//  Forward declaration of class onv__MessageExtension.
class onv__MessageExtension;

//  Forward declaration of class onv__ItemList.
class onv__ItemList;

//  Forward declaration of class onv__ItemListExtension.
class onv__ItemListExtension;

//  Forward declaration of class onv__MessageDescription.
class onv__MessageDescription;

//  Forward declaration of class onv__MessageDescriptionExtension.
class onv__MessageDescriptionExtension;

//  Forward declaration of class onv__ItemListDescription.
class onv__ItemListDescription;

//  Forward declaration of class onv__ItemListDescriptionExtension.
class onv__ItemListDescriptionExtension;

//  Forward declaration of class onv__Vector.
class onv__Vector;

//  Forward declaration of class onv__Rectangle.
class onv__Rectangle;

//  Forward declaration of class onv__Polygon.
class onv__Polygon;

//  Forward declaration of class onv__Polyline.
class onv__Polyline;

//  Forward declaration of class onv__Color.
class onv__Color;

//  Forward declaration of class onv__ColorCovariance.
class onv__ColorCovariance;

//  Forward declaration of class onv__Appearance.
class onv__Appearance;

//  Forward declaration of class onv__AppearanceExtension.
class onv__AppearanceExtension;

//  Forward declaration of class onv__ShapeDescriptor.
class onv__ShapeDescriptor;

//  Forward declaration of class onv__ShapeDescriptorExtension.
class onv__ShapeDescriptorExtension;

//  Forward declaration of class onv__ColorDescriptor.
class onv__ColorDescriptor;

//  Forward declaration of class onv__ColorDescriptorExtension.
class onv__ColorDescriptorExtension;

//  Forward declaration of class onv__ClassDescriptor.
class onv__ClassDescriptor;

//  Forward declaration of class onv__ClassDescriptorExtension.
class onv__ClassDescriptorExtension;

//  Forward declaration of class onv__Object.
class onv__Object;

//  Forward declaration of class onv__ObjectExtension.
class onv__ObjectExtension;

//  Forward declaration of class onv__Transformation.
class onv__Transformation;

//  Forward declaration of class onv__TransformationExtension.
class onv__TransformationExtension;

//  Forward declaration of class onv__Frame.
class onv__Frame;

//  Forward declaration of class onv__FrameExtension.
class onv__FrameExtension;

//  Forward declaration of class onv__Merge.
class onv__Merge;

//  Forward declaration of class onv__Split.
class onv__Split;

//  Forward declaration of class onv__Rename.
class onv__Rename;

//  Forward declaration of class onv__ObjectId.
class onv__ObjectId;

//  Forward declaration of class onv__Behaviour.
class onv__Behaviour;

//  Forward declaration of class onv__BehaviourExtension.
class onv__BehaviourExtension;

//  Forward declaration of class onv__ObjectTree.
class onv__ObjectTree;

//  Forward declaration of class onv__ObjectTreeExtension.
class onv__ObjectTreeExtension;

//  Forward declaration of class onv__AnalyticsEngineConfiguration.
class onv__AnalyticsEngineConfiguration;

//  Forward declaration of class onv__AnalyticsEngineConfigurationExtension.
class onv__AnalyticsEngineConfigurationExtension;

//  Forward declaration of class onv__RuleEngineConfiguration.
class onv__RuleEngineConfiguration;

//  Forward declaration of class onv__RuleEngineConfigurationExtension.
class onv__RuleEngineConfigurationExtension;

//  Forward declaration of class onv__Config.
class onv__Config;

//  Forward declaration of class onv__ConfigDescription.
class onv__ConfigDescription;

//  Forward declaration of class onv__ConfigDescriptionExtension.
class onv__ConfigDescriptionExtension;

//  Forward declaration of class onv__SupportedRules.
class onv__SupportedRules;

//  Forward declaration of class onv__SupportedRulesExtension.
class onv__SupportedRulesExtension;

//  Forward declaration of class onv__SupportedAnalyticsModules.
class onv__SupportedAnalyticsModules;

//  Forward declaration of class onv__SupportedAnalyticsModulesExtension.
class onv__SupportedAnalyticsModulesExtension;

//  Forward declaration of class onv__MetadataStream.
class onv__MetadataStream;

//  Forward declaration of class onv__MetadataStreamExtension.
class onv__MetadataStreamExtension;

//  Forward declaration of class onv__VideoAnalyticsStream.
class onv__VideoAnalyticsStream;

//  Forward declaration of class onv__VideoAnalyticsStreamExtension.
class onv__VideoAnalyticsStreamExtension;

//  Forward declaration of class onv__PTZStream.
class onv__PTZStream;

//  Forward declaration of class onv__PTZStreamExtension.
class onv__PTZStreamExtension;

//  Forward declaration of class onv__EventStream.
class onv__EventStream;

//  Forward declaration of class onv__EventStreamExtension.
class onv__EventStreamExtension;

//  Forward declaration of class onv__PaneConfiguration.
class onv__PaneConfiguration;

//  Forward declaration of class onv__PaneLayout.
class onv__PaneLayout;

//  Forward declaration of class onv__Layout.
class onv__Layout;

//  Forward declaration of class onv__LayoutExtension.
class onv__LayoutExtension;

//  Forward declaration of class onv__CodingCapabilities.
class onv__CodingCapabilities;

//  Forward declaration of class onv__LayoutOptions.
class onv__LayoutOptions;

//  Forward declaration of class onv__LayoutOptionsExtension.
class onv__LayoutOptionsExtension;

//  Forward declaration of class onv__PaneLayoutOptions.
class onv__PaneLayoutOptions;

//  Forward declaration of class onv__PaneOptionExtension.
class onv__PaneOptionExtension;

//  Forward declaration of class onv__Receiver.
class onv__Receiver;

//  Forward declaration of class onv__ReceiverConfiguration.
class onv__ReceiverConfiguration;

//  Forward declaration of class onv__ReceiverStateInformation.
class onv__ReceiverStateInformation;

//  Forward declaration of class onv__SourceReference.
class onv__SourceReference;

//  Forward declaration of class onv__DateTimeRange.
class onv__DateTimeRange;

//  Forward declaration of class onv__RecordingSummary.
class onv__RecordingSummary;

//  Forward declaration of class onv__SearchScope.
class onv__SearchScope;

//  Forward declaration of class onv__SearchScopeExtension.
class onv__SearchScopeExtension;

//  Forward declaration of class onv__EventFilter.
class onv__EventFilter;

//  Forward declaration of class onv__PTZPositionFilter.
class onv__PTZPositionFilter;

//  Forward declaration of class onv__MetadataFilter.
class onv__MetadataFilter;

//  Forward declaration of class onv__FindRecordingResultList.
class onv__FindRecordingResultList;

//  Forward declaration of class onv__FindEventResultList.
class onv__FindEventResultList;

//  Forward declaration of class onv__FindEventResult.
class onv__FindEventResult;

//  Forward declaration of class onv__FindPTZPositionResultList.
class onv__FindPTZPositionResultList;

//  Forward declaration of class onv__FindPTZPositionResult.
class onv__FindPTZPositionResult;

//  Forward declaration of class onv__FindMetadataResultList.
class onv__FindMetadataResultList;

//  Forward declaration of class onv__FindMetadataResult.
class onv__FindMetadataResult;

//  Forward declaration of class onv__RecordingInformation.
class onv__RecordingInformation;

//  Forward declaration of class onv__RecordingSourceInformation.
class onv__RecordingSourceInformation;

//  Forward declaration of class onv__TrackInformation.
class onv__TrackInformation;

//  Forward declaration of class onv__MediaAttributes.
class onv__MediaAttributes;

//  Forward declaration of class onv__TrackAttributes.
class onv__TrackAttributes;

//  Forward declaration of class onv__TrackAttributesExtension.
class onv__TrackAttributesExtension;

//  Forward declaration of class onv__VideoAttributes.
class onv__VideoAttributes;

//  Forward declaration of class onv__AudioAttributes.
class onv__AudioAttributes;

//  Forward declaration of class onv__MetadataAttributes.
class onv__MetadataAttributes;

//  Forward declaration of class onv__RecordingConfiguration.
class onv__RecordingConfiguration;

//  Forward declaration of class onv__TrackConfiguration.
class onv__TrackConfiguration;

//  Forward declaration of class onv__GetRecordingsResponseItem.
class onv__GetRecordingsResponseItem;

//  Forward declaration of class onv__GetTracksResponseList.
class onv__GetTracksResponseList;

//  Forward declaration of class onv__GetTracksResponseItem.
class onv__GetTracksResponseItem;

//  Forward declaration of class onv__RecordingJobConfiguration.
class onv__RecordingJobConfiguration;

//  Forward declaration of class onv__RecordingJobConfigurationExtension.
class onv__RecordingJobConfigurationExtension;

//  Forward declaration of class onv__RecordingJobSource.
class onv__RecordingJobSource;

//  Forward declaration of class onv__RecordingJobSourceExtension.
class onv__RecordingJobSourceExtension;

//  Forward declaration of class onv__RecordingJobTrack.
class onv__RecordingJobTrack;

//  Forward declaration of class onv__RecordingJobStateInformation.
class onv__RecordingJobStateInformation;

//  Forward declaration of class onv__RecordingJobStateInformationExtension.
class onv__RecordingJobStateInformationExtension;

//  Forward declaration of class onv__RecordingJobStateSource.
class onv__RecordingJobStateSource;

//  Forward declaration of class onv__RecordingJobStateTracks.
class onv__RecordingJobStateTracks;

//  Forward declaration of class onv__RecordingJobStateTrack.
class onv__RecordingJobStateTrack;

//  Forward declaration of class onv__GetRecordingJobsResponseItem.
class onv__GetRecordingJobsResponseItem;

//  Forward declaration of class onv__ReplayConfiguration.
class onv__ReplayConfiguration;

//  Forward declaration of class onv__AnalyticsEngine.
class onv__AnalyticsEngine;

//  Forward declaration of class onv__AnalyticsDeviceEngineConfiguration.
class onv__AnalyticsDeviceEngineConfiguration;

//  Forward declaration of class onv__AnalyticsDeviceEngineConfigurationExtension.
class onv__AnalyticsDeviceEngineConfigurationExtension;

//  Forward declaration of class onv__EngineConfiguration.
class onv__EngineConfiguration;

//  Forward declaration of class onv__AnalyticsEngineInputInfo.
class onv__AnalyticsEngineInputInfo;

//  Forward declaration of class onv__AnalyticsEngineInputInfoExtension.
class onv__AnalyticsEngineInputInfoExtension;

//  Forward declaration of class onv__AnalyticsEngineInput.
class onv__AnalyticsEngineInput;

//  Forward declaration of class onv__SourceIdentification.
class onv__SourceIdentification;

//  Forward declaration of class onv__SourceIdentificationExtension.
class onv__SourceIdentificationExtension;

//  Forward declaration of class onv__MetadataInput.
class onv__MetadataInput;

//  Forward declaration of class onv__MetadataInputExtension.
class onv__MetadataInputExtension;

//  Forward declaration of class onv__AnalyticsEngineControl.
class onv__AnalyticsEngineControl;

//  Forward declaration of class onv__AnalyticsStateInformation.
class onv__AnalyticsStateInformation;

//  Forward declaration of class onv__AnalyticsState.
class onv__AnalyticsState;

//  Forward declaration of class _onv__Message.
class _onv__Message;

//  Forward declaration of class wsnb__QueryExpressionType.
class wsnb__QueryExpressionType;

//  Forward declaration of class wsnb__TopicExpressionType.
class wsnb__TopicExpressionType;

//  Forward declaration of class wsnb__FilterType.
class wsnb__FilterType;

//  Forward declaration of class wsnb__SubscriptionPolicyType.
class wsnb__SubscriptionPolicyType;

//  Forward declaration of class wsnb__NotificationMessageHolderType.
class wsnb__NotificationMessageHolderType;

//  Forward declaration of class wsnb__SubscribeCreationFailedFaultType.
class wsnb__SubscribeCreationFailedFaultType;

//  Forward declaration of class wsnb__InvalidFilterFaultType.
class wsnb__InvalidFilterFaultType;

//  Forward declaration of class wsnb__TopicExpressionDialectUnknownFaultType.
class wsnb__TopicExpressionDialectUnknownFaultType;

//  Forward declaration of class wsnb__InvalidTopicExpressionFaultType.
class wsnb__InvalidTopicExpressionFaultType;

//  Forward declaration of class wsnb__TopicNotSupportedFaultType.
class wsnb__TopicNotSupportedFaultType;

//  Forward declaration of class wsnb__MultipleTopicsSpecifiedFaultType.
class wsnb__MultipleTopicsSpecifiedFaultType;

//  Forward declaration of class wsnb__InvalidProducerPropertiesExpressionFaultType.
class wsnb__InvalidProducerPropertiesExpressionFaultType;

//  Forward declaration of class wsnb__InvalidMessageContentExpressionFaultType.
class wsnb__InvalidMessageContentExpressionFaultType;

//  Forward declaration of class wsnb__UnrecognizedPolicyRequestFaultType.
class wsnb__UnrecognizedPolicyRequestFaultType;

//  Forward declaration of class wsnb__UnsupportedPolicyRequestFaultType.
class wsnb__UnsupportedPolicyRequestFaultType;

//  Forward declaration of class wsnb__NotifyMessageNotSupportedFaultType.
class wsnb__NotifyMessageNotSupportedFaultType;

//  Forward declaration of class wsnb__UnacceptableInitialTerminationTimeFaultType.
class wsnb__UnacceptableInitialTerminationTimeFaultType;

//  Forward declaration of class wsnb__NoCurrentMessageOnTopicFaultType.
class wsnb__NoCurrentMessageOnTopicFaultType;

//  Forward declaration of class wsnb__UnableToGetMessagesFaultType.
class wsnb__UnableToGetMessagesFaultType;

//  Forward declaration of class wsnb__UnableToDestroyPullPointFaultType.
class wsnb__UnableToDestroyPullPointFaultType;

//  Forward declaration of class wsnb__UnableToCreatePullPointFaultType.
class wsnb__UnableToCreatePullPointFaultType;

//  Forward declaration of class wsnb__UnacceptableTerminationTimeFaultType.
class wsnb__UnacceptableTerminationTimeFaultType;

//  Forward declaration of class wsnb__UnableToDestroySubscriptionFaultType.
class wsnb__UnableToDestroySubscriptionFaultType;

//  Forward declaration of class wsnb__PauseFailedFaultType.
class wsnb__PauseFailedFaultType;

//  Forward declaration of class wsnb__ResumeFailedFaultType.
class wsnb__ResumeFailedFaultType;

//  Forward declaration of class _wsnb__NotificationProducerRP.
class _wsnb__NotificationProducerRP;

//  Forward declaration of class _wsnb__SubscriptionManagerRP.
class _wsnb__SubscriptionManagerRP;

//  Forward declaration of class _wsnb__Notify.
class _wsnb__Notify;

//  Forward declaration of class _wsnb__UseRaw.
class _wsnb__UseRaw;

//  Forward declaration of class _wsnb__Subscribe.
class _wsnb__Subscribe;

//  Forward declaration of class _wsnb__SubscribeResponse.
class _wsnb__SubscribeResponse;

//  Forward declaration of class _wsnb__GetCurrentMessage.
class _wsnb__GetCurrentMessage;

//  Forward declaration of class _wsnb__GetCurrentMessageResponse.
class _wsnb__GetCurrentMessageResponse;

//  Forward declaration of class _wsnb__GetMessages.
class _wsnb__GetMessages;

//  Forward declaration of class _wsnb__GetMessagesResponse.
class _wsnb__GetMessagesResponse;

//  Forward declaration of class _wsnb__DestroyPullPoint.
class _wsnb__DestroyPullPoint;

//  Forward declaration of class _wsnb__DestroyPullPointResponse.
class _wsnb__DestroyPullPointResponse;

//  Forward declaration of class _wsnb__CreatePullPoint.
class _wsnb__CreatePullPoint;

//  Forward declaration of class _wsnb__CreatePullPointResponse.
class _wsnb__CreatePullPointResponse;

//  Forward declaration of class _wsnb__Renew.
class _wsnb__Renew;

//  Forward declaration of class _wsnb__RenewResponse.
class _wsnb__RenewResponse;

//  Forward declaration of class _wsnb__Unsubscribe.
class _wsnb__Unsubscribe;

//  Forward declaration of class _wsnb__UnsubscribeResponse.
class _wsnb__UnsubscribeResponse;

//  Forward declaration of class _wsnb__PauseSubscription.
class _wsnb__PauseSubscription;

//  Forward declaration of class _wsnb__PauseSubscriptionResponse.
class _wsnb__PauseSubscriptionResponse;

//  Forward declaration of class _wsnb__ResumeSubscription.
class _wsnb__ResumeSubscription;

//  Forward declaration of class _wsnb__ResumeSubscriptionResponse.
class _wsnb__ResumeSubscriptionResponse;

//  Forward declaration of class wsrfbf__BaseFaultType.
class wsrfbf__BaseFaultType;

//  Forward declaration of class wstop__Documentation.
class wstop__Documentation;

//  Forward declaration of class wstop__ExtensibleDocumented.
class wstop__ExtensibleDocumented;

//  Forward declaration of class wstop__QueryExpressionType.
class wstop__QueryExpressionType;

//  Forward declaration of class wstop__TopicNamespaceType.
class wstop__TopicNamespaceType;

//  Forward declaration of class wstop__TopicType.
class wstop__TopicType;

//  Forward declaration of class wstop__TopicSetType.
class wstop__TopicSetType;

//  Forward declaration of class _tds__GetDeviceInformation.
class _tds__GetDeviceInformation;

//  Forward declaration of class _tds__GetDeviceInformationResponse.
class _tds__GetDeviceInformationResponse;

//  Forward declaration of class _tds__SetSystemDateAndTime.
class _tds__SetSystemDateAndTime;

//  Forward declaration of class _tds__SetSystemDateAndTimeResponse.
class _tds__SetSystemDateAndTimeResponse;

//  Forward declaration of class _tds__GetSystemDateAndTime.
class _tds__GetSystemDateAndTime;

//  Forward declaration of class _tds__GetSystemDateAndTimeResponse.
class _tds__GetSystemDateAndTimeResponse;

//  Forward declaration of class _tds__SetSystemFactoryDefault.
class _tds__SetSystemFactoryDefault;

//  Forward declaration of class _tds__SetSystemFactoryDefaultResponse.
class _tds__SetSystemFactoryDefaultResponse;

//  Forward declaration of class _tds__UpgradeSystemFirmware.
class _tds__UpgradeSystemFirmware;

//  Forward declaration of class _tds__UpgradeSystemFirmwareResponse.
class _tds__UpgradeSystemFirmwareResponse;

//  Forward declaration of class _tds__SystemReboot.
class _tds__SystemReboot;

//  Forward declaration of class _tds__SystemRebootResponse.
class _tds__SystemRebootResponse;

//  Forward declaration of class _tds__RestoreSystem.
class _tds__RestoreSystem;

//  Forward declaration of class _tds__RestoreSystemResponse.
class _tds__RestoreSystemResponse;

//  Forward declaration of class _tds__GetSystemBackup.
class _tds__GetSystemBackup;

//  Forward declaration of class _tds__GetSystemBackupResponse.
class _tds__GetSystemBackupResponse;

//  Forward declaration of class _tds__GetSystemSupportInformation.
class _tds__GetSystemSupportInformation;

//  Forward declaration of class _tds__GetSystemSupportInformationResponse.
class _tds__GetSystemSupportInformationResponse;

//  Forward declaration of class _tds__GetSystemLog.
class _tds__GetSystemLog;

//  Forward declaration of class _tds__GetSystemLogResponse.
class _tds__GetSystemLogResponse;

//  Forward declaration of class _tds__GetScopes.
class _tds__GetScopes;

//  Forward declaration of class _tds__GetScopesResponse.
class _tds__GetScopesResponse;

//  Forward declaration of class _tds__SetScopes.
class _tds__SetScopes;

//  Forward declaration of class _tds__SetScopesResponse.
class _tds__SetScopesResponse;

//  Forward declaration of class _tds__AddScopes.
class _tds__AddScopes;

//  Forward declaration of class _tds__AddScopesResponse.
class _tds__AddScopesResponse;

//  Forward declaration of class _tds__RemoveScopes.
class _tds__RemoveScopes;

//  Forward declaration of class _tds__RemoveScopesResponse.
class _tds__RemoveScopesResponse;

//  Forward declaration of class _tds__GetDiscoveryMode.
class _tds__GetDiscoveryMode;

//  Forward declaration of class _tds__GetDiscoveryModeResponse.
class _tds__GetDiscoveryModeResponse;

//  Forward declaration of class _tds__SetDiscoveryMode.
class _tds__SetDiscoveryMode;

//  Forward declaration of class _tds__SetDiscoveryModeResponse.
class _tds__SetDiscoveryModeResponse;

//  Forward declaration of class _tds__GetRemoteDiscoveryMode.
class _tds__GetRemoteDiscoveryMode;

//  Forward declaration of class _tds__GetRemoteDiscoveryModeResponse.
class _tds__GetRemoteDiscoveryModeResponse;

//  Forward declaration of class _tds__SetRemoteDiscoveryMode.
class _tds__SetRemoteDiscoveryMode;

//  Forward declaration of class _tds__SetRemoteDiscoveryModeResponse.
class _tds__SetRemoteDiscoveryModeResponse;

//  Forward declaration of class _tds__GetDPAddresses.
class _tds__GetDPAddresses;

//  Forward declaration of class _tds__GetDPAddressesResponse.
class _tds__GetDPAddressesResponse;

//  Forward declaration of class _tds__SetDPAddresses.
class _tds__SetDPAddresses;

//  Forward declaration of class _tds__SetDPAddressesResponse.
class _tds__SetDPAddressesResponse;

//  Forward declaration of class _tds__GetUsers.
class _tds__GetUsers;

//  Forward declaration of class _tds__GetUsersResponse.
class _tds__GetUsersResponse;

//  Forward declaration of class _tds__CreateUsers.
class _tds__CreateUsers;

//  Forward declaration of class _tds__CreateUsersResponse.
class _tds__CreateUsersResponse;

//  Forward declaration of class _tds__DeleteUsers.
class _tds__DeleteUsers;

//  Forward declaration of class _tds__DeleteUsersResponse.
class _tds__DeleteUsersResponse;

//  Forward declaration of class _tds__SetUser.
class _tds__SetUser;

//  Forward declaration of class _tds__SetUserResponse.
class _tds__SetUserResponse;

//  Forward declaration of class _tds__GetWsdlUrl.
class _tds__GetWsdlUrl;

//  Forward declaration of class _tds__GetWsdlUrlResponse.
class _tds__GetWsdlUrlResponse;

//  Forward declaration of class _tds__GetCapabilities.
class _tds__GetCapabilities;

//  Forward declaration of class _tds__GetCapabilitiesResponse.
class _tds__GetCapabilitiesResponse;

//  Forward declaration of class _tds__GetHostname.
class _tds__GetHostname;

//  Forward declaration of class _tds__GetHostnameResponse.
class _tds__GetHostnameResponse;

//  Forward declaration of class _tds__SetHostname.
class _tds__SetHostname;

//  Forward declaration of class _tds__SetHostnameResponse.
class _tds__SetHostnameResponse;

//  Forward declaration of class _tds__GetDNS.
class _tds__GetDNS;

//  Forward declaration of class _tds__GetDNSResponse.
class _tds__GetDNSResponse;

//  Forward declaration of class _tds__SetDNS.
class _tds__SetDNS;

//  Forward declaration of class _tds__SetDNSResponse.
class _tds__SetDNSResponse;

//  Forward declaration of class _tds__GetNTP.
class _tds__GetNTP;

//  Forward declaration of class _tds__GetNTPResponse.
class _tds__GetNTPResponse;

//  Forward declaration of class _tds__SetNTP.
class _tds__SetNTP;

//  Forward declaration of class _tds__SetNTPResponse.
class _tds__SetNTPResponse;

//  Forward declaration of class _tds__GetDynamicDNS.
class _tds__GetDynamicDNS;

//  Forward declaration of class _tds__GetDynamicDNSResponse.
class _tds__GetDynamicDNSResponse;

//  Forward declaration of class _tds__SetDynamicDNS.
class _tds__SetDynamicDNS;

//  Forward declaration of class _tds__SetDynamicDNSResponse.
class _tds__SetDynamicDNSResponse;

//  Forward declaration of class _tds__GetNetworkInterfaces.
class _tds__GetNetworkInterfaces;

//  Forward declaration of class _tds__GetNetworkInterfacesResponse.
class _tds__GetNetworkInterfacesResponse;

//  Forward declaration of class _tds__SetNetworkInterfaces.
class _tds__SetNetworkInterfaces;

//  Forward declaration of class _tds__SetNetworkInterfacesResponse.
class _tds__SetNetworkInterfacesResponse;

//  Forward declaration of class _tds__GetNetworkProtocols.
class _tds__GetNetworkProtocols;

//  Forward declaration of class _tds__GetNetworkProtocolsResponse.
class _tds__GetNetworkProtocolsResponse;

//  Forward declaration of class _tds__SetNetworkProtocols.
class _tds__SetNetworkProtocols;

//  Forward declaration of class _tds__SetNetworkProtocolsResponse.
class _tds__SetNetworkProtocolsResponse;

//  Forward declaration of class _tds__GetNetworkDefaultGateway.
class _tds__GetNetworkDefaultGateway;

//  Forward declaration of class _tds__GetNetworkDefaultGatewayResponse.
class _tds__GetNetworkDefaultGatewayResponse;

//  Forward declaration of class _tds__SetNetworkDefaultGateway.
class _tds__SetNetworkDefaultGateway;

//  Forward declaration of class _tds__SetNetworkDefaultGatewayResponse.
class _tds__SetNetworkDefaultGatewayResponse;

//  Forward declaration of class _tds__GetZeroConfiguration.
class _tds__GetZeroConfiguration;

//  Forward declaration of class _tds__GetZeroConfigurationResponse.
class _tds__GetZeroConfigurationResponse;

//  Forward declaration of class _tds__SetZeroConfiguration.
class _tds__SetZeroConfiguration;

//  Forward declaration of class _tds__SetZeroConfigurationResponse.
class _tds__SetZeroConfigurationResponse;

//  Forward declaration of class _tds__GetIPAddressFilter.
class _tds__GetIPAddressFilter;

//  Forward declaration of class _tds__GetIPAddressFilterResponse.
class _tds__GetIPAddressFilterResponse;

//  Forward declaration of class _tds__SetIPAddressFilter.
class _tds__SetIPAddressFilter;

//  Forward declaration of class _tds__SetIPAddressFilterResponse.
class _tds__SetIPAddressFilterResponse;

//  Forward declaration of class _tds__AddIPAddressFilter.
class _tds__AddIPAddressFilter;

//  Forward declaration of class _tds__AddIPAddressFilterResponse.
class _tds__AddIPAddressFilterResponse;

//  Forward declaration of class _tds__RemoveIPAddressFilter.
class _tds__RemoveIPAddressFilter;

//  Forward declaration of class _tds__RemoveIPAddressFilterResponse.
class _tds__RemoveIPAddressFilterResponse;

//  Forward declaration of class _tds__GetAccessPolicy.
class _tds__GetAccessPolicy;

//  Forward declaration of class _tds__GetAccessPolicyResponse.
class _tds__GetAccessPolicyResponse;

//  Forward declaration of class _tds__SetAccessPolicy.
class _tds__SetAccessPolicy;

//  Forward declaration of class _tds__SetAccessPolicyResponse.
class _tds__SetAccessPolicyResponse;

//  Forward declaration of class _tds__CreateCertificate.
class _tds__CreateCertificate;

//  Forward declaration of class _tds__CreateCertificateResponse.
class _tds__CreateCertificateResponse;

//  Forward declaration of class _tds__GetCertificates.
class _tds__GetCertificates;

//  Forward declaration of class _tds__GetCertificatesResponse.
class _tds__GetCertificatesResponse;

//  Forward declaration of class _tds__GetCertificatesStatus.
class _tds__GetCertificatesStatus;

//  Forward declaration of class _tds__GetCertificatesStatusResponse.
class _tds__GetCertificatesStatusResponse;

//  Forward declaration of class _tds__SetCertificatesStatus.
class _tds__SetCertificatesStatus;

//  Forward declaration of class _tds__SetCertificatesStatusResponse.
class _tds__SetCertificatesStatusResponse;

//  Forward declaration of class _tds__DeleteCertificates.
class _tds__DeleteCertificates;

//  Forward declaration of class _tds__DeleteCertificatesResponse.
class _tds__DeleteCertificatesResponse;

//  Forward declaration of class _tds__GetPkcs10Request.
class _tds__GetPkcs10Request;

//  Forward declaration of class _tds__GetPkcs10RequestResponse.
class _tds__GetPkcs10RequestResponse;

//  Forward declaration of class _tds__LoadCertificates.
class _tds__LoadCertificates;

//  Forward declaration of class _tds__LoadCertificatesResponse.
class _tds__LoadCertificatesResponse;

//  Forward declaration of class _tds__GetClientCertificateMode.
class _tds__GetClientCertificateMode;

//  Forward declaration of class _tds__GetClientCertificateModeResponse.
class _tds__GetClientCertificateModeResponse;

//  Forward declaration of class _tds__SetClientCertificateMode.
class _tds__SetClientCertificateMode;

//  Forward declaration of class _tds__SetClientCertificateModeResponse.
class _tds__SetClientCertificateModeResponse;

//  Forward declaration of class _tds__GetRelayOutputs.
class _tds__GetRelayOutputs;

//  Forward declaration of class _tds__GetRelayOutputsResponse.
class _tds__GetRelayOutputsResponse;

//  Forward declaration of class _tds__SetRelayOutputSettings.
class _tds__SetRelayOutputSettings;

//  Forward declaration of class _tds__SetRelayOutputSettingsResponse.
class _tds__SetRelayOutputSettingsResponse;

//  Forward declaration of class _tds__SetRelayOutputState.
class _tds__SetRelayOutputState;

//  Forward declaration of class _tds__SetRelayOutputStateResponse.
class _tds__SetRelayOutputStateResponse;

//  Forward declaration of class _trt__GetVideoSources.
class _trt__GetVideoSources;

//  Forward declaration of class _trt__GetVideoSourcesResponse.
class _trt__GetVideoSourcesResponse;

//  Forward declaration of class _trt__GetAudioSources.
class _trt__GetAudioSources;

//  Forward declaration of class _trt__GetAudioSourcesResponse.
class _trt__GetAudioSourcesResponse;

//  Forward declaration of class _trt__CreateProfile.
class _trt__CreateProfile;

//  Forward declaration of class _trt__CreateProfileResponse.
class _trt__CreateProfileResponse;

//  Forward declaration of class _trt__GetProfile.
class _trt__GetProfile;

//  Forward declaration of class _trt__GetProfileResponse.
class _trt__GetProfileResponse;

//  Forward declaration of class _trt__GetProfiles.
class _trt__GetProfiles;

//  Forward declaration of class _trt__GetProfilesResponse.
class _trt__GetProfilesResponse;

//  Forward declaration of class _trt__AddVideoEncoderConfiguration.
class _trt__AddVideoEncoderConfiguration;

//  Forward declaration of class _trt__AddVideoEncoderConfigurationResponse.
class _trt__AddVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoEncoderConfiguration.
class _trt__RemoveVideoEncoderConfiguration;

//  Forward declaration of class _trt__RemoveVideoEncoderConfigurationResponse.
class _trt__RemoveVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__AddVideoSourceConfiguration.
class _trt__AddVideoSourceConfiguration;

//  Forward declaration of class _trt__AddVideoSourceConfigurationResponse.
class _trt__AddVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoSourceConfiguration.
class _trt__RemoveVideoSourceConfiguration;

//  Forward declaration of class _trt__RemoveVideoSourceConfigurationResponse.
class _trt__RemoveVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__AddAudioEncoderConfiguration.
class _trt__AddAudioEncoderConfiguration;

//  Forward declaration of class _trt__AddAudioEncoderConfigurationResponse.
class _trt__AddAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioEncoderConfiguration.
class _trt__RemoveAudioEncoderConfiguration;

//  Forward declaration of class _trt__RemoveAudioEncoderConfigurationResponse.
class _trt__RemoveAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__AddAudioSourceConfiguration.
class _trt__AddAudioSourceConfiguration;

//  Forward declaration of class _trt__AddAudioSourceConfigurationResponse.
class _trt__AddAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__RemoveAudioSourceConfiguration.
class _trt__RemoveAudioSourceConfiguration;

//  Forward declaration of class _trt__RemoveAudioSourceConfigurationResponse.
class _trt__RemoveAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__AddPTZConfiguration.
class _trt__AddPTZConfiguration;

//  Forward declaration of class _trt__AddPTZConfigurationResponse.
class _trt__AddPTZConfigurationResponse;

//  Forward declaration of class _trt__RemovePTZConfiguration.
class _trt__RemovePTZConfiguration;

//  Forward declaration of class _trt__RemovePTZConfigurationResponse.
class _trt__RemovePTZConfigurationResponse;

//  Forward declaration of class _trt__AddVideoAnalyticsConfiguration.
class _trt__AddVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__AddVideoAnalyticsConfigurationResponse.
class _trt__AddVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__RemoveVideoAnalyticsConfiguration.
class _trt__RemoveVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__RemoveVideoAnalyticsConfigurationResponse.
class _trt__RemoveVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__AddMetadataConfiguration.
class _trt__AddMetadataConfiguration;

//  Forward declaration of class _trt__AddMetadataConfigurationResponse.
class _trt__AddMetadataConfigurationResponse;

//  Forward declaration of class _trt__RemoveMetadataConfiguration.
class _trt__RemoveMetadataConfiguration;

//  Forward declaration of class _trt__RemoveMetadataConfigurationResponse.
class _trt__RemoveMetadataConfigurationResponse;

//  Forward declaration of class _trt__DeleteProfile.
class _trt__DeleteProfile;

//  Forward declaration of class _trt__DeleteProfileResponse.
class _trt__DeleteProfileResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfigurations.
class _trt__GetVideoEncoderConfigurations;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationsResponse.
class _trt__GetVideoEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoSourceConfigurations.
class _trt__GetVideoSourceConfigurations;

//  Forward declaration of class _trt__GetVideoSourceConfigurationsResponse.
class _trt__GetVideoSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfigurations.
class _trt__GetAudioEncoderConfigurations;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationsResponse.
class _trt__GetAudioEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetAudioSourceConfigurations.
class _trt__GetAudioSourceConfigurations;

//  Forward declaration of class _trt__GetAudioSourceConfigurationsResponse.
class _trt__GetAudioSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurations.
class _trt__GetVideoAnalyticsConfigurations;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurationsResponse.
class _trt__GetVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _trt__GetMetadataConfigurations.
class _trt__GetMetadataConfigurations;

//  Forward declaration of class _trt__GetMetadataConfigurationsResponse.
class _trt__GetMetadataConfigurationsResponse;

//  Forward declaration of class _trt__GetVideoSourceConfiguration.
class _trt__GetVideoSourceConfiguration;

//  Forward declaration of class _trt__GetVideoSourceConfigurationResponse.
class _trt__GetVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfiguration.
class _trt__GetVideoEncoderConfiguration;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationResponse.
class _trt__GetVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__GetAudioSourceConfiguration.
class _trt__GetAudioSourceConfiguration;

//  Forward declaration of class _trt__GetAudioSourceConfigurationResponse.
class _trt__GetAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfiguration.
class _trt__GetAudioEncoderConfiguration;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationResponse.
class _trt__GetAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__GetVideoAnalyticsConfiguration.
class _trt__GetVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__GetVideoAnalyticsConfigurationResponse.
class _trt__GetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__GetMetadataConfiguration.
class _trt__GetMetadataConfiguration;

//  Forward declaration of class _trt__GetMetadataConfigurationResponse.
class _trt__GetMetadataConfigurationResponse;

//  Forward declaration of class _trt__GetCompatibleVideoEncoderConfigurations.
class _trt__GetCompatibleVideoEncoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoEncoderConfigurationsResponse.
class _trt__GetCompatibleVideoEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleVideoSourceConfigurations.
class _trt__GetCompatibleVideoSourceConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoSourceConfigurationsResponse.
class _trt__GetCompatibleVideoSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioEncoderConfigurations.
class _trt__GetCompatibleAudioEncoderConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioEncoderConfigurationsResponse.
class _trt__GetCompatibleAudioEncoderConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleAudioSourceConfigurations.
class _trt__GetCompatibleAudioSourceConfigurations;

//  Forward declaration of class _trt__GetCompatibleAudioSourceConfigurationsResponse.
class _trt__GetCompatibleAudioSourceConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleVideoAnalyticsConfigurations.
class _trt__GetCompatibleVideoAnalyticsConfigurations;

//  Forward declaration of class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse.
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _trt__GetCompatibleMetadataConfigurations.
class _trt__GetCompatibleMetadataConfigurations;

//  Forward declaration of class _trt__GetCompatibleMetadataConfigurationsResponse.
class _trt__GetCompatibleMetadataConfigurationsResponse;

//  Forward declaration of class _trt__SetVideoEncoderConfiguration.
class _trt__SetVideoEncoderConfiguration;

//  Forward declaration of class _trt__SetVideoEncoderConfigurationResponse.
class _trt__SetVideoEncoderConfigurationResponse;

//  Forward declaration of class _trt__SetVideoSourceConfiguration.
class _trt__SetVideoSourceConfiguration;

//  Forward declaration of class _trt__SetVideoSourceConfigurationResponse.
class _trt__SetVideoSourceConfigurationResponse;

//  Forward declaration of class _trt__SetAudioEncoderConfiguration.
class _trt__SetAudioEncoderConfiguration;

//  Forward declaration of class _trt__SetAudioEncoderConfigurationResponse.
class _trt__SetAudioEncoderConfigurationResponse;

//  Forward declaration of class _trt__SetAudioSourceConfiguration.
class _trt__SetAudioSourceConfiguration;

//  Forward declaration of class _trt__SetAudioSourceConfigurationResponse.
class _trt__SetAudioSourceConfigurationResponse;

//  Forward declaration of class _trt__SetVideoAnalyticsConfiguration.
class _trt__SetVideoAnalyticsConfiguration;

//  Forward declaration of class _trt__SetVideoAnalyticsConfigurationResponse.
class _trt__SetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _trt__SetMetadataConfiguration.
class _trt__SetMetadataConfiguration;

//  Forward declaration of class _trt__SetMetadataConfigurationResponse.
class _trt__SetMetadataConfigurationResponse;

//  Forward declaration of class _trt__GetVideoSourceConfigurationOptions.
class _trt__GetVideoSourceConfigurationOptions;

//  Forward declaration of class _trt__GetVideoSourceConfigurationOptionsResponse.
class _trt__GetVideoSourceConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationOptions.
class _trt__GetVideoEncoderConfigurationOptions;

//  Forward declaration of class _trt__GetVideoEncoderConfigurationOptionsResponse.
class _trt__GetVideoEncoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioSourceConfigurationOptions.
class _trt__GetAudioSourceConfigurationOptions;

//  Forward declaration of class _trt__GetAudioSourceConfigurationOptionsResponse.
class _trt__GetAudioSourceConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationOptions.
class _trt__GetAudioEncoderConfigurationOptions;

//  Forward declaration of class _trt__GetAudioEncoderConfigurationOptionsResponse.
class _trt__GetAudioEncoderConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetMetadataConfigurationOptions.
class _trt__GetMetadataConfigurationOptions;

//  Forward declaration of class _trt__GetMetadataConfigurationOptionsResponse.
class _trt__GetMetadataConfigurationOptionsResponse;

//  Forward declaration of class _trt__GetGuaranteedNumberOfVideoEncoderInstances.
class _trt__GetGuaranteedNumberOfVideoEncoderInstances;

//  Forward declaration of class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse;

//  Forward declaration of class _trt__GetStreamUri.
class _trt__GetStreamUri;

//  Forward declaration of class _trt__GetStreamUriResponse.
class _trt__GetStreamUriResponse;

//  Forward declaration of class _trt__StartMulticastStreaming.
class _trt__StartMulticastStreaming;

//  Forward declaration of class _trt__StartMulticastStreamingResponse.
class _trt__StartMulticastStreamingResponse;

//  Forward declaration of class _trt__StopMulticastStreaming.
class _trt__StopMulticastStreaming;

//  Forward declaration of class _trt__StopMulticastStreamingResponse.
class _trt__StopMulticastStreamingResponse;

//  Forward declaration of class _trt__SetSynchronizationPoint.
class _trt__SetSynchronizationPoint;

//  Forward declaration of class _trt__SetSynchronizationPointResponse.
class _trt__SetSynchronizationPointResponse;

//  Forward declaration of class _trt__GetSnapshotUri.
class _trt__GetSnapshotUri;

//  Forward declaration of class _trt__GetSnapshotUriResponse.
class _trt__GetSnapshotUriResponse;

//  Forward declaration of class _timg__GetImagingSettings.
class _timg__GetImagingSettings;

//  Forward declaration of class _timg__GetImagingSettingsResponse.
class _timg__GetImagingSettingsResponse;

//  Forward declaration of class _timg__SetImagingSettings.
class _timg__SetImagingSettings;

//  Forward declaration of class _timg__SetImagingSettingsResponse.
class _timg__SetImagingSettingsResponse;

//  Forward declaration of class _timg__GetOptions.
class _timg__GetOptions;

//  Forward declaration of class _timg__GetOptionsResponse.
class _timg__GetOptionsResponse;

//  Forward declaration of class _timg__Move.
class _timg__Move;

//  Forward declaration of class _timg__MoveResponse.
class _timg__MoveResponse;

//  Forward declaration of class _timg__GetMoveOptions.
class _timg__GetMoveOptions;

//  Forward declaration of class _timg__GetMoveOptionsResponse.
class _timg__GetMoveOptionsResponse;

//  Forward declaration of class _timg__Stop.
class _timg__Stop;

//  Forward declaration of class _timg__StopResponse.
class _timg__StopResponse;

//  Forward declaration of class _timg__GetStatus.
class _timg__GetStatus;

//  Forward declaration of class _timg__GetStatusResponse.
class _timg__GetStatusResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef std::string wsnb__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of xs:string.
/// @brief Unique identifier for a physical or logical resource. Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef std::string onv__ReferenceToken:64;

/// Class wrapper
class onv__ReferenceToken__ : public xsd__anyType
{ public:
    onv__ReferenceToken                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of xs:string.
/// @brief User readable name. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef std::string onv__Name:64;

/// Class wrapper
class onv__Name__ : public xsd__anyType
{ public:
    onv__Name                            __item;                       
};

/// "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__VideoEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__VideoEncoding
{
	onv__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	onv__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	onv__VideoEncoding__H264,	///< xs:string value="H264"
};

/// Class wrapper
class onv__VideoEncoding_ : public xsd__anyType
{ public:
    enum onv__VideoEncoding              __item;                       
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Mpeg4Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Mpeg4Profile
{
	onv__Mpeg4Profile__SP,	///< xs:string value="SP"
	onv__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// Class wrapper
class onv__Mpeg4Profile_ : public xsd__anyType
{ public:
    enum onv__Mpeg4Profile               __item;                       
};

/// "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__H264Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__H264Profile
{
	onv__H264Profile__Baseline,	///< xs:string value="Baseline"
	onv__H264Profile__Main,	///< xs:string value="Main"
	onv__H264Profile__Extended,	///< xs:string value="Extended"
	onv__H264Profile__High,	///< xs:string value="High"
};

/// Class wrapper
class onv__H264Profile_ : public xsd__anyType
{ public:
    enum onv__H264Profile                __item;                       
};

/// "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__AudioEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__AudioEncoding
{
	onv__AudioEncoding__G711,	///< xs:string value="G711"
	onv__AudioEncoding__G726,	///< xs:string value="G726"
	onv__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// Class wrapper
class onv__AudioEncoding_ : public xsd__anyType
{ public:
    enum onv__AudioEncoding              __item;                       
};

/// "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__StreamType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__StreamType
{
	onv__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	onv__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// Class wrapper
class onv__StreamType_ : public xsd__anyType
{ public:
    enum onv__StreamType                 __item;                       
};

/// "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__TransportProtocol' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__TransportProtocol
{
	onv__TransportProtocol__UDP,	///< xs:string value="UDP"
	onv__TransportProtocol__TCP,	///< xs:string value="TCP"
	onv__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	onv__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// Class wrapper
class onv__TransportProtocol_ : public xsd__anyType
{ public:
    enum onv__TransportProtocol          __item;                       
};

/// "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ScopeDefinition' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ScopeDefinition
{
	onv__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	onv__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// Class wrapper
class onv__ScopeDefinition_ : public xsd__anyType
{ public:
    enum onv__ScopeDefinition            __item;                       
};

/// "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__DiscoveryMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__DiscoveryMode
{
	onv__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	onv__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// Class wrapper
class onv__DiscoveryMode_ : public xsd__anyType
{ public:
    enum onv__DiscoveryMode              __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of xs:integer.
/// Value range is [0..31]
typedef xsd__integer onv__NetworkInterfaceConfigPriority;

/// Class wrapper
class onv__NetworkInterfaceConfigPriority__ : public xsd__anyType
{ public:
    onv__NetworkInterfaceConfigPriority  __item;                       
};

/// "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Duplex' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Duplex
{
	onv__Duplex__Full,	///< xs:string value="Full"
	onv__Duplex__Half,	///< xs:string value="Half"
};

/// Class wrapper
class onv__Duplex_ : public xsd__anyType
{ public:
    enum onv__Duplex                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of xs:int.
/// @brief For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
typedef int onv__IANA_IfTypes;

/// Class wrapper
class onv__IANA_IfTypes__ : public xsd__anyType
{ public:
    onv__IANA_IfTypes                    __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IPv6DHCPConfiguration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IPv6DHCPConfiguration
{
	onv__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	onv__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	onv__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	onv__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// Class wrapper
class onv__IPv6DHCPConfiguration_ : public xsd__anyType
{ public:
    enum onv__IPv6DHCPConfiguration      __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__NetworkProtocolType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__NetworkProtocolType
{
	onv__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	onv__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	onv__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// Class wrapper
class onv__NetworkProtocolType_ : public xsd__anyType
{ public:
    enum onv__NetworkProtocolType        __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__NetworkHostType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__NetworkHostType
{
	onv__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	onv__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	onv__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// Class wrapper
class onv__NetworkHostType_ : public xsd__anyType
{ public:
    enum onv__NetworkHostType            __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of xs:token.
typedef xsd__token onv__IPv4Address;

/// Class wrapper
class onv__IPv4Address__ : public xsd__anyType
{ public:
    onv__IPv4Address                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of xs:token.
typedef xsd__token onv__IPv6Address;

/// Class wrapper
class onv__IPv6Address__ : public xsd__anyType
{ public:
    onv__IPv6Address                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of xs:token.
typedef xsd__token onv__HwAddress;

/// Class wrapper
class onv__HwAddress__ : public xsd__anyType
{ public:
    onv__HwAddress                       __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IPType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IPType
{
	onv__IPType__IPv4,	///< xs:string value="IPv4"
	onv__IPType__IPv6,	///< xs:string value="IPv6"
};

/// Class wrapper
class onv__IPType_ : public xsd__anyType
{ public:
    enum onv__IPType                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of xs:token.
typedef xsd__token onv__DNSName;

/// Class wrapper
class onv__DNSName__ : public xsd__anyType
{ public:
    onv__DNSName                         __item;                       
};

/// "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of xs:token.
typedef xsd__token onv__Domain;

/// Class wrapper
class onv__Domain__ : public xsd__anyType
{ public:
    onv__Domain                          __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IPAddressFilterType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IPAddressFilterType
{
	onv__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	onv__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// Class wrapper
class onv__IPAddressFilterType_ : public xsd__anyType
{ public:
    enum onv__IPAddressFilterType        __item;                       
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__DynamicDNSType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__DynamicDNSType
{
	onv__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	onv__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	onv__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// Class wrapper
class onv__DynamicDNSType_ : public xsd__anyType
{ public:
    enum onv__DynamicDNSType             __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of xs:hexBinary.
/// Length of this string is within 1..32 characters
typedef xsd__hexBinary onv__Dot11SSIDType 1:32;

/// Class wrapper
class onv__Dot11SSIDType__ : public xsd__anyType
{ public:
    onv__Dot11SSIDType                   __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Dot11StationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Dot11StationMode
{
	onv__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	onv__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	onv__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__Dot11StationMode_ : public xsd__anyType
{ public:
    enum onv__Dot11StationMode           __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Dot11SecurityMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Dot11SecurityMode
{
	onv__Dot11SecurityMode__None,	///< xs:string value="None"
	onv__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	onv__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	onv__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	onv__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__Dot11SecurityMode_ : public xsd__anyType
{ public:
    enum onv__Dot11SecurityMode          __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Dot11Cipher' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Dot11Cipher
{
	onv__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	onv__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	onv__Dot11Cipher__Any,	///< xs:string value="Any"
	onv__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__Dot11Cipher_ : public xsd__anyType
{ public:
    enum onv__Dot11Cipher                __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of xs:hexBinary.
/// Length of this string is exactly 32 characters
typedef xsd__hexBinary onv__Dot11PSK;

/// Class wrapper
class onv__Dot11PSK__ : public xsd__anyType
{ public:
    onv__Dot11PSK                        __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of xs:string.
/// Content pattern is "[ -~]{8,63}" (note: not automatically enforced)
typedef std::string onv__Dot11PSKPassphrase "[ -~]{8,63}";

/// Class wrapper
class onv__Dot11PSKPassphrase__ : public xsd__anyType
{ public:
    onv__Dot11PSKPassphrase              __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Dot11SignalStrength' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Dot11SignalStrength
{
	onv__Dot11SignalStrength__None,	///< xs:string value="None"
	onv__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	onv__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	onv__Dot11SignalStrength__Good,	///< xs:string value="Good"
	onv__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	onv__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__Dot11SignalStrength_ : public xsd__anyType
{ public:
    enum onv__Dot11SignalStrength        __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Dot11AuthAndMangementSuite' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Dot11AuthAndMangementSuite
{
	onv__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	onv__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	onv__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	onv__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__Dot11AuthAndMangementSuite_ : public xsd__anyType
{ public:
    enum onv__Dot11AuthAndMangementSuite  __item;                       
};

/// "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__CapabilityCategory' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__CapabilityCategory
{
	onv__CapabilityCategory__All,	///< xs:string value="All"
	onv__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	onv__CapabilityCategory__Device,	///< xs:string value="Device"
	onv__CapabilityCategory__Events,	///< xs:string value="Events"
	onv__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	onv__CapabilityCategory__Media,	///< xs:string value="Media"
	onv__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// Class wrapper
class onv__CapabilityCategory_ : public xsd__anyType
{ public:
    enum onv__CapabilityCategory         __item;                       
};

/// "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available system log modes.
/// Note: enum values are prefixed with 'onv__SystemLogType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__SystemLogType
{
/// @brief Indicates that a system log is requested.
	onv__SystemLogType__System,	///< xs:string value="System"
/// @brief Indicates that a access log is requested.
	onv__SystemLogType__Access,	///< xs:string value="Access"
};

/// Class wrapper
class onv__SystemLogType_ : public xsd__anyType
{ public:
    enum onv__SystemLogType              __item;                       
};

/// "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available factory default modes.
/// Note: enum values are prefixed with 'onv__FactoryDefaultType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__FactoryDefaultType
{
/// @brief Indicates that a hard factory default is requested.
	onv__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// @brief Indicates that a soft factory default is requested.
	onv__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// Class wrapper
class onv__FactoryDefaultType_ : public xsd__anyType
{ public:
    enum onv__FactoryDefaultType         __item;                       
};

/// "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__SetDateTimeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__SetDateTimeType
{
/// @brief Indicates that the date and time are set manually.
	onv__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// @brief Indicates that the date and time are set through NTP
	onv__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// Class wrapper
class onv__SetDateTimeType_ : public xsd__anyType
{ public:
    enum onv__SetDateTimeType            __item;                       
};

/// "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__UserLevel' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__UserLevel
{
	onv__UserLevel__Administrator,	///< xs:string value="Administrator"
	onv__UserLevel__Operator,	///< xs:string value="Operator"
	onv__UserLevel__User,	///< xs:string value="User"
	onv__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	onv__UserLevel__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__UserLevel_ : public xsd__anyType
{ public:
    enum onv__UserLevel                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RelayLogicalState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RelayLogicalState
{
	onv__RelayLogicalState__active,	///< xs:string value="active"
	onv__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// Class wrapper
class onv__RelayLogicalState_ : public xsd__anyType
{ public:
    enum onv__RelayLogicalState          __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RelayIdleState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RelayIdleState
{
	onv__RelayIdleState__closed,	///< xs:string value="closed"
	onv__RelayIdleState__open,	///< xs:string value="open"
};

/// Class wrapper
class onv__RelayIdleState_ : public xsd__anyType
{ public:
    enum onv__RelayIdleState             __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RelayMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RelayMode
{
	onv__RelayMode__Monostable,	///< xs:string value="Monostable"
	onv__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// Class wrapper
class onv__RelayMode_ : public xsd__anyType
{ public:
    enum onv__RelayMode                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of xs:string.
/// Length of this string is within 0..128 characters
typedef std::string onv__AuxiliaryData:128;

/// Class wrapper
class onv__AuxiliaryData__ : public xsd__anyType
{ public:
    onv__AuxiliaryData                   __item;                       
};

/// "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__MoveStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__MoveStatus
{
	onv__MoveStatus__IDLE,	///< xs:string value="IDLE"
	onv__MoveStatus__MOVING,	///< xs:string value="MOVING"
	onv__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// Class wrapper
class onv__MoveStatus_ : public xsd__anyType
{ public:
    enum onv__MoveStatus                 __item;                       
};

/// "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__AutoFocusMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__AutoFocusMode
{
	onv__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	onv__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onv__AutoFocusMode_ : public xsd__anyType
{ public:
    enum onv__AutoFocusMode              __item;                       
};

/// "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__WideDynamicMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__WideDynamicMode
{
	onv__WideDynamicMode__OFF,	///< xs:string value="OFF"
	onv__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// Class wrapper
class onv__WideDynamicMode_ : public xsd__anyType
{ public:
    enum onv__WideDynamicMode            __item;                       
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available backlight compenstation modes.
/// Note: enum values are prefixed with 'onv__BacklightCompensationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__BacklightCompensationMode
{
/// @brief Backlight compensation is disabled.
	onv__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// @brief Backlight compensation is enabled.
	onv__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// Class wrapper
class onv__BacklightCompensationMode_ : public xsd__anyType
{ public:
    enum onv__BacklightCompensationMode  __item;                       
};

/// "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ExposurePriority' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ExposurePriority
{
	onv__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	onv__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// Class wrapper
class onv__ExposurePriority_ : public xsd__anyType
{ public:
    enum onv__ExposurePriority           __item;                       
};

/// "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ExposureMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ExposureMode
{
	onv__ExposureMode__AUTO,	///< xs:string value="AUTO"
	onv__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onv__ExposureMode_ : public xsd__anyType
{ public:
    enum onv__ExposureMode               __item;                       
};

/// "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Enabled' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Enabled
{
	onv__Enabled__ENABLED,	///< xs:string value="ENABLED"
	onv__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// Class wrapper
class onv__Enabled_ : public xsd__anyType
{ public:
    enum onv__Enabled                    __item;                       
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__WhiteBalanceMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__WhiteBalanceMode
{
	onv__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	onv__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onv__WhiteBalanceMode_ : public xsd__anyType
{ public:
    enum onv__WhiteBalanceMode           __item;                       
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IrCutFilterMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IrCutFilterMode
{
	onv__IrCutFilterMode__ON,	///< xs:string value="ON"
	onv__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	onv__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// Class wrapper
class onv__IrCutFilterMode_ : public xsd__anyType
{ public:
    enum onv__IrCutFilterMode            __item;                       
};

/// "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of xs:anyURI.
typedef xsd__anyURI onv__TopicNamespaceLocation;

/// Class wrapper
class onv__TopicNamespaceLocation__ : public xsd__anyType
{ public:
    onv__TopicNamespaceLocation          __item;                       
};

/// "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__PropertyOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__PropertyOperation
{
	onv__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	onv__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	onv__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// Class wrapper
class onv__PropertyOperation_ : public xsd__anyType
{ public:
    enum onv__PropertyOperation          __item;                       
};

/// "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Direction' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Direction
{
	onv__Direction__Left,	///< xs:string value="Left"
	onv__Direction__Right,	///< xs:string value="Right"
	onv__Direction__Any,	///< xs:string value="Any"
};

/// Class wrapper
class onv__Direction_ : public xsd__anyType
{ public:
    enum onv__Direction                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ClassType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ClassType
{
	onv__ClassType__Animal,	///< xs:string value="Animal"
	onv__ClassType__Face,	///< xs:string value="Face"
	onv__ClassType__Human,	///< xs:string value="Human"
	onv__ClassType__Vehical,	///< xs:string value="Vehical"
	onv__ClassType__Other,	///< xs:string value="Other"
};

/// Class wrapper
class onv__ClassType_ : public xsd__anyType
{ public:
    enum onv__ClassType                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of xs:string.
/// @brief Specifies a receiver connection mode.
/// Note: enum values are prefixed with 'onv__ReceiverMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ReceiverMode
{
/// @brief The receiver connects on demand, as required by consumers of the media streams.
	onv__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// @brief The receiver attempts to maintain a persistent connection to the configured endpoint.
	onv__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// @brief The receiver does not attempt to connect.
	onv__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// @brief This case should never happen.
	onv__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onv__ReceiverMode_ : public xsd__anyType
{ public:
    enum onv__ReceiverMode               __item;                       
};

/// "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of xs:string.
/// @brief Specifies the current connection state of the receiver.
/// Note: enum values are prefixed with 'onv__ReceiverState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ReceiverState
{
/// @brief The receiver is not connected.
	onv__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// @brief The receiver is attempting to connect.
	onv__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// @brief The receiver is connected.
	onv__ReceiverState__Connected,	///< xs:string value="Connected"
/// @brief This case should never happen.
	onv__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onv__ReceiverState_ : public xsd__anyType
{ public:
    enum onv__ReceiverState              __item;                       
};

/// "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of xs:string.
typedef std::string onv__Description;

/// Class wrapper
class onv__Description__ : public xsd__anyType
{ public:
    onv__Description                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of xs:string.
typedef std::string onv__XPathExpression;

/// Class wrapper
class onv__XPathExpression__ : public xsd__anyType
{ public:
    onv__XPathExpression                 __item;                       
};

/// "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__SearchState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__SearchState
{
/// @brief The search is queued and not yet started.
	onv__SearchState__Queued,	///< xs:string value="Queued"
/// @brief The search is underway and not yet completed.
	onv__SearchState__Searching,	///< xs:string value="Searching"
/// @brief The search has been completed and no new results will be found.
	onv__SearchState__Completed,	///< xs:string value="Completed"
/// @brief The state of the search is unknown. (This is not a valid response from GetSearchState.)
	onv__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onv__SearchState_ : public xsd__anyType
{ public:
    enum onv__SearchState                __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RecordingStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RecordingStatus
{
	onv__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	onv__RecordingStatus__Recording,	///< xs:string value="Recording"
	onv__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	onv__RecordingStatus__Removing,	///< xs:string value="Removing"
	onv__RecordingStatus__Removed,	///< xs:string value="Removed"
/// @brief This case should never happen.
	onv__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onv__RecordingStatus_ : public xsd__anyType
{ public:
    enum onv__RecordingStatus            __item;                       
};

/// "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__TrackType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__TrackType
{
	onv__TrackType__Video,	///< xs:string value="Video"
	onv__TrackType__Audio,	///< xs:string value="Audio"
	onv__TrackType__Metadata,	///< xs:string value="Metadata"
/// @brief Placeholder for future extension.
	onv__TrackType__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__TrackType_ : public xsd__anyType
{ public:
    enum onv__TrackType                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of xs:string.
typedef std::string onv__RecordingJobMode;

/// Class wrapper
class onv__RecordingJobMode__ : public xsd__anyType
{ public:
    onv__RecordingJobMode                __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of xs:string.
typedef std::string onv__RecordingJobState;

/// Class wrapper
class onv__RecordingJobState__ : public xsd__anyType
{ public:
    onv__RecordingJobState               __item;                       
};

/// "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ModeOfOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ModeOfOperation
{
	onv__ModeOfOperation__Idle,	///< xs:string value="Idle"
	onv__ModeOfOperation__Active,	///< xs:string value="Active"
/// @brief This case should never happen.
	onv__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onv__ModeOfOperation_ : public xsd__anyType
{ public:
    enum onv__ModeOfOperation            __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of xs:token.
/// @brief TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*" (note: not automatically enforced)
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// Class wrapper
class wstop__FullTopicExpression__ : public xsd__anyType
{ public:
    wstop__FullTopicExpression           __item;                       
};

/// "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of xs:token.
/// @brief The pattern allows strings matching the following EBNF: ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*" (note: not automatically enforced)
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// Class wrapper
class wstop__ConcreteTopicExpression__ : public xsd__anyType
{ public:
    wstop__ConcreteTopicExpression       __item;                       
};

/// "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of xs:QName.
/// @brief The pattern allows strings matching the following EBNF: RootTopic ::= QName
typedef xsd__QName wstop__SimpleTopicExpression;

/// Class wrapper
class wstop__SimpleTopicExpression__ : public xsd__anyType
{ public:
    wstop__SimpleTopicExpression         __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onv__ReferenceToken onv__ReceiverReference;

/// Class wrapper
class onv__ReceiverReference__ : public xsd__anyType
{ public:
    onv__ReceiverReference               __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onv__ReferenceToken onv__RecordingReference;

/// Class wrapper
class onv__RecordingReference__ : public xsd__anyType
{ public:
    onv__RecordingReference              __item;                       
};

/// "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onv__ReferenceToken onv__TrackReference;

/// Class wrapper
class onv__TrackReference__ : public xsd__anyType
{ public:
    onv__TrackReference                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onv__ReferenceToken onv__JobToken;

/// Class wrapper
class onv__JobToken__ : public xsd__anyType
{ public:
    onv__JobToken                        __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onv__ReferenceToken onv__RecordingJobReference;

/// Class wrapper
class onv__RecordingJobReference__ : public xsd__anyType
{ public:
    onv__RecordingJobReference           __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules is a complexType.
class _tan__GetSupportedRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse is a complexType.
class _tan__GetSupportedRulesResponse
{ public:
/// Element SupportedRules of type "http://www.onvif.org/ver10/schema":SupportedRules.
    onv__SupportedRules*                 SupportedRules                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRules

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateRules is a complexType.
class _tan__CreateRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > Rule                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse is a complexType.
class _tan__CreateRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules is a complexType.
class _tan__DeleteRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > RuleName                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse is a complexType.
class _tan__DeleteRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules is a complexType.
class _tan__ModifyRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > Rule                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse is a complexType.
class _tan__ModifyRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetRules is a complexType.
class _tan__GetRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse is a complexType.
class _tan__GetRulesResponse
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > Rule                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules is a complexType.
class _tan__GetSupportedAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse is a complexType.
class _tan__GetSupportedAnalyticsModulesResponse
{ public:
/// Element SupportedAnalyticsModules of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules.
    onv__SupportedAnalyticsModules*      SupportedAnalyticsModules      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules is a complexType.
class _tan__CreateAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > AnalyticsModule                1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse is a complexType.
class _tan__CreateAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules is a complexType.
class _tan__DeleteAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > AnalyticsModuleName            1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse is a complexType.
class _tan__DeleteAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules is a complexType.
class _tan__ModifyAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > AnalyticsModule                1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse is a complexType.
class _tan__ModifyAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules is a complexType.
class _tan__GetAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse is a complexType.
class _tan__GetAnalyticsModulesResponse
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > AnalyticsModule                0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
/// @brief Base class for physical entities like inputs and outputs.
class onv__DeviceEntity : public xsd__anyType
{ public:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
/// @brief Rectangle defined by lower left corner position and size. Units are pixel.
class onv__IntRectangle : public xsd__anyType
{ public:
/// Attribute x of type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute y of type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute width of type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute height of type xs:int.
   @int                                  height                         1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
/// @brief Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
class onv__IntRectangleRange : public xsd__anyType
{ public:
/// @brief Range of X-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       XRange                         1;	///< Required element.
/// @brief Range of Y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       YRange                         1;	///< Required element.
/// @brief Range of width.
/// Element WidthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       WidthRange                     1;	///< Required element.
/// @brief Range of height.
/// Element HeightRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       HeightRange                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IntRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
class onv__IntRange : public xsd__anyType
{ public:
/// Element Min of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element Max of type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
class onv__FloatRange : public xsd__anyType
{ public:
/// Element Min of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element Max of type xs:float.
    float                                Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
/// @brief Range of duration greater equal Min duration and less equal Max duration.
class onv__DurationRange : public xsd__anyType
{ public:
/// Element Min of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element Max of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IntList is a complexType.
/// @brief List of values.
class onv__IntList : public xsd__anyType
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > Items                          0;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
class onv__VideoSourceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    onv__ImagingSettings20*              Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    onv__VideoSourceExtension2*          Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
class onv__VideoSourceExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Profile is a complexType.
/// @brief A media profile consists of a set of media configurations. Media profiles are used by a client to configure properties of a media stream from an NVT.<br/> An NVT shall provide at least one media profile at boot. An NVT should provide ready to use profiles for the most common media configurations that the device offers.<br/> A profile consists of a set of interconnected configuration entities. Configurations are provided by the NVT and can be either static or created dynamically by the NVT. For example, the dynamic configurations can be created by the NVT depending on current available encoding resources.
class onv__Profile : public xsd__anyType
{ public:
/// @brief User readable name of the profile.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Optional configuration of the Video input.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onv__VideoSourceConfiguration*       VideoSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio input.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onv__AudioSourceConfiguration*       AudioSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Video encoder.
/// Element VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onv__VideoEncoderConfiguration*      VideoEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the Audio encoder.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onv__AudioEncoderConfiguration*      AudioEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the video analytics module and rule engine.
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onv__VideoAnalyticsConfiguration*    VideoAnalyticsConfiguration    0;	///< Optional element.
/// @brief Optional configuration of the pan tilt zoom unit.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    onv__PTZConfiguration*               PTZConfiguration               0;	///< Optional element.
/// @brief Optional configuration of the metadata stream.
/// Element MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onv__MetadataConfiguration*          MetadataConfiguration          0;	///< Optional element.
/// @brief Extensions defined in ONVIF 2.0
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    onv__ProfileExtension*               Extension                      0;	///< Optional element.
/// @brief Unique identifier of the profile.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
/// @brief A value of true signals that the profile cannot be deleted. Default is false.
/// Attribute fixed of type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
class onv__ProfileExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional configuration of the Audio output.
/// Element AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    onv__AudioOutputConfiguration*       AudioOutputConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio decoder.
/// Element AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    onv__AudioDecoderConfiguration*      AudioDecoderConfiguration      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    onv__ProfileExtension2*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
class onv__ProfileExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
/// @brief Base type defining the common properties of a configuration.
class onv__ConfigurationEntity : public xsd__anyType
{ public:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
class onv__VideoSourceConfigurationOptions : public xsd__anyType
{ public:
/// @brief Supported range for the capturing area.
/// Element BoundsRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    onv__IntRectangleRange*              BoundsRange                    1;	///< Required element.
/// @brief List of physical inputs.
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > VideoSourceTokensAvailable     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    onv__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
class onv__VideoSourceConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
class onv__VideoResolution : public xsd__anyType
{ public:
/// @brief Number of the columns of the Video image.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief Number of the lines of the Video image.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
class onv__VideoRateControl : public xsd__anyType
{ public:
/// @brief Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// Element FrameRateLimit of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// @brief Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// Element EncodingInterval of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// @brief the maximum output bitrate in kbps
/// Element BitrateLimit of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
class onv__Mpeg4Configuration : public xsd__anyType
{ public:
/// @brief Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// Element Mpeg4Profile of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum onv__Mpeg4Profile               Mpeg4Profile                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
class onv__H264Configuration : public xsd__anyType
{ public:
/// @brief Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the H.264 profile, either baseline, main, extended or high
/// Element H264Profile of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum onv__H264Profile                H264Profile                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
class onv__VideoEncoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief Range of the quality values. A high value means higher quality.
/// Element QualityRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       QualityRange                   1;	///< Required element.
/// @brief Optional JPEG encoder settings ranges (Depricated: use Extension).
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions.
    onv__JpegOptions*                    JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges (Depricated: use Extension).
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    onv__Mpeg4Options*                   MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges (Depricated: use Extension).
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options.
    onv__H264Options*                    H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    onv__VideoEncoderOptionsExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
class onv__VideoEncoderOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional JPEG encoder settings ranges.
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    onv__JpegOptions2*                   JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    onv__Mpeg4Options2*                  MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options2.
    onv__H264Options2*                   H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    onv__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
class onv__VideoEncoderOptionsExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
class onv__JpegOptions : public xsd__anyType
{ public:
/// @brief List of supported image sizes.
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
class onv__Mpeg4Options : public xsd__anyType
{ public:
/// @brief List of supported image sizes.
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Vector of enum onv__Mpeg4Profile with length 1..unbounded
    std::vector<enum onv__Mpeg4Profile > Mpeg4ProfilesSupported         1;
};

/// "http://www.onvif.org/ver10/schema":H264Options is a complexType.
class onv__H264Options : public xsd__anyType
{ public:
/// @brief List of supported image sizes.
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Vector of enum onv__H264Profile with length 1..unbounded
    std::vector<enum onv__H264Profile  > H264ProfilesSupported          1;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
class onv__AudioSourceConfigurationOptions : public xsd__anyType
{ public:
/// @brief Tokens of the audio source the configuration can be used for.
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > InputTokensAvailable           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    onv__AudioSourceOptionsExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
class onv__AudioSourceOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
class onv__AudioEncoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief list of supported AudioEncoderConfigurations
/// Vector of onv__AudioEncoderConfigurationOption* with length 0..unbounded
    std::vector<onv__AudioEncoderConfigurationOption*> Options                        0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
class onv__AudioEncoderConfigurationOption : public xsd__anyType
{ public:
/// @brief The enoding used for audio data (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onv__AudioEncoding              Encoding                       1;	///< Required element.
/// @brief List of supported bitrates in kbps for the specified Encoding
/// Element BitrateList of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        BitrateList                    1;	///< Required element.
/// @brief List of supported Sample Rates in kHz for the specified Encoding
/// Element SampleRateList of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        SampleRateList                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
class onv__PTZFilter : public xsd__anyType
{ public:
/// @brief True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// @brief True if the metadata stream shall contain the PTZ position
/// Element Position of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
/// @brief Subcription handling in the same way as base notification subscription.
class onv__EventSubscription : public xsd__anyType
{ public:
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnb__FilterType*                    Filter                         0;	///< Optional element.
    class _onv__EventSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
class onv__MetadataConfigurationOptions : public xsd__anyType
{ public:
/// Element PTZStatusFilterOptions of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    onv__PTZStatusFilterOptions*         PTZStatusFilterOptions         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
class onv__PTZStatusFilterOptions : public xsd__anyType
{ public:
/// @brief True if the device is able to stream pan or tilt status information.
/// Element PanTiltStatusSupported of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// @brief True if the device is able to stream zoom status inforamtion.
/// Element ZoomStatusSupported of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief True if the device is able to stream the pan or tilt position.
/// Element PanTiltPositionSupported of type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// @brief True if the device is able to stream zoom position information.
/// Element ZoomPositionSupported of type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    onv__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
class onv__PTZStatusFilterOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
class onv__VideoOutputConfigurationOptions : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
class onv__VideoDecoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// Element JpegDecOptions of type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    onv__JpegDecOptions*                 JpegDecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// Element H264DecOptions of type "http://www.onvif.org/ver10/schema":H264DecOptions.
    onv__H264DecOptions*                 H264DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// Element Mpeg4DecOptions of type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    onv__Mpeg4DecOptions*                Mpeg4DecOptions                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    onv__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
class onv__H264DecOptions : public xsd__anyType
{ public:
/// @brief List of supported H.264 Video Resolutions
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief List of supported H264 Profiles (either baseline, main, extended or high)
/// Vector of enum onv__H264Profile with length 1..unbounded
    std::vector<enum onv__H264Profile  > SupportedH264Profiles          1;
/// @brief Supported H.264 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       SupportedInputBitrate          1;	///< Required element.
/// @brief Supported H.264 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
class onv__JpegDecOptions : public xsd__anyType
{ public:
/// @brief List of supported Jpeg Video Resolutions
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported Jpeg bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Jpeg framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
class onv__Mpeg4DecOptions : public xsd__anyType
{ public:
/// @brief List of supported Mpeg4 Video Resolutions
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief List of supported Mpeg4 Profiles (either SP or ASP)
/// Vector of enum onv__Mpeg4Profile with length 1..unbounded
    std::vector<enum onv__Mpeg4Profile > SupportedMpeg4Profiles         1;
/// @brief Supported Mpeg4 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Mpeg4 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
class onv__VideoDecoderConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
class onv__AudioOutputConfigurationOptions : public xsd__anyType
{ public:
/// @brief Tokens of the physical Audio outputs (typically one).
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > OutputTokensAvailable          1;
/// @brief An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li></ul> Acoustic echo cancellation is out of ONVIF scope.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > SendPrimacyOptions             0;
/// @brief Minimum and maximum level range supported for this Output.
/// Element OutputLevelRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       OutputLevelRange               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
class onv__AudioDecoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief If the device is able to decode AAC encoded audio this section describes the supported configurations
/// Element AACDecOptions of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    onv__AACDecOptions*                  AACDecOptions                  0;	///< Optional element.
/// @brief If the device is able to decode G711 encoded audio this section describes the supported configurations
/// Element G711DecOptions of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    onv__G711DecOptions*                 G711DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode G726 encoded audio this section describes the supported configurations
/// Element G726DecOptions of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    onv__G726DecOptions*                 G726DecOptions                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    onv__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
class onv__G711DecOptions : public xsd__anyType
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
class onv__AACDecOptions : public xsd__anyType
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
class onv__G726DecOptions : public xsd__anyType
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
class onv__AudioDecoderConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
class onv__MulticastConfiguration : public xsd__anyType
{ public:
/// @brief The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// Element Address of type "http://www.onvif.org/ver10/schema":IPAddress.
    onv__IPAddress*                      Address                        1;	///< Required element.
/// @brief The multicast port
/// Element Port of type xs:int.
    int                                  Port                           1;	///< Required element.
/// @brief The TTL value that should be used for the multicast stream
/// Element TTL of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// @brief true if the streaming is persistant (shall restart after a reboot)
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
class onv__StreamSetup : public xsd__anyType
{ public:
/// @brief Defines if a multicast or unicast stream is requested
/// Element Stream of type "http://www.onvif.org/ver10/schema":StreamType.
    enum onv__StreamType                 Stream                         1;	///< Required element.
/// Element Transport of type "http://www.onvif.org/ver10/schema":Transport.
    onv__Transport*                      Transport                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Transport is a complexType.
class onv__Transport : public xsd__anyType
{ public:
/// @brief Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// Element Protocol of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum onv__TransportProtocol          Protocol                       1;	///< Required element.
/// @brief Optional element to describe further tunnel options. This element is normally not needed
/// Element Tunnel of type "http://www.onvif.org/ver10/schema":Transport.
    onv__Transport*                      Tunnel                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
class onv__MediaUri : public xsd__anyType
{ public:
/// @brief Stable Uri to be used for requesting the media stream
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @brief Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// Element InvalidAfterConnect of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// @brief Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// Element InvalidAfterReboot of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// @brief Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Scope is a complexType.
class onv__Scope : public xsd__anyType
{ public:
/// @brief Indicates if the scope is fixed or configurable.
/// Element ScopeDef of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum onv__ScopeDefinition            ScopeDef                       1;	///< Required element.
/// @brief Scope item URI.
/// Element ScopeItem of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
class onv__NetworkInterfaceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    onv__IANA_IfTypes                    InterfaceType                  1;	///< Required element.
/// @brief Extension point prepared for future 802.3 configuration.
/// Vector of onv__Dot3Configuration* with length 0..unbounded
    std::vector<onv__Dot3Configuration*> Dot3                           0;
/// Vector of onv__Dot11Configuration* with length 0..unbounded
    std::vector<onv__Dot11Configuration*> Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    onv__NetworkInterfaceExtension2*     Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
class onv__Dot3Configuration : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
class onv__NetworkInterfaceExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
class onv__NetworkInterfaceLink : public xsd__anyType
{ public:
/// @brief Configured link settings.
/// Element AdminSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onv__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// @brief Current active link settings.
/// Element OperSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onv__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// @brief Integer indicating interface type, for example: 6 is ethernet.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    onv__IANA_IfTypes                    InterfaceType                  1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
class onv__NetworkInterfaceConnectionSetting : public xsd__anyType
{ public:
/// @brief Auto negotiation on/off.
/// Element AutoNegotiation of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// @brief Speed.
/// Element Speed of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// @brief Duplex type, Half or Full.
/// Element Duplex of type "http://www.onvif.org/ver10/schema":Duplex.
    enum onv__Duplex                     Duplex                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
class onv__NetworkInterfaceInfo : public xsd__anyType
{ public:
/// @brief Network interface name, for example eth0.
/// Element Name of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// @brief Network interface MAC address.
/// Element HwAddress of type "http://www.onvif.org/ver10/schema":HwAddress.
    onv__HwAddress                       HwAddress                      1;	///< Required element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
class onv__IPv6NetworkInterface : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv6 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    onv__IPv6Configuration*              Config                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
class onv__IPv4NetworkInterface : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv4 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    onv__IPv4Configuration*              Config                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
class onv__IPv4Configuration : public xsd__anyType
{ public:
/// @brief List of manually added IPv4 addresses.
/// Vector of onv__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv4Address*> Manual                         0;
/// @brief Link local address.
/// Element LinkLocal of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    onv__PrefixedIPv4Address*            LinkLocal                      0;	///< Optional element.
/// @brief IPv4 address configured by using DHCP.
/// Element FromDHCP of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    onv__PrefixedIPv4Address*            FromDHCP                       0;	///< Optional element.
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
class onv__IPv6Configuration : public xsd__anyType
{ public:
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum onv__IPv6DHCPConfiguration      DHCP                           1;	///< Required element.
/// @brief List of manually entered IPv6 addresses.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> Manual                         0;
/// @brief List of link local IPv6 addresses.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> LinkLocal                      0;
/// @brief List of IPv6 addresses configured by using DHCP.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> FromDHCP                       0;
/// @brief List of IPv6 addresses configured by using router advertisment.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> FromRA                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    onv__IPv6ConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
class onv__IPv6ConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
class onv__NetworkProtocol : public xsd__anyType
{ public:
/// @brief Network protocol type string.
/// Element Name of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum onv__NetworkProtocolType        Name                           1;	///< Required element.
/// @brief Indicates if the protocol is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The port that is used by the protocol.
/// Vector of int with length 1..unbounded
    std::vector<int                    > Port                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    onv__NetworkProtocolExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
class onv__NetworkProtocolExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
class onv__NetworkHost : public xsd__anyType
{ public:
/// @brief Network host type: IPv4, IPv6 or DNS.
/// Element Type of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum onv__NetworkHostType            Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onv__IPv4Address*                    IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address.
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onv__IPv6Address*                    IPv6Address                    0;	///< Optional element.
/// @brief DNS name.
/// Element DNSname of type "http://www.onvif.org/ver10/schema":DNSName.
    onv__DNSName*                        DNSname                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    onv__NetworkHostExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
class onv__NetworkHostExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
class onv__IPAddress : public xsd__anyType
{ public:
/// @brief Indicates if the address is an IPv4 or IPv6 address.
/// Element Type of type "http://www.onvif.org/ver10/schema":IPType.
    enum onv__IPType                     Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onv__IPv4Address*                    IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onv__IPv6Address*                    IPv6Address                    0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
class onv__PrefixedIPv4Address : public xsd__anyType
{ public:
/// @brief IPv4 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onv__IPv4Address                     Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
class onv__PrefixedIPv6Address : public xsd__anyType
{ public:
/// @brief IPv6 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onv__IPv6Address                     Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
class onv__HostnameInformation : public xsd__anyType
{ public:
/// @brief Indicates whether the hostname is obtained from DHCP or not.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Indicates the hostname.
/// Element Name of type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    onv__HostnameInformationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
class onv__HostnameInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
class onv__DNSInformation : public xsd__anyType
{ public:
/// @brief Indicates whether or not DNS information is retrieved from DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Search domain.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// @brief List of DNS addresses received from DHCP.
/// Vector of onv__IPAddress* with length 0..unbounded
    std::vector<onv__IPAddress*        > DNSFromDHCP                    0;
/// @brief List of manually entered DNS addresses.
/// Vector of onv__IPAddress* with length 0..unbounded
    std::vector<onv__IPAddress*        > DNSManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    onv__DNSInformationExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
class onv__DNSInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
class onv__NTPInformation : public xsd__anyType
{ public:
/// @brief Indicates if NTP information is to be retrieved by using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief List of NTP addresses retrieved by using DHCP.
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > NTPFromDHCP                    0;
/// @brief List of manually entered NTP addresses.
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > NTPManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    onv__NTPInformationExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
class onv__NTPInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
class onv__DynamicDNSInformation : public xsd__anyType
{ public:
/// @brief Dynamic DNS type.
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum onv__DynamicDNSType             Type                           1;	///< Required element.
/// @brief DNS name.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    onv__DNSName*                        Name                           0;	///< Optional element.
/// @brief Time to live.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    onv__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
class onv__DynamicDNSInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
class onv__NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onv__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    onv__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    onv__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    onv__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
class onv__NetworkInterfaceSetConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Vector of onv__Dot3Configuration* with length 0..unbounded
    std::vector<onv__Dot3Configuration*> Dot3                           0;
/// Element Dot11 of type "http://www.onvif.org/ver10/schema":Dot11Configuration.
    onv__Dot11Configuration*             Dot11                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    onv__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
class onv__IPv6NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief List of manually added IPv6 addresses.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> Manual                         0;
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum onv__IPv6DHCPConfiguration*     DHCP                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
class onv__IPv4NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief List of manually added IPv4 addresses.
/// Vector of onv__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv4Address*> Manual                         0;
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
class onv__NetworkGateway : public xsd__anyType
{ public:
/// @brief IPv4 address string.
/// Vector of onv__IPv4Address with length 0..unbounded
    std::vector<onv__IPv4Address       > IPv4Address                    0;
/// @brief IPv6 address string.
/// Vector of onv__IPv6Address with length 0..unbounded
    std::vector<onv__IPv6Address       > IPv6Address                    0;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
class onv__NetworkZeroConfiguration : public xsd__anyType
{ public:
/// @brief Unique identifier of network interface.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  InterfaceToken                 1;	///< Required element.
/// @brief Indicates whether the zero-configuration is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The zero-configuration IPv4 address(es)
/// Vector of onv__IPv4Address with length 0..unbounded
    std::vector<onv__IPv4Address       > Addresses                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    onv__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
class onv__NetworkZeroConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
class onv__IPAddressFilter : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum onv__IPAddressFilterType        Type                           1;	///< Required element.
/// Vector of onv__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv4Address*> IPv4Address                    0;
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> IPv6Address                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    onv__IPAddressFilterExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
class onv__IPAddressFilterExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
class onv__Dot11Configuration : public xsd__anyType
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    onv__Dot11SSIDType                   SSID                           1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum onv__Dot11StationMode           Mode                           1;	///< Required element.
/// Element Alias of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Alias                          1;	///< Required element.
/// Element Priority of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    onv__NetworkInterfaceConfigPriority  Priority                       1;	///< Required element.
/// Element Security of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    onv__Dot11SecurityConfiguration*     Security                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
class onv__Dot11SecurityConfiguration : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum onv__Dot11SecurityMode          Mode                           1;	///< Required element.
/// Element Algorithm of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum onv__Dot11Cipher*               Algorithm                      0;	///< Optional element.
/// Element PSK of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    onv__Dot11PSKSet*                    PSK                            0;	///< Optional element.
/// Element Dot1X of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 Dot1X                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    onv__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
class onv__Dot11SecurityConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
class onv__Dot11PSKSet : public xsd__anyType
{ public:
/// Element Key of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    onv__Dot11PSK*                       Key                            0;	///< Optional element.
/// Element Passphrase of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    onv__Dot11PSKPassphrase*             Passphrase                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    onv__Dot11PSKSetExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
class onv__Dot11PSKSetExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
class onv__NetworkInterfaceSetConfigurationExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
class onv__Dot11Capabilities : public xsd__anyType
{ public:
/// Element TKIP of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element ScanAvailableNetworks of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element MultipleConfiguration of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element AdHocStationMode of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element WEP of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
class onv__Dot11Status : public xsd__anyType
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    onv__Dot11SSIDType                   SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Element PairCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum onv__Dot11Cipher*               PairCipher                     0;	///< Optional element.
/// Element GroupCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum onv__Dot11Cipher*               GroupCipher                    0;	///< Optional element.
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum onv__Dot11SignalStrength*       SignalStrength                 0;	///< Optional element.
/// Element ActiveConfigAlias of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ActiveConfigAlias              1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
class onv__Dot11AvailableNetworks : public xsd__anyType
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    onv__Dot11SSIDType                   SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Vector of enum onv__Dot11AuthAndMangementSuite with length 0..unbounded
    std::vector<enum onv__Dot11AuthAndMangementSuite> AuthAndMangementSuite          0;
/// Vector of enum onv__Dot11Cipher with length 0..unbounded
    std::vector<enum onv__Dot11Cipher  > PairCipher                     0;
/// Vector of enum onv__Dot11Cipher with length 0..unbounded
    std::vector<enum onv__Dot11Cipher  > GroupCipher                    0;
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum onv__Dot11SignalStrength*       SignalStrength                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    onv__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
class onv__Dot11AvailableNetworksExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
class onv__Capabilities : public xsd__anyType
{ public:
/// @brief Analytics capabilities
/// Element Analytics of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    onv__AnalyticsCapabilities*          Analytics                      0;	///< Optional element.
/// @brief Device capabilities
/// Element Device of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    onv__DeviceCapabilities*             Device                         0;	///< Optional element.
/// @brief Event capabilities
/// Element Events of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    onv__EventCapabilities*              Events                         0;	///< Optional element.
/// @brief Imaging capabilities
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    onv__ImagingCapabilities*            Imaging                        0;	///< Optional element.
/// @brief Media capabilities
/// Element Media of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    onv__MediaCapabilities*              Media                          0;	///< Optional element.
/// @brief PTZ capabilities
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    onv__PTZCapabilities*                PTZ                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    onv__CapabilitiesExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
class onv__CapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element DeviceIO of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    onv__DeviceIOCapabilities*           DeviceIO                       0;	///< Optional element.
/// Element Display of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    onv__DisplayCapabilities*            Display                        0;	///< Optional element.
/// Element Recording of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    onv__RecordingCapabilities*          Recording                      0;	///< Optional element.
/// Element Search of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    onv__SearchCapabilities*             Search                         0;	///< Optional element.
/// Element Replay of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    onv__ReplayCapabilities*             Replay                         0;	///< Optional element.
/// Element Receiver of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    onv__ReceiverCapabilities*           Receiver                       0;	///< Optional element.
/// Element AnalyticsDevice of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    onv__AnalyticsDeviceCapabilities*    AnalyticsDevice                0;	///< Optional element.
/// Element Extensions of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    onv__CapabilitiesExtension2*         Extensions                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
class onv__CapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
class onv__AnalyticsCapabilities : public xsd__anyType
{ public:
/// @brief Analytics service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not rules are supported.
/// Element RuleSupport of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// @brief Indicates whether or not modules are supported.
/// Element AnalyticsModuleSupport of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
class onv__DeviceCapabilities : public xsd__anyType
{ public:
/// @brief Device service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Network capabilities.
/// Element Network of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    onv__NetworkCapabilities*            Network                        0;	///< Optional element.
/// @brief System capabilities.
/// Element System of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    onv__SystemCapabilities*             System                         0;	///< Optional element.
/// @brief I/O capabilities.
/// Element IO of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    onv__IOCapabilities*                 IO                             0;	///< Optional element.
/// @brief Security capabilities.
/// Element Security of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    onv__SecurityCapabilities*           Security                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    onv__DeviceCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
class onv__DeviceCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
class onv__EventCapabilities : public xsd__anyType
{ public:
/// @brief Event service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not WS Subscription policy is supported.
/// Element WSSubscriptionPolicySupport of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// @brief Indicates whether or not WS Pull Point is supported.
/// Element WSPullPointSupport of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// @brief Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// Element WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
class onv__IOCapabilities : public xsd__anyType
{ public:
/// @brief Number of input connectors.
/// Element InputConnectors of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// @brief Number of relay outputs.
/// Element RelayOutputs of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    onv__IOCapabilitiesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
class onv__IOCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Auxiliary of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Vector of onv__AuxiliaryData with length 0..unbounded
    std::vector<onv__AuxiliaryData     > AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    onv__IOCapabilitiesExtension2*       Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
class onv__IOCapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
class onv__MediaCapabilities : public xsd__anyType
{ public:
/// @brief Media service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Streaming capabilities.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    onv__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    onv__MediaCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
class onv__MediaCapabilitiesExtension : public xsd__anyType
{ public:
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    onv__ProfileCapabilities*            ProfileCapabilities            1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
class onv__RealTimeStreamingCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not RTP multicast is supported.
/// Element RTPMulticast of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// @brief Indicates whether or not RTP over TCP is supported.
/// Element RTP_TCP of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// @brief Indicates whether or not RTP/RTSP/TCP is supported.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    onv__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
class onv__RealTimeStreamingCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
class onv__ProfileCapabilities : public xsd__anyType
{ public:
/// @brief Maximum number of profiles.
/// Element MaximumNumberOfProfiles of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
class onv__NetworkCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not IP filtering is supported.
/// Element IPFilter of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// @brief Indicates whether or not zeroconf is supported.
/// Element ZeroConfiguration of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// @brief Indicates whether or not IPv6 is supported.
/// Element IPVersion6 of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// @brief Indicates whether or not is supported.
/// Element DynDNS of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    onv__NetworkCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
class onv__NetworkCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Dot11Configuration of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    onv__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
class onv__NetworkCapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
class onv__SecurityCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not TLS 1.1 is supported.
/// Element TLS1.1 of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// @brief Indicates whether or not TLS 1.2 is supported.
/// Element TLS1.2 of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// @brief Indicates whether or not onboard key generation is supported.
/// Element OnboardKeyGeneration of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// @brief Indicates whether or not access policy configuration is supported.
/// Element AccessPolicyConfig of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// @brief Indicates whether or not WS-Security X.509 token is supported.
/// Element X.509Token of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// @brief Indicates whether or not WS-Security SAML token is supported.
/// Element SAMLToken of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// @brief Indicates whether or not WS-Security Kerberos token is supported.
/// Element KerberosToken of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// @brief Indicates whether or not WS-Security REL token is supported.
/// Element RELToken of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    onv__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
class onv__SecurityCapabilitiesExtension : public xsd__anyType
{ public:
/// Element TLS1.0 of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    onv__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
class onv__SecurityCapabilitiesExtension2 : public xsd__anyType
{ public:
/// Element Dot1X of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// @brief EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Vector of int with length 0..unbounded
    std::vector<int                    > SupportedEAPMethod             0;
/// Element RemoteUserHandling of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
class onv__SystemCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not WS Discovery resolve requests are supported.
/// Element DiscoveryResolve of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// @brief Indicates whether or not WS-Discovery Bye is supported.
/// Element DiscoveryBye of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// @brief Indicates whether or not remote discovery, see WS-Discovery, is supported.
/// Element RemoteDiscovery of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// @brief Indicates whether or not system backup is supported.
/// Element SystemBackup of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// @brief Indicates whether or not system logging is supported.
/// Element SystemLogging of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// @brief Indicates whether or not firmware upgrade is supported.
/// Element FirmwareUpgrade of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// @brief Indicates supported ONVIF version(s).
/// Vector of onv__OnvifVersion* with length 1..unbounded
    std::vector<onv__OnvifVersion*     > SupportedVersions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    onv__SystemCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
class onv__SystemCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element HttpFirmwareUpgrade of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element HttpSystemBackup of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element HttpSystemLogging of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element HttpSupportInformation of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    onv__SystemCapabilitiesExtension2*   Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
class onv__SystemCapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
class onv__OnvifVersion : public xsd__anyType
{ public:
/// @brief Major version number.
/// Element Major of type xs:int.
    int                                  Major                          1;	///< Required element.
/// @brief Two digit minor version number (e.g. 1 maps to "01" and 20 maps to "20").
/// Element Minor of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
class onv__ImagingCapabilities : public xsd__anyType
{ public:
/// @brief Imaging service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
class onv__PTZCapabilities : public xsd__anyType
{ public:
/// @brief PTZ service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
class onv__DeviceIOCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element VideoSources of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element VideoOutputs of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element AudioSources of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element AudioOutputs of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element RelayOutputs of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
class onv__DisplayCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indication that the SetLayout command supports only predefined layouts.
/// Element FixedLayout of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
class onv__RecordingCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element ReceiverSource of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element MediaProfileSource of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element DynamicRecordings of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element DynamicTracks of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element MaxStringLength of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
class onv__SearchCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element MetadataSearch of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
class onv__ReplayCapabilities : public xsd__anyType
{ public:
/// @brief The address of the replay service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
class onv__ReceiverCapabilities : public xsd__anyType
{ public:
/// @brief The address of the receiver service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether the device can receive RTP multicast streams.
/// Element RTP_Multicast of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/TCP streams
/// Element RTP_TCP of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/RTSP/TCP streams.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// @brief The maximum number of receivers supported by the device.
/// Element SupportedReceivers of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// @brief The maximum allowed length for RTSP URIs.
/// Element MaximumRTSPURILength of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
class onv__AnalyticsDeviceCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Obsolete property.
/// Element RuleSupport of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    onv__AnalyticsDeviceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
class onv__AnalyticsDeviceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
class onv__SystemLog : public xsd__anyType
{ public:
/// @brief The log information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Binary                         0;	///< Optional element.
/// @brief The log information as character data.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
class onv__SupportInformation : public xsd__anyType
{ public:
/// @brief The support information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Binary                         0;	///< Optional element.
/// @brief The support information as character data.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
class onv__BinaryData : public xsd__anyType
{ public:
/// @brief base64 encoded binary data.
/// Element Data of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
class onv__AttachmentData : public xsd__anyType
{ public:
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
class onv__BackupFile : public xsd__anyType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element Data of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Data                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
class onv__SystemLogUriList : public xsd__anyType
{ public:
/// Vector of onv__SystemLogUri* with length 0..unbounded
    std::vector<onv__SystemLogUri*     > SystemLog                      0;
};

/// "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
class onv__SystemLogUri : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum onv__SystemLogType              Type                           1;	///< Required element.
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
/// @brief General date time inforamtion returned by the GetSystemDateTime method.
class onv__SystemDateTime : public xsd__anyType
{ public:
/// @brief Indicates if the time is set manully or through NTP.
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum onv__SetDateTimeType            DateTimeType                   1;	///< Required element.
/// @brief Informative indicator whether daylight savings is currently on/off.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// @brief Timezone information in Posix format.
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    onv__TimeZone*                       TimeZone                       0;	///< Optional element.
/// @brief Current system date and time in UTC format. This field is mandatory since version 2.0.
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onv__DateTime*                       UTCDateTime                    0;	///< Optional element.
/// @brief Date and time in local format.
/// Element LocalDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onv__DateTime*                       LocalDateTime                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    onv__SystemDateTimeExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
class onv__SystemDateTimeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DateTime is a complexType.
class onv__DateTime : public xsd__anyType
{ public:
/// Element Time of type "http://www.onvif.org/ver10/schema":Time.
    onv__Time*                           Time                           1;	///< Required element.
/// Element Date of type "http://www.onvif.org/ver10/schema":Date.
    onv__Date*                           Date                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Date is a complexType.
class onv__Date : public xsd__anyType
{ public:
/// Element Year of type xs:int.
    int                                  Year                           1;	///< Required element.
/// @brief Range is 1 to 12.
/// Element Month of type xs:int.
    int                                  Month                          1;	///< Required element.
/// @brief Range is 1 to 31.
/// Element Day of type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Time is a complexType.
class onv__Time : public xsd__anyType
{ public:
/// @brief Range is 0 to 23.
/// Element Hour of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// @brief Range is 0 to 59.
/// Element Minute of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// @brief Range is 0 to 61 (typically 59).
/// Element Second of type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
/// @brief The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/> Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/> CET = designation for standard time when daylight saving is not in force<br/> -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/> CEST = designation when daylight saving is in force ("Central European Summer Time")<br/> , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/> M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/> /2, = the local time when the switch occurs = 2 a.m. in this case<br/> M10.5.0 = when daylight saving ends = the last Sunday in October.<br/> /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
class onv__TimeZone : public xsd__anyType
{ public:
/// @brief Posix timezone string.
/// Element TZ of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
class onv__RemoteUser : public xsd__anyType
{ public:
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element UseDerivedPassword of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":User is a complexType.
class onv__User : public xsd__anyType
{ public:
/// @brief Username string.
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// @brief Password string.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// @brief User level string.
/// Element UserLevel of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum onv__UserLevel                  UserLevel                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":UserExtension.
    onv__UserExtension*                  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
class onv__UserExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
class onv__CertificateGenerationParameters : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element ValidNotBefore of type xs:token.
    xsd__token*                          ValidNotBefore                 0;	///< Optional element.
/// Element ValidNotAfter of type xs:token.
    xsd__token*                          ValidNotAfter                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    onv__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
class onv__CertificateGenerationParametersExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Certificate is a complexType.
class onv__Certificate : public xsd__anyType
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief base64 encoded DER representation of certificate.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     Certificate                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
class onv__CertificateStatus : public xsd__anyType
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief Indicates whether or not a certificate is used in a HTTPS configuration.
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
class onv__CertificateWithPrivateKey : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     Certificate                    1;	///< Required element.
/// Element PrivateKey of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     PrivateKey                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
class onv__CertificateInformation : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element IssuerDN of type xs:string.
    std::string*                         IssuerDN                       0;	///< Optional element.
/// Element SubjectDN of type xs:string.
    std::string*                         SubjectDN                      0;	///< Optional element.
/// Element KeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    onv__CertificateUsage*               KeyUsage                       0;	///< Optional element.
/// Element ExtendedKeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    onv__CertificateUsage*               ExtendedKeyUsage               0;	///< Optional element.
/// Element KeyLength of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element Version of type xs:string.
    std::string*                         Version                        0;	///< Optional element.
/// Element SerialNum of type xs:string.
    std::string*                         SerialNum                      0;	///< Optional element.
/// Element SignatureAlgorithm of type xs:string.
    std::string*                         SignatureAlgorithm             0;	///< Optional element.
/// Element Validity of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    onv__DateTimeRange*                  Validity                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    onv__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
class onv__CertificateInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
class onv__Dot1XConfiguration : public xsd__anyType
{ public:
/// Element Dot1XConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  Dot1XConfigurationToken        1;	///< Required element.
/// Element Identity of type xs:string.
    std::string                          Identity                       1;	///< Required element.
/// Element AnonymousID of type xs:string.
    std::string*                         AnonymousID                    0;	///< Optional element.
/// @brief EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Element EAPMethod of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > CACertificateID                0;
/// Element EAPMethodConfiguration of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    onv__EAPMethodConfiguration*         EAPMethodConfiguration         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    onv__Dot1XConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
class onv__Dot1XConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
class onv__EAPMethodConfiguration : public xsd__anyType
{ public:
/// @brief Confgiuration information for TLS Method.
/// Element TLSConfiguration of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    onv__TLSConfiguration*               TLSConfiguration               0;	///< Optional element.
/// @brief Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    onv__EapMethodExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
class onv__EapMethodExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
class onv__TLSConfiguration : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
class onv__GenericEapPwdConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
class onv__RelayOutputSettings : public xsd__anyType
{ public:
/// @brief 'Bistable' or 'Monostable' <ul> <li>Bistable After setting the state, the relay remains in this state.</li> <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum onv__RelayMode                  Mode                           1;	///< Required element.
/// @brief Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// Element DelayTime of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// @brief 'open' or 'closed' <ul> <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li> <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li> </ul>
/// Element IdleState of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum onv__RelayIdleState             IdleState                      1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
class onv__PTZNodeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
class onv__PTZConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
class onv__PTZConfigurationOptions : public xsd__anyType
{ public:
/// @brief A list of supported coordinate systems including their range limitations.
/// Element Spaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    onv__PTZSpaces*                      Spaces                         1;	///< Required element.
/// @brief A timeout Range within which Timeouts are accepted by the PTZ Node.
/// Element PTZTimeout of type "http://www.onvif.org/ver10/schema":DurationRange.
    onv__DurationRange*                  PTZTimeout                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
class onv__PanTiltLimits : public xsd__anyType
{ public:
/// @brief A range of pan tilt limits.
/// Element Range of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    onv__Space2DDescription*             Range                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
class onv__ZoomLimits : public xsd__anyType
{ public:
/// @brief A range of zoom limit
/// Element Range of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    onv__Space1DDescription*             Range                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
class onv__PTZSpaces : public xsd__anyType
{ public:
/// @brief The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// Vector of onv__Space2DDescription* with length 0..unbounded
    std::vector<onv__Space2DDescription*> AbsolutePanTiltPositionSpace   0;
/// @brief The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> AbsoluteZoomPositionSpace      0;
/// @brief The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// Vector of onv__Space2DDescription* with length 0..unbounded
    std::vector<onv__Space2DDescription*> RelativePanTiltTranslationSpace 0;
/// @brief The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> RelativeZoomTranslationSpace   0;
/// @brief The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// Vector of onv__Space2DDescription* with length 0..unbounded
    std::vector<onv__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;
/// @brief The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> ContinuousZoomVelocitySpace    0;
/// @brief The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> PanTiltSpeedSpace              0;
/// @brief The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> ZoomSpeedSpace                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    onv__PTZSpacesExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
class onv__PTZSpacesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
class onv__Space2DDescription : public xsd__anyType
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     XRange                         1;	///< Required element.
/// @brief A range of y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YRange                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
class onv__Space1DDescription : public xsd__anyType
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     XRange                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
class onv__Vector2D : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute y of type xs:float.
   @float                                y                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li></ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
class onv__Vector1D : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul style=""> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li></ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
class onv__PTZVector : public xsd__anyType
{ public:
/// @brief Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    onv__Vector2D*                       PanTilt                        0;	///< Optional element.
/// @brief A zoom position.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    onv__Vector1D*                       Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
class onv__PTZSpeed : public xsd__anyType
{ public:
/// @brief Pan and tilt speed. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    onv__Vector2D*                       PanTilt                        0;	///< Optional element.
/// @brief A zoom speed.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    onv__Vector1D*                       Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
class onv__PTZStatus : public xsd__anyType
{ public:
/// @brief Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      Position                       0;	///< Optional element.
/// @brief Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    onv__PTZMoveStatus*                  MoveStatus                     0;	///< Optional element.
/// @brief States a current PTZ error.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// @brief Specifies the UTC time when this status was generated.
/// Element UtcTime of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
class onv__PTZPreset : public xsd__anyType
{ public:
/// @brief A list of preset position name.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name*                           Name                           0;	///< Optional element.
/// @brief A list of preset position.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      PTZPosition                    0;	///< Optional element.
/// @brief
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken*                 token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
class onv__PTZMoveStatus : public xsd__anyType
{ public:
/// @brief
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus*                PanTilt                        0;	///< Optional element.
/// @brief
/// Element Zoom of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus*                Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
class onv__ImagingStatus : public xsd__anyType
{ public:
/// Element FocusStatus of type "http://www.onvif.org/ver10/schema":FocusStatus.
    onv__FocusStatus*                    FocusStatus                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
class onv__FocusStatus : public xsd__anyType
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus                 MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    std::string                          Error                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
class onv__FocusConfiguration : public xsd__anyType
{ public:
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum onv__AutoFocusMode              AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// @brief Parameter to set autofocus far limit (unit: meter). If set to 0.0, infinity will be used.
/// Element FarLimit of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
class onv__ImagingSettings : public xsd__anyType
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    onv__BacklightCompensation*          BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure.
    onv__Exposure*                       Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    onv__FocusConfiguration*             Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum onv__IrCutFilterMode*           IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    onv__WideDynamicRange*               WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    onv__WhiteBalance*                   WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    onv__ImagingSettingsExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
class onv__ImagingSettingsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Exposure is a complexType.
class onv__Exposure : public xsd__anyType
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the NVT.</li> <li>Manual Disabled exposure algorithm on the NVT.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum onv__ExposureMode               Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum onv__ExposurePriority           Priority                       1;	///< Required element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      Window                         1;	///< Required element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float                                Gain                           1;	///< Required element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
class onv__WideDynamicRange : public xsd__anyType
{ public:
/// @brief White dynamic range (on/off)
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum onv__WideDynamicMode            Mode                           1;	///< Required element.
/// @brief Optional level parameter (unitless)
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
class onv__BacklightCompensation : public xsd__anyType
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum onv__BacklightCompensationMode  Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
class onv__ImagingOptions : public xsd__anyType
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    onv__BacklightCompensationOptions*   BacklightCompensation          1;	///< Required element.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Brightness                     1;	///< Required element.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ColorSaturation                1;	///< Required element.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Contrast                       1;	///< Required element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    onv__ExposureOptions*                Exposure                       1;	///< Required element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions.
    onv__FocusOptions*                   Focus                          1;	///< Required element.
/// Vector of enum onv__IrCutFilterMode with length 1..unbounded
    std::vector<enum onv__IrCutFilterMode> IrCutFilterModes               1;
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Sharpness                      1;	///< Required element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    onv__WideDynamicRangeOptions*        WideDynamicRange               1;	///< Required element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    onv__WhiteBalanceOptions*            WhiteBalance                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
class onv__WideDynamicRangeOptions : public xsd__anyType
{ public:
/// Vector of enum onv__WideDynamicMode with length 1..unbounded
    std::vector<enum onv__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
class onv__BacklightCompensationOptions : public xsd__anyType
{ public:
/// Vector of enum onv__WideDynamicMode with length 1..unbounded
    std::vector<enum onv__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
class onv__FocusOptions : public xsd__anyType
{ public:
/// Vector of enum onv__AutoFocusMode with length 0..unbounded
    std::vector<enum onv__AutoFocusMode> AutoFocusModes                 0;
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     DefaultSpeed                   1;	///< Required element.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     NearLimit                      1;	///< Required element.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     FarLimit                       1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
class onv__ExposureOptions : public xsd__anyType
{ public:
/// Vector of enum onv__ExposureMode with length 1..unbounded
    std::vector<enum onv__ExposureMode > Mode                           1;
/// Vector of enum onv__ExposurePriority with length 1..unbounded
    std::vector<enum onv__ExposurePriority> Priority                       1;
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinExposureTime                1;	///< Required element.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxExposureTime                1;	///< Required element.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinGain                        1;	///< Required element.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxGain                        1;	///< Required element.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinIris                        1;	///< Required element.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxIris                        1;	///< Required element.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ExposureTime                   1;	///< Required element.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Gain                           1;	///< Required element.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Iris                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
class onv__WhiteBalanceOptions : public xsd__anyType
{ public:
/// Vector of enum onv__WhiteBalanceMode with length 1..unbounded
    std::vector<enum onv__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YrGain                         1;	///< Required element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YbGain                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
class onv__FocusMove : public xsd__anyType
{ public:
/// @brief Parameters for the absolute focus control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    onv__AbsoluteFocus*                  Absolute                       0;	///< Optional element.
/// @brief Parameters for the relative focus control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    onv__RelativeFocus*                  Relative                       0;	///< Optional element.
/// @brief Parameter for the continuous focus control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    onv__ContinuousFocus*                Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
class onv__AbsoluteFocus : public xsd__anyType
{ public:
/// @brief Position parameter for the absolute focus control.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Speed parameter for the absolute focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
class onv__RelativeFocus : public xsd__anyType
{ public:
/// @brief Distance parameter for the relative focus control.
/// Element Distance of type xs:float.
    float                                Distance                       1;	///< Required element.
/// @brief Speed parameter for the relative focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
class onv__ContinuousFocus : public xsd__anyType
{ public:
/// @brief Speed parameter for the Continuous focus control.
/// Element Speed of type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
class onv__MoveOptions : public xsd__anyType
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    onv__AbsoluteFocusOptions*           Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    onv__RelativeFocusOptions*           Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    onv__ContinuousFocusOptions*         Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
class onv__AbsoluteFocusOptions : public xsd__anyType
{ public:
/// @brief Valid ranges of the position.
/// Element Position of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Position                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
class onv__RelativeFocusOptions : public xsd__anyType
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
class onv__ContinuousFocusOptions : public xsd__anyType
{ public:
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
class onv__WhiteBalance : public xsd__anyType
{ public:
/// @brief Auto whitebalancing mode (auto/manual).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum onv__WhiteBalanceMode           Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
class onv__ImagingStatus20 : public xsd__anyType
{ public:
/// @brief Status of focus.
/// Element FocusStatus20 of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    onv__FocusStatus20*                  FocusStatus20                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    onv__ImagingStatus20Extension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
class onv__ImagingStatus20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
class onv__FocusStatus20 : public xsd__anyType
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus                 MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    onv__FocusStatus20Extension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
class onv__FocusStatus20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
/// @brief Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
class onv__ImagingSettings20 : public xsd__anyType
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    onv__BacklightCompensation20*        BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure20.
    onv__Exposure20*                     Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    onv__FocusConfiguration20*           Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum onv__IrCutFilterMode*           IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    onv__WideDynamicRange20*             WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    onv__WhiteBalance20*                 WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    onv__ImagingSettingsExtension20*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
class onv__ImagingSettingsExtension20 : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
/// @brief Type describing whether WDR mode is enabled or disabled (on/off).
class onv__WideDynamicRange20 : public xsd__anyType
{ public:
/// @brief Wide dynamic range mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum onv__WideDynamicMode            Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
/// @brief Type describing whether BLC mode is enabled or disabled (on/off).
class onv__BacklightCompensation20 : public xsd__anyType
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum onv__BacklightCompensationMode  Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
/// @brief Type describing the exposure settings.
class onv__Exposure20 : public xsd__anyType
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum onv__ExposureMode               Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum onv__ExposurePriority*          Priority                       0;	///< Optional element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      Window                         0;	///< Optional element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
class onv__ImagingOptions20 : public xsd__anyType
{ public:
/// @brief Valid range of Backlight Compensation.
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    onv__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// @brief Valid range of Brightness.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Brightness                     0;	///< Optional element.
/// @brief Valid range of Color Saturation.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ColorSaturation                0;	///< Optional element.
/// @brief Valid range of Contrast.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Contrast                       0;	///< Optional element.
/// @brief Valid range of Exposure.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    onv__ExposureOptions20*              Exposure                       0;	///< Optional element.
/// @brief Valid range of Focus.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    onv__FocusOptions20*                 Focus                          0;	///< Optional element.
/// @brief Valid range of IrCutFilterModes.
/// Vector of enum onv__IrCutFilterMode with length 0..unbounded
    std::vector<enum onv__IrCutFilterMode> IrCutFilterModes               0;
/// @brief Valid range of Sharpness.
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Sharpness                      0;	///< Optional element.
/// @brief Valid range of WideDynamicRange.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    onv__WideDynamicRangeOptions20*      WideDynamicRange               0;	///< Optional element.
/// @brief Valid range of WhiteBalance.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    onv__WhiteBalanceOptions20*          WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    onv__ImagingOptions20Extension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
class onv__ImagingOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
class onv__WideDynamicRangeOptions20 : public xsd__anyType
{ public:
/// Vector of enum onv__WideDynamicMode with length 1..unbounded
    std::vector<enum onv__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
class onv__BacklightCompensationOptions20 : public xsd__anyType
{ public:
/// @brief 'ON' or 'OFF'
/// Vector of enum onv__BacklightCompensationMode with length 1..unbounded
    std::vector<enum onv__BacklightCompensationMode> Mode                           1;
/// @brief Level range of BacklightCompensation.
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
class onv__ExposureOptions20 : public xsd__anyType
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Vector of enum onv__ExposureMode with length 1..unbounded
    std::vector<enum onv__ExposureMode > Mode                           1;
/// @brief The exposure priority mode (low noise/framerate).
/// Vector of enum onv__ExposurePriority with length 0..unbounded
    std::vector<enum onv__ExposurePriority> Priority                       0;
/// @brief Valid range of the Minimum ExposureTime.
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinExposureTime                0;	///< Optional element.
/// @brief Valid range of the Maximum ExposureTime.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxExposureTime                0;	///< Optional element.
/// @brief Valid range of the Minimum Gain.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinGain                        0;	///< Optional element.
/// @brief Valid range of the Maximum Gain.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxGain                        0;	///< Optional element.
/// @brief Valid range of the Minimum Iris.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinIris                        0;	///< Optional element.
/// @brief Valid range of the Maximum Iris.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxIris                        0;	///< Optional element.
/// @brief Valid range of the ExposureTime.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ExposureTime                   0;	///< Optional element.
/// @brief Valid range of the Gain.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Gain                           0;	///< Optional element.
/// @brief Valid range of the Iris.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Iris                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
class onv__MoveOptions20 : public xsd__anyType
{ public:
/// @brief Valid ranges for the absolute control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    onv__AbsoluteFocusOptions*           Absolute                       0;	///< Optional element.
/// @brief Valid ranges for the relative control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    onv__RelativeFocusOptions20*         Relative                       0;	///< Optional element.
/// @brief Valid ranges for the continuous control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    onv__ContinuousFocusOptions*         Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
class onv__RelativeFocusOptions20 : public xsd__anyType
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
class onv__WhiteBalance20 : public xsd__anyType
{ public:
/// @brief 'AUTO' or 'MANUAL'
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum onv__WhiteBalanceMode           Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    onv__WhiteBalance20Extension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
class onv__WhiteBalance20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
class onv__FocusConfiguration20 : public xsd__anyType
{ public:
/// @brief Mode of auto fucus. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum onv__AutoFocusMode              AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// @brief Parameter to set autofocus far limit (unit: meter).
/// Element FarLimit of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    onv__FocusConfiguration20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
class onv__FocusConfiguration20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
class onv__WhiteBalanceOptions20 : public xsd__anyType
{ public:
/// @brief Mode of WhiteBalance. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Vector of enum onv__WhiteBalanceMode with length 1..unbounded
    std::vector<enum onv__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YrGain                         0;	///< Optional element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    onv__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
class onv__WhiteBalanceOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
class onv__FocusOptions20 : public xsd__anyType
{ public:
/// @brief Mode of Auto Focus. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Vector of enum onv__AutoFocusMode with length 0..unbounded
    std::vector<enum onv__AutoFocusMode> AutoFocusModes                 0;
/// @brief Valid range of DefaultSpeed.
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     DefaultSpeed                   0;	///< Optional element.
/// @brief Valid range of NearLimit.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     NearLimit                      0;	///< Optional element.
/// @brief Valid range of FarLimit.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    onv__FocusOptions20Extension*        Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
class onv__FocusOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
class onv__MessageExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ItemList is a complexType.
/// @brief List of parameters according to the corresponding ItemListDescription. Each item in the list shall have a unique name.
class onv__ItemList : public xsd__anyType
{ public:
/// @brief Value name pair as defined by the corresponding description.
/// Size of SimpleItem array is 0..unbounded
   $int                                  __sizeSimpleItem               0;
    class _onv__ItemList_SimpleItem
    {
/// @brief Item name.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief Item value. The type is defined in the corresponding description.
/// Attribute Value of type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;
/// @brief Complex value structure.
/// Size of ElementItem array is 0..unbounded
   $int                                  __sizeElementItem              0;
    class _onv__ItemList_ElementItem
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @brief Item name.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    onv__ItemListExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
class onv__ItemListExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
class onv__MessageDescription : public xsd__anyType
{ public:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    onv__MessageDescriptionExtension*    Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
class onv__MessageDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
/// @brief Describes a list of items. Each item in the list shall have a unique name. The list is designed as linear structure without optional or unbounded elements. Use ElementItems only when complex structures are inevitable.
class onv__ItemListDescription : public xsd__anyType
{ public:
/// @brief Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// Size of SimpleItemDescription array is 0..unbounded
   $int                                  __sizeSimpleItemDescription    0;
    class _onv__ItemListDescription_SimpleItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;
/// @brief Description of a complex type. The Type must reference a defined type.
/// Size of ElementItemDescription array is 0..unbounded
   $int                                  __sizeElementItemDescription   0;
    class _onv__ItemListDescription_ElementItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief The type of the item. The Type must reference a defined type.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    onv__ItemListDescriptionExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
class onv__ItemListDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Vector is a complexType.
class onv__Vector : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
class onv__Rectangle : public xsd__anyType
{ public:
/// Attribute bottom of type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute top of type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute right of type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute left of type xs:float.
   @float*                               left                           0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Polygon is a complexType.
class onv__Polygon : public xsd__anyType
{ public:
/// Vector of onv__Vector* with length 3..unbounded
    std::vector<onv__Vector*           > Point                          3;
};

/// "http://www.onvif.org/ver10/schema":Polyline is a complexType.
class onv__Polyline : public xsd__anyType
{ public:
/// Vector of onv__Vector* with length 2..unbounded
    std::vector<onv__Vector*           > Point                          2;
};

/// "http://www.onvif.org/ver10/schema":Color is a complexType.
class onv__Color : public xsd__anyType
{ public:
/// Attribute X of type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute Y of type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute Z of type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
class onv__ColorCovariance : public xsd__anyType
{ public:
/// Attribute XX of type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute YY of type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute ZZ of type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute XY of type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute XZ of type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute YZ of type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Appearance is a complexType.
class onv__Appearance : public xsd__anyType
{ public:
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onv__Transformation*                 Transformation                 0;	///< Optional element.
/// Element Shape of type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    onv__ShapeDescriptor*                Shape                          0;	///< Optional element.
/// Element Color of type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    onv__ColorDescriptor*                Color                          0;	///< Optional element.
/// Element Class of type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    onv__ClassDescriptor*                Class                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    onv__AppearanceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
class onv__AppearanceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
class onv__ShapeDescriptor : public xsd__anyType
{ public:
/// Element BoundingBox of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      BoundingBox                    1;	///< Required element.
/// Element CenterOfGravity of type "http://www.onvif.org/ver10/schema":Vector.
    onv__Vector*                         CenterOfGravity                1;	///< Required element.
/// Vector of onv__Polygon* with length 0..unbounded
    std::vector<onv__Polygon*          > Polygon                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    onv__ShapeDescriptorExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
class onv__ShapeDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
class onv__ColorDescriptor : public xsd__anyType
{ public:
/// Size of ColorCluster array is 0..unbounded
   $int                                  __sizeColorCluster             0;
    class _onv__ColorDescriptor_ColorCluster
    {
/// Element Color of type "http://www.onvif.org/ver10/schema":Color.
    onv__Color*                          Color                          1;	///< Required element.
/// Element Weight of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element Covariance of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    onv__ColorCovariance*                Covariance                     0;	///< Optional element.
    }                                   *ColorCluster                   0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    onv__ColorDescriptorExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
class onv__ColorDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
class onv__ClassDescriptor : public xsd__anyType
{ public:
/// Size of ClassCandidate array is 0..unbounded
   $int                                  __sizeClassCandidate           0;
    class _onv__ClassDescriptor_ClassCandidate
    {
/// Element Type of type "http://www.onvif.org/ver10/schema":ClassType.
    enum onv__ClassType                  Type                           1;	///< Required element.
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }                                   *ClassCandidate                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    onv__ClassDescriptorExtension*       Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
class onv__ClassDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
class onv__ObjectExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Transformation is a complexType.
class onv__Transformation : public xsd__anyType
{ public:
/// Element Translate of type "http://www.onvif.org/ver10/schema":Vector.
    onv__Vector*                         Translate                      0;	///< Optional element.
/// Element Scale of type "http://www.onvif.org/ver10/schema":Vector.
    onv__Vector*                         Scale                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    onv__TransformationExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
class onv__TransformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Frame is a complexType.
class onv__Frame : public xsd__anyType
{ public:
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onv__PTZStatus*                      PTZStatus                      0;	///< Optional element.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onv__Transformation*                 Transformation                 0;	///< Optional element.
/// Vector of onv__Object* with length 0..unbounded
    std::vector<onv__Object*           > Object                         0;
/// Element ObjectTree of type "http://www.onvif.org/ver10/schema":ObjectTree.
    onv__ObjectTree*                     ObjectTree                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FrameExtension.
    onv__FrameExtension*                 Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
class onv__FrameExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Merge is a complexType.
class onv__Merge : public xsd__anyType
{ public:
/// Vector of onv__ObjectId* with length 2..unbounded
    std::vector<onv__ObjectId*         > from                           2;
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       to                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Split is a complexType.
class onv__Split : public xsd__anyType
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       from                           1;	///< Required element.
/// Vector of onv__ObjectId* with length 2..unbounded
    std::vector<onv__ObjectId*         > to                             2;
};

/// "http://www.onvif.org/ver10/schema":Rename is a complexType.
class onv__Rename : public xsd__anyType
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       from                           1;	///< Required element.
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       to                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
class onv__ObjectId : public xsd__anyType
{ public:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
class onv__Behaviour : public xsd__anyType
{ public:
    class _onv__Behaviour_Removed
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Removed                        0;	///< Optional element.
    class _onv__Behaviour_Idle
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Idle                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    onv__BehaviourExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
class onv__BehaviourExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
class onv__ObjectTree : public xsd__anyType
{ public:
/// Vector of onv__Rename* with length 0..unbounded
    std::vector<onv__Rename*           > Rename                         0;
/// Vector of onv__Split* with length 0..unbounded
    std::vector<onv__Split*            > Split                          0;
/// Vector of onv__Merge* with length 0..unbounded
    std::vector<onv__Merge*            > Merge                          0;
/// Vector of onv__ObjectId* with length 0..unbounded
    std::vector<onv__ObjectId*         > Delete                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    onv__ObjectTreeExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
class onv__ObjectTreeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
class onv__AnalyticsEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > AnalyticsModule                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    onv__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
class onv__AnalyticsEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
class onv__RuleEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > Rule                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    onv__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
class onv__RuleEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Config is a complexType.
class onv__Config : public xsd__anyType
{ public:
/// @brief List of configuration parameters as defined in the correspding description.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Parameters                     1;	///< Required element.
/// @brief Name of the configuration.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
class onv__ConfigDescription : public xsd__anyType
{ public:
/// @brief List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems should be used to transport the information to ease parsing of dynamically defined messages by a client application.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Parameters                     1;	///< Required element.
/// @brief The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable. The name of all Items must be unique within all Items contained in any group of this Message. Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// Size of Messages array is 0..unbounded
   $int                                  __sizeMessages                 0;
    class _onv__ConfigDescription_Messages
    {
/// INHERITED FROM onv__MessageDescription:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    onv__MessageDescriptionExtension*    Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM onv__MessageDescription
/// @brief The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine"). Even without knowing the complete topic name, the subscriber will be able to distiguish the messages produced by different rule instances of the same type via the Source fields of the message. There the name of the rule instance, which produced the message, must be listed.
/// Element ParentTopic of type xs:string.
    std::string                          ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    onv__ConfigDescriptionExtension*     Extension                      0;	///< Optional element.
/// @brief XML Type of the Configuration (e.g. "tt::LineDetector").
/// Attribute Name of type xs:QName.
   @xsd__QName                           Name                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
class onv__ConfigDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
class onv__SupportedRules : public xsd__anyType
{ public:
/// @brief Lists the location of all schemas that are referenced in the rules.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > RuleContentSchemaLocation      0;
/// @brief List of rules supported by the Video Analytics configuration..
/// Vector of onv__ConfigDescription* with length 0..unbounded
    std::vector<onv__ConfigDescription*> RuleDescription                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    onv__SupportedRulesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
class onv__SupportedRulesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
class onv__SupportedAnalyticsModules : public xsd__anyType
{ public:
/// @brief It optionally contains a list of URLs that provide the location of schema files. These schema files describe the types and elements used in the analytics module descriptions. If the analytics module descriptions reference types or elements of the ONVIF schema file, the ONVIF schema file MUST be explicitly listed.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > AnalyticsModuleContentSchemaLocation 0;
/// Vector of onv__ConfigDescription* with length 0..unbounded
    std::vector<onv__ConfigDescription*> AnalyticsModuleDescription     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    onv__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
class onv__SupportedAnalyticsModulesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
class onv__MetadataStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    class __onv__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _onv__union_MetadataStream selector: set to SOAP_UNION__onv__union_MetadataStream_<fieldname> or 0
    union _onv__union_MetadataStream
    {
/// Element VideoAnalytics of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    onv__VideoAnalyticsStream*           VideoAnalytics                 1;	///< Required element.
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZStream.
    onv__PTZStream*                      PTZ                            1;	///< Required element.
/// Element Event of type "http://www.onvif.org/ver10/schema":EventStream.
    onv__EventStream*                    Event                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    onv__MetadataStreamExtension*        Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
class onv__MetadataStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
class onv__VideoAnalyticsStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    class __onv__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _onv__union_VideoAnalyticsStream selector: set to SOAP_UNION__onv__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in type onv__VideoAnalyticsStream
    union _onv__union_VideoAnalyticsStream
    {
/// Element Frame of type "http://www.onvif.org/ver10/schema":Frame.
    onv__Frame*                          Frame                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    onv__VideoAnalyticsStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
class onv__VideoAnalyticsStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
class onv__PTZStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    class __onv__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _onv__union_PTZStream selector: set to SOAP_UNION__onv__union_PTZStream_<fieldname> or 0
/// Union for choice in type onv__PTZStream
    union _onv__union_PTZStream
    {
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onv__PTZStatus*                      PTZStatus                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    onv__PTZStreamExtension*             Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
class onv__PTZStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EventStream is a complexType.
class onv__EventStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    class __onv__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _onv__union_EventStream selector: set to SOAP_UNION__onv__union_EventStream_<fieldname> or 0
/// Union for choice in type onv__EventStream
    union _onv__union_EventStream
    {
/// Element reference "http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    wsnb__NotificationMessageHolderType*  wsnb__NotificationMessage      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    onv__EventStreamExtension*           Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
class onv__EventStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
/// @brief Configuration of the streaming and coding settings of a Video window.
class onv__PaneConfiguration : public xsd__anyType
{ public:
/// @brief Optional name of the pane configuration.
/// Element PaneName of type xs:string.
    std::string*                         PaneName                       0;	///< Optional element.
/// @brief If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 AudioOutputToken               0;	///< Optional element.
/// @brief If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane. The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the DeviceIO service.
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 AudioSourceToken               0;	///< Optional element.
/// @brief The configuration of the audio encoder including codec, bitrate and sample rate.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onv__AudioEncoderConfiguration*      AudioEncoderConfiguration      0;	///< Optional element.
/// @brief A pointer to a Receiver that has the necessary information to receive data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the GetReceivers command of the Receiver Service.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ReceiverToken                  0;	///< Optional element.
/// @brief A unique identifier in the display device.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
/// @brief A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
class onv__PaneLayout : public xsd__anyType
{ public:
/// @brief Reference to the configuration of the streaming and coding parameters.
/// Element Pane of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  Pane                           1;	///< Required element.
/// @brief Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// Element Area of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      Area                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Layout is a complexType.
/// @brief A layout describes a set of Video windows that are displayed simultaniously on a display.
class onv__Layout : public xsd__anyType
{ public:
/// @brief List of panes assembling the display layout.
/// Vector of onv__PaneLayout* with length 1..unbounded
    std::vector<onv__PaneLayout*       > PaneLayout                     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutExtension.
    onv__LayoutExtension*                Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
class onv__LayoutExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
/// @brief This type contains the Audio and Video coding capabilities of a display service.
class onv__CodingCapabilities : public xsd__anyType
{ public:
/// @brief If the device supports audio encoding this section describes the supported codecs and their configuration.
/// Element AudioEncodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    onv__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// @brief If the device supports audio decoding this section describes the supported codecs and their settings.
/// Element AudioDecodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    onv__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// @brief This section describes the supported video codesc and their configuration.
/// Element VideoDecodingCapabilities of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    onv__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
/// @brief The options supported for a display layout.
class onv__LayoutOptions : public xsd__anyType
{ public:
/// @brief Lists the possible Pane Layouts of the Video Output
/// Vector of onv__PaneLayoutOptions* with length 1..unbounded
    std::vector<onv__PaneLayoutOptions*> PaneLayoutOptions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    onv__LayoutOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
class onv__LayoutOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
/// @brief Description of a pane layout describing a complete display layout.
class onv__PaneLayoutOptions : public xsd__anyType
{ public:
/// @brief List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// Vector of onv__Rectangle* with length 1..unbounded
    std::vector<onv__Rectangle*        > Area                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    onv__PaneOptionExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
class onv__PaneOptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Receiver is a complexType.
/// @brief Description of a receiver, including its token and configuration.
class onv__Receiver : public xsd__anyType
{ public:
/// @brief Unique identifier of the receiver.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  Token                          1;	///< Required element.
/// @brief Describes the configuration of the receiver.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    onv__ReceiverConfiguration*          Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
/// @brief Describes the configuration of a receiver.
class onv__ReceiverConfiguration : public xsd__anyType
{ public:
/// @brief The following connection modes are defined:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum onv__ReceiverMode               Mode                           1;	///< Required element.
/// @brief Details of the URI to which the receiver should connect.
/// Element MediaUri of type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// @brief Stream connection parameters.
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    onv__StreamSetup*                    StreamSetup                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
/// @brief Contains information about a receiver's current state.
class onv__ReceiverStateInformation : public xsd__anyType
{ public:
/// @brief The connection state of the receiver may have one of the following states:
/// Element State of type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum onv__ReceiverState              State                          1;	///< Required element.
/// @brief Indicates whether or not the receiver was created automatically.
/// Element AutoCreated of type xs:boolean.
    bool                                 AutoCreated                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
class onv__SourceReference : public xsd__anyType
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute Type of type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default value="http://www.onvif.org/ver10/schema/Receiver".
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
class onv__DateTimeRange : public xsd__anyType
{ public:
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
class onv__RecordingSummary : public xsd__anyType
{ public:
/// @brief The earliest point in time where there is recorded data on the device.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The most recent point in time where there is recorded data on the device.
/// Element DataUntil of type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// @brief The device contains at least this many recordings.
/// Element NumberRecordings of type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
/// @brief A structure for defining a limited scope when searching in recorded data.
class onv__SearchScope : public xsd__anyType
{ public:
/// @brief A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// Vector of onv__SourceReference* with length 0..unbounded
    std::vector<onv__SourceReference*  > IncludedSources                0;
/// @brief A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// Vector of onv__RecordingReference with length 0..unbounded
    std::vector<onv__RecordingReference> IncludedRecordings             0;
/// @brief An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// Element RecordingInformationFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    onv__XPathExpression*                RecordingInformationFilter     0;	///< Optional element.
/// @brief Extension point
/// Element Extension of type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    onv__SearchScopeExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
class onv__SearchScopeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
class onv__PTZPositionFilter : public xsd__anyType
{ public:
/// @brief The lower boundary of the PTZ volume to look for.
/// Element MinPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      MinPosition                    1;	///< Required element.
/// @brief The upper boundary of the PTZ volume to look for.
/// Element MaxPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      MaxPosition                    1;	///< Required element.
/// @brief If true, search for when entering the specified PTZ volume.
/// Element EnterOrExit of type xs:boolean.
    bool                                 EnterOrExit                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
class onv__MetadataFilter : public xsd__anyType
{ public:
/// Element MetadataStreamFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    onv__XPathExpression                 MetadataStreamFilter           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
class onv__FindRecordingResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onv__SearchState                SearchState                    1;	///< Required element.
/// @brief A RecordingInformation structure for each found recording matching the search.
/// Vector of onv__RecordingInformation* with length 0..unbounded
    std::vector<onv__RecordingInformation*> RecordingInformation           0;
};

/// "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
class onv__FindEventResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onv__SearchState                SearchState                    1;	///< Required element.
/// @brief A FindEventResult structure for each found event matching the search.
/// Vector of onv__FindEventResult* with length 0..unbounded
    std::vector<onv__FindEventResult*  > Result                         0;
};

/// "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
class onv__FindEventResult : public xsd__anyType
{ public:
/// @brief The recording where this event was found. Empty string if no recording is associated with this event.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief A reference to the track where this event was found. Empty string if no track is associated with this event.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  TrackToken                     1;	///< Required element.
/// @brief The time when the event occured.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The description of the event.
/// Element Event of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    wsnb__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// @brief If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// Element StartStateEvent of type xs:boolean.
    bool                                 StartStateEvent                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
class onv__FindPTZPositionResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onv__SearchState                SearchState                    1;	///< Required element.
/// @brief A FindPTZPositionResult structure for each found PTZ position matching the search.
/// Vector of onv__FindPTZPositionResult* with length 0..unbounded
    std::vector<onv__FindPTZPositionResult*> Result                         0;
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
class onv__FindPTZPositionResult : public xsd__anyType
{ public:
/// @brief A reference to the recording containing the PTZ position.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the PTZ position.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  TrackToken                     1;	///< Required element.
/// @brief The time when the PTZ position was valid.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The PTZ position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      Position                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
class onv__FindMetadataResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onv__SearchState                SearchState                    1;	///< Required element.
/// @brief A FindMetadataResult structure for each found set of Metadata matching the search.
/// Vector of onv__FindMetadataResult* with length 0..unbounded
    std::vector<onv__FindMetadataResult*> Result                         0;
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
class onv__FindMetadataResult : public xsd__anyType
{ public:
/// @brief A reference to the recording containing the metadata.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the matching metadata.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  TrackToken                     1;	///< Required element.
/// @brief The point in time when the matching metadata occurs in the metadata track.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
class onv__RecordingInformation : public xsd__anyType
{ public:
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single recording is intended to record related material, there is just one source. It is indicates the physical location or the major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    onv__RecordingSourceInformation*     Source                         1;	///< Required element.
/// Element EarliestRecording of type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element LatestRecording of type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    onv__Description                     Content                        1;	///< Required element.
/// Vector of onv__TrackInformation* with length 0..unbounded
    std::vector<onv__TrackInformation* > Track                          0;
/// Element RecordingStatus of type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum onv__RecordingStatus            RecordingStatus                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
/// @brief A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
class onv__RecordingSourceInformation : public xsd__anyType
{ public:
/// @brief Identifier for the source chosen by the client that creates the structure. This identifier is opaque to the device. Clients may use any type of URI for this field.
/// Element SourceId of type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// @brief Informative user readable name of the source, e.g. "Camera23".
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Informative description of the physical location of the source, e.g. the coordinates on a map.
/// Element Location of type "http://www.onvif.org/ver10/schema":Description.
    onv__Description                     Location                       1;	///< Required element.
/// @brief Informative description of the source.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    onv__Description                     Description                    1;	///< Required element.
/// @brief URI to the media service of the primary reording source
/// Element Address of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
class onv__TrackInformation : public xsd__anyType
{ public:
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  TrackToken                     1;	///< Required element.
/// @brief Type of the track: "Video", "Audio" or "Metadata". The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum onv__TrackType                  TrackType                      1;	///< Required element.
/// @brief Informative description of the contents of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    onv__Description                     Description                    1;	///< Required element.
/// @brief The date and time of the oldest data in the track.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The date and time of the newest data in the track.
/// Element DataTo of type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
/// @brief A set of media attributes valid for a recording at a point in time or for a time interval.
class onv__MediaAttributes : public xsd__anyType
{ public:
/// @brief A reference to the recording that has these attributes.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief A set of attributes for each track.
/// Vector of onv__TrackAttributes* with length 0..unbounded
    std::vector<onv__TrackAttributes*  > TrackAttributes                0;
/// @brief The attributes are valid from this point in time in the recording.
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// @brief The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
class onv__TrackAttributes : public xsd__anyType
{ public:
/// @brief The basic information about the track.
/// Element TrackInformation of type "http://www.onvif.org/ver10/schema":TrackInformation.
    onv__TrackInformation*               TrackInformation               1;	///< Required element.
/// @brief If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// Element VideoAttributes of type "http://www.onvif.org/ver10/schema":VideoAttributes.
    onv__VideoAttributes*                VideoAttributes                0;	///< Optional element.
/// @brief If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// Element AudioAttributes of type "http://www.onvif.org/ver10/schema":AudioAttributes.
    onv__AudioAttributes*                AudioAttributes                0;	///< Optional element.
/// @brief If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// Element MetadataAttributes of type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    onv__MetadataAttributes*             MetadataAttributes             0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    onv__TrackAttributesExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
class onv__TrackAttributesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
class onv__VideoAttributes : public xsd__anyType
{ public:
/// @brief Average bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief The width of the video in pixels.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief The height of the video in pixels.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum onv__VideoEncoding              Encoding                       1;	///< Required element.
/// @brief Average framerate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
class onv__AudioAttributes : public xsd__anyType
{ public:
/// @brief The bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onv__AudioEncoding              Encoding                       1;	///< Required element.
/// @brief The sample rate in kHz.
/// Element Samplerate of type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
class onv__MetadataAttributes : public xsd__anyType
{ public:
/// @brief Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// Element CanContainPTZ of type xs:boolean.
    bool                                 CanContainPTZ                  1;	///< Required element.
/// @brief Indicates that there can be analytics data in the metadata track in the specified time interval.
/// Element CanContainAnalytics of type xs:boolean.
    bool                                 CanContainAnalytics            1;	///< Required element.
/// @brief Indicates that there can be notifications in the metadata track in the specified time interval.
/// Element CanContainNotifications of type xs:boolean.
    bool                                 CanContainNotifications        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
class onv__RecordingConfiguration : public xsd__anyType
{ public:
/// @brief Information about the source of the recording.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    onv__RecordingSourceInformation*     Source                         1;	///< Required element.
/// @brief Informative description of the source.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    onv__Description                     Content                        1;	///< Required element.
/// @brief Sspecifies the maximum time that data in any track within the recording shall be stored. The device shall delete any data older than the maximum retention time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0, the device shall not limit the retention time of stored data, except by resource constraints. Whatever the value of MaximumRetentionTime, the device may automatically delete recordings to free up storage space for new recordings.
/// Element MaximumRetentionTime of type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
class onv__TrackConfiguration : public xsd__anyType
{ public:
/// @brief Type of the track. It shall be equal to the strings Video, Audio or Metadata. The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum onv__TrackType                  TrackType                      1;	///< Required element.
/// @brief Informative description of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    onv__Description                     Description                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
class onv__GetRecordingsResponseItem : public xsd__anyType
{ public:
/// @brief Token of the recording.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief Configuration of the recording.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    onv__RecordingConfiguration*         Configuration                  1;	///< Required element.
/// @brief List of tracks.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    onv__GetTracksResponseList*          Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
class onv__GetTracksResponseList : public xsd__anyType
{ public:
/// @brief Configuration of a track.
/// Vector of onv__GetTracksResponseItem* with length 0..unbounded
    std::vector<onv__GetTracksResponseItem*> Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
class onv__GetTracksResponseItem : public xsd__anyType
{ public:
/// @brief Token of the track.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  TrackToken                     1;	///< Required element.
/// @brief Configuration of the track.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    onv__TrackConfiguration*             Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
class onv__RecordingJobConfiguration : public xsd__anyType
{ public:
/// @brief Identifies the recording to which this job shall store the received data.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/> The only valid values for Mode shall be Idle and Active.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    onv__RecordingJobMode                Mode                           1;	///< Required element.
/// @brief This shall be a positive number. If there are multiple recording jobs that store data to the same track, the device will only store the data for the recording job with the highest priority. The priority is specified per recording job, but the device shall determine the priority of each track individually. If there are two recording jobs with the same priority, the device shall record the data corresponding to the recording job that was activated the latest.
/// Element Priority of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// @brief Source of the recording.
/// Vector of onv__RecordingJobSource* with length 0..unbounded
    std::vector<onv__RecordingJobSource*> Source                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    onv__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
class onv__RecordingJobConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
class onv__RecordingJobSource : public xsd__anyType
{ public:
/// @brief This field shall be a reference to the source of the data. The type of the source is determined by the attribute Type in the SourceToken structure. If Type is http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case the device shall receive the data over the network. If Type is http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the device to obtain data from a profile that exists on the local device.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    onv__SourceReference*                SourceToken                    0;	///< Optional element.
/// @brief If this field is TRUE, and if the SourceToken is omitted, the device shall create a receiver object (through the receiver service) and assign the ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration from the device, the AutoCreateReceiver field shall never be present.
/// Element AutoCreateReceiver of type xs:boolean.
    bool*                                AutoCreateReceiver             0;	///< Optional element.
/// @brief List of tracks associated with the recording.
/// Vector of onv__RecordingJobTrack* with length 0..unbounded
    std::vector<onv__RecordingJobTrack*> Tracks                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    onv__RecordingJobSourceExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
class onv__RecordingJobSourceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
class onv__RecordingJobTrack : public xsd__anyType
{ public:
/// @brief If the received RTSP stream contains multiple tracks of the same type, the SourceTag differentiates between those Tracks.
/// Element SourceTag of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// @brief The destination is the tracktoken of the track to which the device shall store the received data.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  Destination                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
class onv__RecordingJobStateInformation : public xsd__anyType
{ public:
/// @brief Identification of the recording that the recording job records to.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onv__RecordingReference              RecordingToken                 1;	///< Required element.
/// @brief Holds the aggregated state over the whole RecordingJobInformation structure.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    onv__RecordingJobState               State                          1;	///< Required element.
/// @brief Identifies the data source of the recording job.
/// Vector of onv__RecordingJobStateSource* with length 0..unbounded
    std::vector<onv__RecordingJobStateSource*> Sources                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    onv__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
class onv__RecordingJobStateInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
class onv__RecordingJobStateSource : public xsd__anyType
{ public:
/// @brief Identifies the data source of the recording job.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    onv__SourceReference*                SourceToken                    1;	///< Required element.
/// @brief Holds the aggregated state over all substructures of RecordingJobStateSource.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    onv__RecordingJobState               State                          1;	///< Required element.
/// @brief List of track items.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    onv__RecordingJobStateTracks*        Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
class onv__RecordingJobStateTracks : public xsd__anyType
{ public:
/// Vector of onv__RecordingJobStateTrack* with length 0..unbounded
    std::vector<onv__RecordingJobStateTrack*> Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
class onv__RecordingJobStateTrack : public xsd__anyType
{ public:
/// @brief Identifies the track of the data source that provides the data.
/// Element SourceTag of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// @brief Indicates the destination track.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    onv__TrackReference                  Destination                    1;	///< Required element.
/// @brief Optionally holds an implementation defined string value that describes the error. The string should be in the English language.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// @brief Provides the job state of the track. The valid values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    onv__RecordingJobState               State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
class onv__GetRecordingJobsResponseItem : public xsd__anyType
{ public:
/// Element JobToken of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    onv__RecordingJobReference           JobToken                       1;	///< Required element.
/// Element JobConfiguration of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    onv__RecordingJobConfiguration*      JobConfiguration               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
/// @brief Configuration parameters for the replay service.
class onv__ReplayConfiguration : public xsd__anyType
{ public:
/// @brief The RTSP session timeout.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
class onv__AnalyticsDeviceEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onv__EngineConfiguration* with length 1..unbounded
    std::vector<onv__EngineConfiguration*> EngineConfiguration            1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    onv__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
class onv__AnalyticsDeviceEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
class onv__EngineConfiguration : public xsd__anyType
{ public:
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onv__VideoAnalyticsConfiguration*    VideoAnalyticsConfiguration    1;	///< Required element.
/// Element AnalyticsEngineInputInfo of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    onv__AnalyticsEngineInputInfo*       AnalyticsEngineInputInfo       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
class onv__AnalyticsEngineInputInfo : public xsd__anyType
{ public:
/// Element InputInfo of type "http://www.onvif.org/ver10/schema":Config.
    onv__Config*                         InputInfo                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    onv__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
class onv__AnalyticsEngineInputInfoExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
class onv__SourceIdentification : public xsd__anyType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > Token                          1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    onv__SourceIdentificationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
class onv__SourceIdentificationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
class onv__MetadataInput : public xsd__anyType
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > MetadataConfig                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    onv__MetadataInputExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
class onv__MetadataInputExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
class onv__AnalyticsStateInformation : public xsd__anyType
{ public:
/// @brief Token of the control object whose status is requested.
/// Element AnalyticsEngineControlToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  AnalyticsEngineControlToken    1;	///< Required element.
/// Element State of type "http://www.onvif.org/ver10/schema":AnalyticsState.
    onv__AnalyticsState*                 State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
class onv__AnalyticsState : public xsd__anyType
{ public:
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element State of type xs:string.
    std::string                          State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver10/schema":Message

/// "http://www.onvif.org/ver10/schema":Message is a complexType.
class _onv__Message
{ public:
/// @brief Token value pairs that triggered this message. Typically only one item is present.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageExtension.
    onv__MessageExtension*               Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute PropertyOperation of type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum onv__PropertyOperation*         PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
class wsnb__QueryExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
class wsnb__TopicExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
class wsnb__FilterType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
class wsnb__SubscriptionPolicyType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
class wsnb__NotificationMessageHolderType : public xsd__anyType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    wsnb__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
    class _wsnb__NotificationMessageHolderType_Message
    {
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    Message                        1;	///< Required element.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP

/// "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
class _wsnb__NotificationProducerRP
{ public:
/// Vector of wsnb__TopicExpressionType* element refs with length 0..unbounded
    std::vector<wsnb__TopicExpressionType*> TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                FixedTopicSet                  0;	///< Optional element.
/// Vector of xsd__anyURI element refs with length 0..unbounded
    std::vector<xsd__anyURI            > TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
class _wsnb__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    wsnb__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    wsnb__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
class _wsnb__Notify
{ public:
/// Vector of wsnb__NotificationMessageHolderType* element refs with length 1..unbounded
    std::vector<wsnb__NotificationMessageHolderType*> NotificationMessage            1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
class _wsnb__UseRaw
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
class _wsnb__Subscribe
{ public:
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnb__FilterType*                    Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnb__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Nullable pointer.
    class _wsnb__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
class _wsnb__SubscribeResponse
{ public:
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
class _wsnb__GetCurrentMessage
{ public:
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    wsnb__TopicExpressionType*           Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
class _wsnb__GetCurrentMessageResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
class _wsnb__GetMessages
{ public:
/// Element MaximumNumber of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
class _wsnb__GetMessagesResponse
{ public:
/// Vector of wsnb__NotificationMessageHolderType* element refs with length 0..unbounded
    std::vector<wsnb__NotificationMessageHolderType*> NotificationMessage            0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
class _wsnb__DestroyPullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
class _wsnb__DestroyPullPointResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
class _wsnb__CreatePullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
class _wsnb__CreatePullPointResponse
{ public:
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
class _wsnb__Renew
{ public:
/// Element TerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnb__AbsoluteOrRelativeTimeType*    TerminationTime                1;	///< Nullable pointer.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
class _wsnb__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
class _wsnb__Unsubscribe
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
class _wsnb__UnsubscribeResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
class _wsnb__PauseSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
class _wsnb__PauseSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
class _wsnb__ResumeSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
class _wsnb__ResumeSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
class wsrfbf__BaseFaultType : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__BaseFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__BaseFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
class wstop__Documentation : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
class wstop__ExtensibleDocumented : public xsd__anyType
{ public:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
class wstop__QueryExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
class _tds__GetDeviceInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
class _tds__GetDeviceInformationResponse
{ public:
/// Element Manufacturer of type xs:string.
    std::string                          Manufacturer                   1;	///< Required element.
/// Element Model of type xs:string.
    std::string                          Model                          1;	///< Required element.
/// Element FirmwareVersion of type xs:string.
    std::string                          FirmwareVersion                1;	///< Required element.
/// Element SerialNumber of type xs:string.
    std::string                          SerialNumber                   1;	///< Required element.
/// Element HardwareId of type xs:string.
    std::string                          HardwareId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
class _tds__SetSystemDateAndTime
{ public:
/// @brief If time is obtained via NTP, UTCDateTime has no meaning
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum onv__SetDateTimeType            DateTimeType                   1;	///< Required element.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    onv__TimeZone*                       TimeZone                       0;	///< Optional element.
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onv__DateTime*                       UTCDateTime                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
class _tds__SetSystemDateAndTimeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
class _tds__GetSystemDateAndTime
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
class _tds__GetSystemDateAndTimeResponse
{ public:
/// Element SystemDateAndTime of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    onv__SystemDateTime*                 SystemDateAndTime              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
class _tds__SetSystemFactoryDefault
{ public:
/// Element FactoryDefault of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum onv__FactoryDefaultType         FactoryDefault                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware

/// "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
class _tds__UpgradeSystemFirmware
{ public:
/// Element Firmware of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Firmware                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse

/// "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element Message of type xs:string.
    std::string*                         Message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot

/// "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
class _tds__SystemReboot
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse

/// "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
class _tds__SystemRebootResponse
{ public:
/// Element Message of type xs:string.
    std::string                          Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem

/// "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
class _tds__RestoreSystem
{ public:
/// Vector of onv__BackupFile* with length 1..unbounded
    std::vector<onv__BackupFile*       > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse

/// "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
class _tds__RestoreSystemResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
class _tds__GetSystemBackup
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
class _tds__GetSystemBackupResponse
{ public:
/// Vector of onv__BackupFile* with length 1..unbounded
    std::vector<onv__BackupFile*       > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
class _tds__GetSystemSupportInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
class _tds__GetSystemSupportInformationResponse
{ public:
/// Element SupportInformation of type "http://www.onvif.org/ver10/schema":SupportInformation.
    onv__SupportInformation*             SupportInformation             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
class _tds__GetSystemLog
{ public:
/// Element LogType of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum onv__SystemLogType              LogType                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
class _tds__GetSystemLogResponse
{ public:
/// Element SystemLog of type "http://www.onvif.org/ver10/schema":SystemLog.
    onv__SystemLog*                      SystemLog                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes

/// "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
class _tds__GetScopes
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
class _tds__GetScopesResponse
{ public:
/// Vector of onv__Scope* with length 1..unbounded
    std::vector<onv__Scope*            > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes

/// "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
class _tds__SetScopes
{ public:
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
class _tds__SetScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes

/// "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
class _tds__AddScopes
{ public:
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
class _tds__AddScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes

/// "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
class _tds__RemoveScopes
{ public:
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
class _tds__RemoveScopesResponse
{ public:
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
class _tds__GetDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
class _tds__GetDiscoveryModeResponse
{ public:
/// Element DiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onv__DiscoveryMode              DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
class _tds__SetDiscoveryMode
{ public:
/// Element DiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onv__DiscoveryMode              DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
class _tds__SetDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
class _tds__GetRemoteDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// Element RemoteDiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onv__DiscoveryMode              RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
class _tds__SetRemoteDiscoveryMode
{ public:
/// Element RemoteDiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onv__DiscoveryMode              RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses

/// "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
class _tds__GetDPAddresses
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
class _tds__GetDPAddressesResponse
{ public:
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses

/// "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
class _tds__SetDPAddresses
{ public:
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
class _tds__SetDPAddressesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers

/// "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
class _tds__GetUsers
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
class _tds__GetUsersResponse
{ public:
/// Vector of onv__User* with length 0..unbounded
    std::vector<onv__User*             > User                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers

/// "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
class _tds__CreateUsers
{ public:
/// Vector of onv__User* with length 1..unbounded
    std::vector<onv__User*             > User                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
class _tds__CreateUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers

/// "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
class _tds__DeleteUsers
{ public:
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Username                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
class _tds__DeleteUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser

/// "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
class _tds__SetUser
{ public:
/// Vector of onv__User* with length 1..unbounded
    std::vector<onv__User*             > User                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
class _tds__SetUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl

/// "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
class _tds__GetWsdlUrl
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
class _tds__GetWsdlUrlResponse
{ public:
/// Element WsdlUrl of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
class _tds__GetCapabilities
{ public:
/// Vector of enum onv__CapabilityCategory with length 0..unbounded
    std::vector<enum onv__CapabilityCategory> Category                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
class _tds__GetCapabilitiesResponse
{ public:
/// Element Capabilities of type "http://www.onvif.org/ver10/schema":Capabilities.
    onv__Capabilities*                   Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname

/// "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
class _tds__GetHostname
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
class _tds__GetHostnameResponse
{ public:
/// Element HostnameInformation of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    onv__HostnameInformation*            HostnameInformation            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname

/// "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
class _tds__SetHostname
{ public:
/// Element Name of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
class _tds__SetHostnameResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS

/// "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
class _tds__GetDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
class _tds__GetDNSResponse
{ public:
/// Element DNSInformation of type "http://www.onvif.org/ver10/schema":DNSInformation.
    onv__DNSInformation*                 DNSInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS

/// "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
class _tds__SetDNS
{ public:
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// Vector of onv__IPAddress* with length 0..unbounded
    std::vector<onv__IPAddress*        > DNSManual                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
class _tds__SetDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP

/// "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
class _tds__GetNTP
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
class _tds__GetNTPResponse
{ public:
/// Element NTPInformation of type "http://www.onvif.org/ver10/schema":NTPInformation.
    onv__NTPInformation*                 NTPInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP

/// "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
class _tds__SetNTP
{ public:
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > NTPManual                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
class _tds__SetNTPResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS

/// "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
class _tds__GetDynamicDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
class _tds__GetDynamicDNSResponse
{ public:
/// Element DynamicDNSInformation of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    onv__DynamicDNSInformation*          DynamicDNSInformation          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS

/// "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
class _tds__SetDynamicDNS
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum onv__DynamicDNSType             Type                           1;	///< Required element.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    onv__DNSName*                        Name                           0;	///< Optional element.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
class _tds__SetDynamicDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
class _tds__GetNetworkInterfaces
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
class _tds__GetNetworkInterfacesResponse
{ public:
/// Vector of onv__NetworkInterface* with length 1..unbounded
    std::vector<onv__NetworkInterface* > NetworkInterfaces              1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
class _tds__SetNetworkInterfaces
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  InterfaceToken                 1;	///< Required element.
/// Element NetworkInterface of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    onv__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
class _tds__SetNetworkInterfacesResponse
{ public:
/// Element RebootNeeded of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
class _tds__GetNetworkProtocols
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
class _tds__GetNetworkProtocolsResponse
{ public:
/// Vector of onv__NetworkProtocol* with length 0..unbounded
    std::vector<onv__NetworkProtocol*  > NetworkProtocols               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
class _tds__SetNetworkProtocols
{ public:
/// Vector of onv__NetworkProtocol* with length 1..unbounded
    std::vector<onv__NetworkProtocol*  > NetworkProtocols               1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
class _tds__SetNetworkProtocolsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
class _tds__GetNetworkDefaultGateway
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// Element NetworkGateway of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    onv__NetworkGateway*                 NetworkGateway                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
class _tds__SetNetworkDefaultGateway
{ public:
/// Vector of onv__IPv4Address with length 0..unbounded
    std::vector<onv__IPv4Address       > IPv4Address                    0;
/// Vector of onv__IPv6Address with length 0..unbounded
    std::vector<onv__IPv6Address       > IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
class _tds__GetZeroConfiguration
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
class _tds__GetZeroConfigurationResponse
{ public:
/// Element ZeroConfiguration of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    onv__NetworkZeroConfiguration*       ZeroConfiguration              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
class _tds__SetZeroConfiguration
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  InterfaceToken                 1;	///< Required element.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
class _tds__SetZeroConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
class _tds__GetIPAddressFilter
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
class _tds__GetIPAddressFilterResponse
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onv__IPAddressFilter*                IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
class _tds__SetIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onv__IPAddressFilter*                IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
class _tds__SetIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
class _tds__AddIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onv__IPAddressFilter*                IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
class _tds__AddIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
class _tds__RemoveIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onv__IPAddressFilter*                IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
class _tds__RemoveIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy

/// "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
class _tds__GetAccessPolicy
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
class _tds__GetAccessPolicyResponse
{ public:
/// Element PolicyFile of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy

/// "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
class _tds__SetAccessPolicy
{ public:
/// Element PolicyFile of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
class _tds__SetAccessPolicyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate

/// "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
class _tds__CreateCertificate
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element ValidNotBefore of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// Element ValidNotAfter of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
class _tds__CreateCertificateResponse
{ public:
/// Element NvtCertificate of type "http://www.onvif.org/ver10/schema":Certificate.
    onv__Certificate*                    NvtCertificate                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
class _tds__GetCertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
class _tds__GetCertificatesResponse
{ public:
/// Vector of onv__Certificate* with length 0..unbounded
    std::vector<onv__Certificate*      > NvtCertificate                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
class _tds__GetCertificatesStatus
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
class _tds__GetCertificatesStatusResponse
{ public:
/// Vector of onv__CertificateStatus* with length 0..unbounded
    std::vector<onv__CertificateStatus*> CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus

/// "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
class _tds__SetCertificatesStatus
{ public:
/// Vector of onv__CertificateStatus* with length 0..unbounded
    std::vector<onv__CertificateStatus*> CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
class _tds__SetCertificatesStatusResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates

/// "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
class _tds__DeleteCertificates
{ public:
/// Vector of xsd__token with length 1..unbounded
    std::vector<xsd__token             > CertificateID                  1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
class _tds__DeleteCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request

/// "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
class _tds__GetPkcs10Request
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element Attributes of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     Attributes                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
class _tds__GetPkcs10RequestResponse
{ public:
/// Element Pkcs10Request of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     Pkcs10Request                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
class _tds__LoadCertificates
{ public:
/// Vector of onv__Certificate* with length 1..unbounded
    std::vector<onv__Certificate*      > NVTCertificate                 1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
class _tds__LoadCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode

/// "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
class _tds__GetClientCertificateMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
class _tds__GetClientCertificateModeResponse
{ public:
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode

/// "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
class _tds__SetClientCertificateMode
{ public:
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
class _tds__SetClientCertificateModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs

/// "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
class _tds__GetRelayOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
class _tds__GetRelayOutputsResponse
{ public:
/// Vector of onv__RelayOutput* with length 0..unbounded
    std::vector<onv__RelayOutput*      > RelayOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
class _tds__SetRelayOutputSettings
{ public:
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  RelayOutputToken               1;	///< Required element.
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    onv__RelayOutputSettings*            Properties                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
class _tds__SetRelayOutputSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
class _tds__SetRelayOutputState
{ public:
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  RelayOutputToken               1;	///< Required element.
/// Element LogicalState of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum onv__RelayLogicalState          LogicalState                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
class _tds__SetRelayOutputStateResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
class _trt__GetVideoSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
class _trt__GetVideoSourcesResponse
{ public:
/// Vector of onv__VideoSource* with length 0..unbounded
    std::vector<onv__VideoSource*      > VideoSources                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
class _trt__GetAudioSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
class _trt__GetAudioSourcesResponse
{ public:
/// Vector of onv__AudioSource* with length 0..unbounded
    std::vector<onv__AudioSource*      > AudioSources                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile

/// "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
class _trt__CreateProfile
{ public:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 Token                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
class _trt__CreateProfileResponse
{ public:
/// Element Profile of type "http://www.onvif.org/ver10/schema":Profile.
    onv__Profile*                        Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile

/// "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
class _trt__GetProfile
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
class _trt__GetProfileResponse
{ public:
/// Element Profile of type "http://www.onvif.org/ver10/schema":Profile.
    onv__Profile*                        Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles

/// "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
class _trt__GetProfiles
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
class _trt__GetProfilesResponse
{ public:
/// Vector of onv__Profile* with length 0..unbounded
    std::vector<onv__Profile*          > Profiles                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
class _trt__AddVideoEncoderConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
class _trt__AddVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
class _trt__RemoveVideoEncoderConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
class _trt__RemoveVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
class _trt__AddVideoSourceConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
class _trt__AddVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
class _trt__RemoveVideoSourceConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
class _trt__RemoveVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
class _trt__AddAudioEncoderConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
class _trt__AddAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
class _trt__RemoveAudioEncoderConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
class _trt__RemoveAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
class _trt__AddAudioSourceConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
class _trt__AddAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
class _trt__RemoveAudioSourceConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
class _trt__RemoveAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
class _trt__AddPTZConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
class _trt__AddPTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
class _trt__RemovePTZConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
class _trt__RemovePTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
class _trt__AddVideoAnalyticsConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
class _trt__AddVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
class _trt__RemoveVideoAnalyticsConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
class _trt__RemoveVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
class _trt__AddMetadataConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
class _trt__AddMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
class _trt__RemoveMetadataConfiguration
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
class _trt__RemoveMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile

/// "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
class _trt__DeleteProfile
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
class _trt__DeleteProfileResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
class _trt__GetVideoEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
class _trt__GetVideoEncoderConfigurationsResponse
{ public:
/// Vector of onv__VideoEncoderConfiguration* with length 0..unbounded
    std::vector<onv__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
class _trt__GetVideoSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
class _trt__GetVideoSourceConfigurationsResponse
{ public:
/// Vector of onv__VideoSourceConfiguration* with length 0..unbounded
    std::vector<onv__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
class _trt__GetAudioEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
class _trt__GetAudioEncoderConfigurationsResponse
{ public:
/// Vector of onv__AudioEncoderConfiguration* with length 0..unbounded
    std::vector<onv__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
class _trt__GetAudioSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
class _trt__GetAudioSourceConfigurationsResponse
{ public:
/// Vector of onv__AudioSourceConfiguration* with length 0..unbounded
    std::vector<onv__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
class _trt__GetVideoAnalyticsConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
class _trt__GetVideoAnalyticsConfigurationsResponse
{ public:
/// Vector of onv__VideoAnalyticsConfiguration* with length 0..unbounded
    std::vector<onv__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
class _trt__GetMetadataConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
class _trt__GetMetadataConfigurationsResponse
{ public:
/// Vector of onv__MetadataConfiguration* with length 0..unbounded
    std::vector<onv__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
class _trt__GetVideoSourceConfiguration
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
class _trt__GetVideoSourceConfigurationResponse
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onv__VideoSourceConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
class _trt__GetVideoEncoderConfiguration
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
class _trt__GetVideoEncoderConfigurationResponse
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onv__VideoEncoderConfiguration*      Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
class _trt__GetAudioSourceConfiguration
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
class _trt__GetAudioSourceConfigurationResponse
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onv__AudioSourceConfiguration*       Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
class _trt__GetAudioEncoderConfiguration
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
class _trt__GetAudioEncoderConfigurationResponse
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onv__AudioEncoderConfiguration*      Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
class _trt__GetVideoAnalyticsConfiguration
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
class _trt__GetVideoAnalyticsConfigurationResponse
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onv__VideoAnalyticsConfiguration*    Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
class _trt__GetMetadataConfiguration
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
class _trt__GetMetadataConfigurationResponse
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onv__MetadataConfiguration*          Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
class _trt__GetCompatibleVideoEncoderConfigurations
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
class _trt__GetCompatibleVideoEncoderConfigurationsResponse
{ public:
/// Vector of onv__VideoEncoderConfiguration* with length 0..unbounded
    std::vector<onv__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
class _trt__GetCompatibleVideoSourceConfigurations
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
class _trt__GetCompatibleVideoSourceConfigurationsResponse
{ public:
/// Vector of onv__VideoSourceConfiguration* with length 0..unbounded
    std::vector<onv__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
class _trt__GetCompatibleAudioEncoderConfigurations
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
class _trt__GetCompatibleAudioEncoderConfigurationsResponse
{ public:
/// Vector of onv__AudioEncoderConfiguration* with length 0..unbounded
    std::vector<onv__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
class _trt__GetCompatibleAudioSourceConfigurations
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
class _trt__GetCompatibleAudioSourceConfigurationsResponse
{ public:
/// Vector of onv__AudioSourceConfiguration* with length 0..unbounded
    std::vector<onv__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
class _trt__GetCompatibleVideoAnalyticsConfigurations
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{ public:
/// Vector of onv__VideoAnalyticsConfiguration* with length 0..unbounded
    std::vector<onv__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
class _trt__GetCompatibleMetadataConfigurations
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
class _trt__GetCompatibleMetadataConfigurationsResponse
{ public:
/// Vector of onv__MetadataConfiguration* with length 0..unbounded
    std::vector<onv__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
class _trt__SetVideoEncoderConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onv__VideoEncoderConfiguration*      Configuration                  1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
class _trt__SetVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
class _trt__SetVideoSourceConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onv__VideoSourceConfiguration*       Configuration                  1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
class _trt__SetVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
class _trt__SetAudioEncoderConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onv__AudioEncoderConfiguration*      Configuration                  1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
class _trt__SetAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
class _trt__SetAudioSourceConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onv__AudioSourceConfiguration*       Configuration                  1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
class _trt__SetAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
class _trt__SetVideoAnalyticsConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onv__VideoAnalyticsConfiguration*    Configuration                  1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
class _trt__SetVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
class _trt__SetMetadataConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onv__MetadataConfiguration*          Configuration                  1;	///< Required element.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
class _trt__SetMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
class _trt__GetVideoSourceConfigurationOptions
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ConfigurationToken             0;	///< Optional element.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
class _trt__GetVideoSourceConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    onv__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
class _trt__GetVideoEncoderConfigurationOptions
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ConfigurationToken             0;	///< Optional element.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
class _trt__GetVideoEncoderConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    onv__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
class _trt__GetAudioSourceConfigurationOptions
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ConfigurationToken             0;	///< Optional element.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
class _trt__GetAudioSourceConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    onv__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
class _trt__GetAudioEncoderConfigurationOptions
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ConfigurationToken             0;	///< Optional element.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
class _trt__GetAudioEncoderConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    onv__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
class _trt__GetMetadataConfigurationOptions
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ConfigurationToken             0;	///< Optional element.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken*                 ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
class _trt__GetMetadataConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    onv__MetadataConfigurationOptions*   Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances

/// "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
class _trt__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// Element TotalNumber of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// Element JPEG of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// Element H264 of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// Element MPEG4 of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri

/// "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
class _trt__GetStreamUri
{ public:
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    onv__StreamSetup*                    StreamSetup                    1;	///< Required element.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
class _trt__GetStreamUriResponse
{ public:
/// Element MediaUri of type "http://www.onvif.org/ver10/schema":MediaUri.
    onv__MediaUri*                       MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming

/// "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
class _trt__StartMulticastStreaming
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse

/// "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
class _trt__StartMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming

/// "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
class _trt__StopMulticastStreaming
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse

/// "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
class _trt__StopMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint

/// "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
class _trt__SetSynchronizationPoint
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
class _trt__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri

/// "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
class _trt__GetSnapshotUri
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
class _trt__GetSnapshotUriResponse
{ public:
/// Element MediaUri of type "http://www.onvif.org/ver10/schema":MediaUri.
    onv__MediaUri*                       MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings

/// "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings is a complexType.
class _timg__GetImagingSettings
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse is a complexType.
class _timg__GetImagingSettingsResponse
{ public:
/// Element ImagingSettings of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    onv__ImagingSettings20*              ImagingSettings                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings

/// "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings is a complexType.
class _timg__SetImagingSettings
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// Element ImagingSettings of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    onv__ImagingSettings20*              ImagingSettings                1;	///< Required element.
/// Element ForcePersistence  of type xs:boolean.
    bool*                                ForcePersistence_x0020         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse is a complexType.
class _timg__SetImagingSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptions

/// "http://www.onvif.org/ver20/imaging/wsdl":GetOptions is a complexType.
class _timg__GetOptions
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse is a complexType.
class _timg__GetOptionsResponse
{ public:
/// Element ImagingOptions of type "http://www.onvif.org/ver10/schema":ImagingOptions20.
    onv__ImagingOptions20*               ImagingOptions                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Move

/// "http://www.onvif.org/ver20/imaging/wsdl":Move is a complexType.
class _timg__Move
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusMove.
    onv__FocusMove*                      Focus                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse is a complexType.
class _timg__MoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions

/// "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions is a complexType.
class _timg__GetMoveOptions
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse is a complexType.
class _timg__GetMoveOptionsResponse
{ public:
/// Element MoveOptions of type "http://www.onvif.org/ver10/schema":MoveOptions20.
    onv__MoveOptions20*                  MoveOptions                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Stop

/// "http://www.onvif.org/ver20/imaging/wsdl":Stop is a complexType.
class _timg__Stop
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":StopResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":StopResponse is a complexType.
class _timg__StopResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatus

/// "http://www.onvif.org/ver20/imaging/wsdl":GetStatus is a complexType.
class _timg__GetStatus
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse is a complexType.
class _timg__GetStatusResponse
{ public:
/// Element Status of type "http://www.onvif.org/ver10/schema":ImagingStatus20.
    onv__ImagingStatus20*                Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video input.
class onv__VideoSource : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// @brief Frame rate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @brief Horizontal and vertical resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onv__VideoResolution*                Resolution                     1;	///< Required element.
/// @brief Optional configuration of the image sensor.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    onv__ImagingSettings*                Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    onv__VideoSourceExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio input.
class onv__AudioSource : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// @brief number of available audio channels. (1: mono, 2: stereo)
/// Element Channels of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoSourceConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Reference to the physical input.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  SourceToken                    1;	///< Required element.
/// @brief Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// Element Bounds of type "http://www.onvif.org/ver10/schema":IntRectangle.
    onv__IntRectangle*                   Bounds                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoEncoderConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum onv__VideoEncoding              Encoding                       1;	///< Required element.
/// @brief Configured video resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onv__VideoResolution*                Resolution                     1;	///< Required element.
/// @brief Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// Element Quality of type xs:float.
    float                                Quality                        1;	///< Required element.
/// @brief Optional element to configure rate control related parameters.
/// Element RateControl of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    onv__VideoRateControl*               RateControl                    0;	///< Optional element.
/// @brief Optional element to configure Mpeg4 related parameters.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    onv__Mpeg4Configuration*             MPEG4                          0;	///< Optional element.
/// @brief Optional element to configure H.264 related parameters.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Configuration.
    onv__H264Configuration*              H264                           0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related video stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":JpegOptions.
class onv__JpegOptions2 : public onv__JpegOptions
{ public:
/*  INHERITED FROM onv__JpegOptions:
/// @brief List of supported image sizes.
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM onv__JpegOptions */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":Mpeg4Options.
class onv__Mpeg4Options2 : public onv__Mpeg4Options
{ public:
/*  INHERITED FROM onv__Mpeg4Options:
/// @brief List of supported image sizes.
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Vector of enum onv__Mpeg4Profile with length 1..unbounded
    std::vector<enum onv__Mpeg4Profile > Mpeg4ProfilesSupported         1;
    END OF INHERITED FROM onv__Mpeg4Options */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":H264Options.
class onv__H264Options2 : public onv__H264Options
{ public:
/*  INHERITED FROM onv__H264Options:
/// @brief List of supported image sizes.
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Vector of enum onv__H264Profile with length 1..unbounded
    std::vector<enum onv__H264Profile  > H264ProfilesSupported          1;
    END OF INHERITED FROM onv__H264Options */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AudioSourceConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Token of the Audio Source the configuration applies to
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  SourceToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AudioEncoderConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onv__AudioEncoding              Encoding                       1;	///< Required element.
/// @brief The output bitrate in kbps.
/// Element Bitrate of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// @brief The output sample rate in kHz.
/// Element SampleRate of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoAnalyticsConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    onv__AnalyticsEngineConfiguration*   AnalyticsEngineConfiguration   1;	///< Required element.
/// Element RuleEngineConfiguration of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    onv__RuleEngineConfiguration*        RuleEngineConfiguration        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__MetadataConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief optional element to configure which PTZ related data is to include in the metadata stream
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZFilter.
    onv__PTZFilter*                      PTZStatus                      0;	///< Optional element.
/// @brief Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul> <li>To get all events: Include the Events element but do not include a filter.</li> <li>To get no events: Do not include the Events element.</li> <li>To get only some events: Include the Events element and include a filter in the element.</li></ul>
/// Element Events of type "http://www.onvif.org/ver10/schema":EventSubscription.
    onv__EventSubscription*              Events                         0;	///< Optional element.
/// @brief Defines if data to include from the analytics engine part shall be included in the stream
/// Element Analytics of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video outputs.
class onv__VideoOutput : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Layout of type "http://www.onvif.org/ver10/schema":Layout.
    onv__Layout*                         Layout                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoOutputConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Token of the Video Output the configuration applies to
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  OutputToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio outputs.
class onv__AudioOutput : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AudioOutputConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Token of the phsycial Audio output.
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  OutputToken                    1;	///< Required element.
/// @brief An audio channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li></ul> Acoustic echo cancellation is out of ONVIF scope.
/// Element SendPrimacy of type xs:anyURI.
    xsd__anyURI*                         SendPrimacy                    0;	///< Optional element.
/// @brief Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// Element OutputLevel of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// @brief The Audio Decoder Configuration does not contain any that parameter to configure the decoding .A decoder shall decode every data it receives (according to its capabilities).
class onv__AudioDecoderConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__NetworkInterface : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief Network interface information
/// Element Info of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    onv__NetworkInterfaceInfo*           Info                           0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    onv__NetworkInterfaceLink*           Link                           0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    onv__IPv4NetworkInterface*           IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    onv__IPv6NetworkInterface*           IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    onv__NetworkInterfaceExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
class onv__CertificateUsage : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute Critical of type xs:boolean.
   @bool                                 Critical                       1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__RelayOutput : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    onv__RelayOutputSettings*            Properties                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__PTZNode : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// @brief A unique identifier that is used to reference PTZ Nodes.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name*                           Name                           0;	///< Optional element.
/// @brief A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// Element SupportedPTZSpaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    onv__PTZSpaces*                      SupportedPTZSpaces             1;	///< Required element.
/// @brief All preset operations MUST be available for this PTZ Node if one preset is supported.
/// Element MaximumNumberOfPresets of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// @brief A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// Element HomeSupported of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// @brief A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// Vector of onv__AuxiliaryData with length 0..unbounded
    std::vector<onv__AuxiliaryData     > AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    onv__PTZNodeExtension*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__PTZConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  NodeToken                      1;	///< Required element.
/// @brief If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// Element DefaultAbsolutePantTiltPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// Element DefaultAbsoluteZoomPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// Element DefaultRelativePanTiltTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// Element DefaultRelativeZoomTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// Element DefaultContinuousPanTiltVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// Element DefaultContinuousZoomVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// Element DefaultPTZSpeed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onv__PTZSpeed*                       DefaultPTZSpeed                0;	///< Optional element.
/// @brief If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// Element DefaultPTZTimeout of type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// @brief The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// Element PanTiltLimits of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    onv__PanTiltLimits*                  PanTiltLimits                  0;	///< Optional element.
/// @brief The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// Element ZoomLimits of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    onv__ZoomLimits*                     ZoomLimits                     0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    onv__PTZConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ObjectId.
class onv__Object : public onv__ObjectId
{ public:
/*  INHERITED FROM onv__ObjectId:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
    END OF INHERITED FROM onv__ObjectId */
/// Element Appearance of type "http://www.onvif.org/ver10/schema":Appearance.
    onv__Appearance*                     Appearance                     0;	///< Optional element.
/// Element Behaviour of type "http://www.onvif.org/ver10/schema":Behaviour.
    onv__Behaviour*                      Behaviour                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectExtension.
    onv__ObjectExtension*                Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/b-2":FilterType.
class onv__EventFilter : public wsnb__FilterType
{ public:
/*  INHERITED FROM wsnb__FilterType:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    END OF INHERITED FROM wsnb__FilterType */
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AnalyticsEngine : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    onv__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AnalyticsEngineInput : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element SourceIdentification of type "http://www.onvif.org/ver10/schema":SourceIdentification.
    onv__SourceIdentification*           SourceIdentification           1;	///< Required element.
/// Element VideoInput of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onv__VideoEncoderConfiguration*      VideoInput                     1;	///< Required element.
/// Element MetadataInput of type "http://www.onvif.org/ver10/schema":MetadataInput.
    onv__MetadataInput*                  MetadataInput                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AnalyticsEngineControl : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// @brief Token of the analytics engine (AnalyticsEngine) being controlled.
/// Element EngineToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  EngineToken                    1;	///< Required element.
/// @brief Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// Element EngineConfigToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  EngineConfigToken              1;	///< Required element.
/// @brief Tokens of the input (AnalyticsEngineInput) configuration applied.
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > InputToken                     1;
/// @brief Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > ReceiverToken                  1;
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      0;	///< Optional element.
/// Element Subscription of type "http://www.onvif.org/ver10/schema":Config.
    onv__Config*                         Subscription                   1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum onv__ModeOfOperation            Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__SubscribeCreationFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidFilterFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidFilterFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidFilterFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidFilterFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 1..unbounded
    std::vector<xsd__QName             > UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__TopicExpressionDialectUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidTopicExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__TopicNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__TopicNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__TopicNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__MultipleTopicsSpecifiedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidProducerPropertiesExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidMessageContentExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnrecognizedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnsupportedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__NotifyMessageNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnacceptableInitialTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__NoCurrentMessageOnTopicFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToGetMessagesFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToGetMessagesFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToGetMessagesFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToDestroyPullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToCreatePullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnacceptableTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToDestroySubscriptionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__PauseFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__PauseFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__PauseFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__PauseFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__ResumeFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__ResumeFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__ResumeFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__ResumeFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Size of Topic array is 0..unbounded
   $int                                  __sizeTopic                    0;
    class _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* with length 0..unbounded
    std::vector<wstop__TopicType*      > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    std::string                                                        
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute parent of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute targetNamespace of type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* with length 0..unbounded
    std::vector<wstop__TopicType*      > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    std::string                                                        
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicSetType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of type "http://www.onvif.org/ver10/schema":MetadataStream.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	RuleEngineBinding 
//gsoap ns1  service type:	RuleEnginePort 
//gsoap ns1  service namespace:	http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns2  service name:	AnalyticsEngineBinding 
//gsoap ns2  service type:	AnalyticsEnginePort 
//gsoap ns2  service namespace:	http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap timg service name:	ImagingBinding 
//gsoap timg service type:	ImagingPort 
//gsoap timg service namespace:	http://www.onvif.org/ver20/imaging/wsdl 
//gsoap timg service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref RuleEngineBinding

  - @ref AnalyticsEngineBinding

  - @ref DeviceBinding

  - @ref ImagingBinding

  - @ref MediaBinding

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page RuleEngineBinding Binding "RuleEngineBinding"

@section RuleEngineBinding_operations Operations of Binding  "RuleEngineBinding"

  - @ref __ns1__GetSupportedRules

  - @ref __ns1__CreateRules

  - @ref __ns1__DeleteRules

  - @ref __ns1__GetRules

  - @ref __ns1__ModifyRules

@section RuleEngineBinding_ports Endpoints of Binding  "RuleEngineBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page AnalyticsEngineBinding Binding "AnalyticsEngineBinding"

@section AnalyticsEngineBinding_operations Operations of Binding  "AnalyticsEngineBinding"

  - @ref __ns2__GetSupportedAnalyticsModules

  - @ref __ns2__CreateAnalyticsModules

  - @ref __ns2__DeleteAnalyticsModules

  - @ref __ns2__GetAnalyticsModules

  - @ref __ns2__ModifyAnalyticsModules

@section AnalyticsEngineBinding_ports Endpoints of Binding  "AnalyticsEngineBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding  "DeviceBinding"

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

@section DeviceBinding_ports Endpoints of Binding  "DeviceBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_operations Operations of Binding  "ImagingBinding"

  - @ref __timg__GetImagingSettings

  - @ref __timg__SetImagingSettings

  - @ref __timg__GetOptions

  - @ref __timg__Move

  - @ref __timg__Stop

  - @ref __timg__GetStatus

  - @ref __timg__GetMoveOptions

@section ImagingBinding_ports Endpoints of Binding  "ImagingBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding  "MediaBinding"

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

@section MediaBinding_ports Endpoints of Binding  "MediaBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RuleEngineBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSupportedRules                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSupportedRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSupportedRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetSupportedRules*            tan__GetSupportedRules,
    // response parameters:
    _tan__GetSupportedRulesResponse*    tan__GetSupportedRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSupportedRules(
    struct soap *soap,
    // request parameters:
    _tan__GetSupportedRules*            tan__GetSupportedRules,
    // response parameters:
    _tan__GetSupportedRulesResponse*    tan__GetSupportedRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetSupportedRules document
//gsoap ns1  service method-encoding:	GetSupportedRules literal
//gsoap ns1  service method-action:	GetSupportedRules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules
int __ns1__GetSupportedRules(
    _tan__GetSupportedRules*            tan__GetSupportedRules,	///< Request parameter
    _tan__GetSupportedRulesResponse*    tan__GetSupportedRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/CreateRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__CreateRules*                  tan__CreateRules,
    // response parameters:
    _tan__CreateRulesResponse*          tan__CreateRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateRules(
    struct soap *soap,
    // request parameters:
    _tan__CreateRules*                  tan__CreateRules,
    // response parameters:
    _tan__CreateRulesResponse*          tan__CreateRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	CreateRules document
//gsoap ns1  service method-encoding:	CreateRules literal
//gsoap ns1  service method-action:	CreateRules http://www.onvif.org/ver20/analytics/wsdl/CreateRules
int __ns1__CreateRules(
    _tan__CreateRules*                  tan__CreateRules,	///< Request parameter
    _tan__CreateRulesResponse*          tan__CreateRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__DeleteRules*                  tan__DeleteRules,
    // response parameters:
    _tan__DeleteRulesResponse*          tan__DeleteRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteRules(
    struct soap *soap,
    // request parameters:
    _tan__DeleteRules*                  tan__DeleteRules,
    // response parameters:
    _tan__DeleteRulesResponse*          tan__DeleteRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	DeleteRules document
//gsoap ns1  service method-encoding:	DeleteRules literal
//gsoap ns1  service method-action:	DeleteRules http://www.onvif.org/ver20/analytics/wsdl/DeleteRules
int __ns1__DeleteRules(
    _tan__DeleteRules*                  tan__DeleteRules,	///< Request parameter
    _tan__DeleteRulesResponse*          tan__DeleteRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetRules                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetRules*                     tan__GetRules,
    // response parameters:
    _tan__GetRulesResponse*             tan__GetRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetRules(
    struct soap *soap,
    // request parameters:
    _tan__GetRules*                     tan__GetRules,
    // response parameters:
    _tan__GetRulesResponse*             tan__GetRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetRules document
//gsoap ns1  service method-encoding:	GetRules literal
//gsoap ns1  service method-action:	GetRules http://www.onvif.org/ver20/analytics/wsdl/GetRules
int __ns1__GetRules(
    _tan__GetRules*                     tan__GetRules,	///< Request parameter
    _tan__GetRulesResponse*             tan__GetRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__ModifyRules*                  tan__ModifyRules,
    // response parameters:
    _tan__ModifyRulesResponse*          tan__ModifyRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyRules(
    struct soap *soap,
    // request parameters:
    _tan__ModifyRules*                  tan__ModifyRules,
    // response parameters:
    _tan__ModifyRulesResponse*          tan__ModifyRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	ModifyRules document
//gsoap ns1  service method-encoding:	ModifyRules literal
//gsoap ns1  service method-action:	ModifyRules http://www.onvif.org/ver20/analytics/wsdl/ModifyRules
int __ns1__ModifyRules(
    _tan__ModifyRules*                  tan__ModifyRules,	///< Request parameter
    _tan__ModifyRulesResponse*          tan__ModifyRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AnalyticsEngineBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetSupportedAnalyticsModules                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__GetSupportedAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetSupportedAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // response parameters:
    _tan__GetSupportedAnalyticsModulesResponse* tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetSupportedAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // response parameters:
    _tan__GetSupportedAnalyticsModulesResponse* tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	GetSupportedAnalyticsModules document
//gsoap ns2  service method-encoding:	GetSupportedAnalyticsModules literal
//gsoap ns2  service method-action:	GetSupportedAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules
int __ns2__GetSupportedAnalyticsModules(
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,	///< Request parameter
    _tan__GetSupportedAnalyticsModulesResponse* tan__GetSupportedAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__CreateAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__CreateAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__CreateAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,
    // response parameters:
    _tan__CreateAnalyticsModulesResponse* tan__CreateAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__CreateAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,
    // response parameters:
    _tan__CreateAnalyticsModulesResponse* tan__CreateAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	CreateAnalyticsModules document
//gsoap ns2  service method-encoding:	CreateAnalyticsModules literal
//gsoap ns2  service method-action:	CreateAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules
int __ns2__CreateAnalyticsModules(
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,	///< Request parameter
    _tan__CreateAnalyticsModulesResponse* tan__CreateAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__DeleteAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__DeleteAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__DeleteAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,
    // response parameters:
    _tan__DeleteAnalyticsModulesResponse* tan__DeleteAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__DeleteAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,
    // response parameters:
    _tan__DeleteAnalyticsModulesResponse* tan__DeleteAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	DeleteAnalyticsModules document
//gsoap ns2  service method-encoding:	DeleteAnalyticsModules literal
//gsoap ns2  service method-action:	DeleteAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules
int __ns2__DeleteAnalyticsModules(
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,	///< Request parameter
    _tan__DeleteAnalyticsModulesResponse* tan__DeleteAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAnalyticsModules                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__GetAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,
    // response parameters:
    _tan__GetAnalyticsModulesResponse*  tan__GetAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,
    // response parameters:
    _tan__GetAnalyticsModulesResponse*  tan__GetAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	GetAnalyticsModules document
//gsoap ns2  service method-encoding:	GetAnalyticsModules literal
//gsoap ns2  service method-action:	GetAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules
int __ns2__GetAnalyticsModules(
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,	///< Request parameter
    _tan__GetAnalyticsModulesResponse*  tan__GetAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__ModifyAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ModifyAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ModifyAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,
    // response parameters:
    _tan__ModifyAnalyticsModulesResponse* tan__ModifyAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ModifyAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,
    // response parameters:
    _tan__ModifyAnalyticsModulesResponse* tan__ModifyAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	ModifyAnalyticsModules document
//gsoap ns2  service method-encoding:	ModifyAnalyticsModules literal
//gsoap ns2  service method-action:	ModifyAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules
int __ns2__ModifyAnalyticsModules(
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,	///< Request parameter
    _tan__ModifyAnalyticsModulesResponse* tan__ModifyAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // response parameters:
    _tds__GetDeviceInformationResponse* tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // request parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // response parameters:
    _tds__GetDeviceInformationResponse* tds__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
int __tds__GetDeviceInformation(
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,	///< Request parameter
    _tds__GetDeviceInformationResponse* tds__GetDeviceInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // response parameters:
    _tds__SetSystemDateAndTimeResponse* tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // request parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // response parameters:
    _tds__SetSystemDateAndTimeResponse* tds__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
int __tds__SetSystemDateAndTime(
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,	///< Request parameter
    _tds__SetSystemDateAndTimeResponse* tds__SetSystemDateAndTimeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // response parameters:
    _tds__GetSystemDateAndTimeResponse* tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // request parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // response parameters:
    _tds__GetSystemDateAndTimeResponse* tds__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
int __tds__GetSystemDateAndTime(
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,	///< Request parameter
    _tds__GetSystemDateAndTimeResponse* tds__GetSystemDateAndTimeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // response parameters:
    _tds__SetSystemFactoryDefaultResponse* tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // request parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // response parameters:
    _tds__SetSystemFactoryDefaultResponse* tds__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
int __tds__SetSystemFactoryDefault(
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,	///< Request parameter
    _tds__SetSystemFactoryDefaultResponse* tds__SetSystemFactoryDefaultResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // response parameters:
    _tds__UpgradeSystemFirmwareResponse* tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // request parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // response parameters:
    _tds__UpgradeSystemFirmwareResponse* tds__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
int __tds__UpgradeSystemFirmware(
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,	///< Request parameter
    _tds__UpgradeSystemFirmwareResponse* tds__UpgradeSystemFirmwareResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SystemReboot" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SystemReboot"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // response parameters:
    _tds__SystemRebootResponse*         tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // request parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // response parameters:
    _tds__SystemRebootResponse*         tds__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
int __tds__SystemReboot(
    _tds__SystemReboot*                 tds__SystemReboot,	///< Request parameter
    _tds__SystemRebootResponse*         tds__SystemRebootResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__RestoreSystem" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // response parameters:
    _tds__RestoreSystemResponse*        tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // request parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // response parameters:
    _tds__RestoreSystemResponse*        tds__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
int __tds__RestoreSystem(
    _tds__RestoreSystem*                tds__RestoreSystem,	///< Request parameter
    _tds__RestoreSystemResponse*        tds__RestoreSystemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemBackup" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // response parameters:
    _tds__GetSystemBackupResponse*      tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // request parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // response parameters:
    _tds__GetSystemBackupResponse*      tds__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
int __tds__GetSystemBackup(
    _tds__GetSystemBackup*              tds__GetSystemBackup,	///< Request parameter
    _tds__GetSystemBackupResponse*      tds__GetSystemBackupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemLog" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // response parameters:
    _tds__GetSystemLogResponse*         tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // request parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // response parameters:
    _tds__GetSystemLogResponse*         tds__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
int __tds__GetSystemLog(
    _tds__GetSystemLog*                 tds__GetSystemLog,	///< Request parameter
    _tds__GetSystemLogResponse*         tds__GetSystemLogResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // response parameters:
    _tds__GetSystemSupportInformationResponse* tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // request parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // response parameters:
    _tds__GetSystemSupportInformationResponse* tds__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
int __tds__GetSystemSupportInformation(
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,	///< Request parameter
    _tds__GetSystemSupportInformationResponse* tds__GetSystemSupportInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetScopes" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetScopes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // response parameters:
    _tds__GetScopesResponse*            tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // request parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // response parameters:
    _tds__GetScopesResponse*            tds__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
int __tds__GetScopes(
    _tds__GetScopes*                    tds__GetScopes,	///< Request parameter
    _tds__GetScopesResponse*            tds__GetScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetScopes" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetScopes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // response parameters:
    _tds__SetScopesResponse*            tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // request parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // response parameters:
    _tds__SetScopesResponse*            tds__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
int __tds__SetScopes(
    _tds__SetScopes*                    tds__SetScopes,	///< Request parameter
    _tds__SetScopesResponse*            tds__SetScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__AddScopes" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/AddScopes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // response parameters:
    _tds__AddScopesResponse*            tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // request parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // response parameters:
    _tds__AddScopesResponse*            tds__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
int __tds__AddScopes(
    _tds__AddScopes*                    tds__AddScopes,	///< Request parameter
    _tds__AddScopesResponse*            tds__AddScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__RemoveScopes" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // response parameters:
    _tds__RemoveScopesResponse*         tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // request parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // response parameters:
    _tds__RemoveScopesResponse*         tds__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
int __tds__RemoveScopes(
    _tds__RemoveScopes*                 tds__RemoveScopes,	///< Request parameter
    _tds__RemoveScopesResponse*         tds__RemoveScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // response parameters:
    _tds__GetDiscoveryModeResponse*     tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // response parameters:
    _tds__GetDiscoveryModeResponse*     tds__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
int __tds__GetDiscoveryMode(
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,	///< Request parameter
    _tds__GetDiscoveryModeResponse*     tds__GetDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // response parameters:
    _tds__SetDiscoveryModeResponse*     tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // response parameters:
    _tds__SetDiscoveryModeResponse*     tds__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
int __tds__SetDiscoveryMode(
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,	///< Request parameter
    _tds__SetDiscoveryModeResponse*     tds__SetDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // response parameters:
    _tds__GetRemoteDiscoveryModeResponse* tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // response parameters:
    _tds__GetRemoteDiscoveryModeResponse* tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
int __tds__GetRemoteDiscoveryMode(
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,	///< Request parameter
    _tds__GetRemoteDiscoveryModeResponse* tds__GetRemoteDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // response parameters:
    _tds__SetRemoteDiscoveryModeResponse* tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // response parameters:
    _tds__SetRemoteDiscoveryModeResponse* tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
int __tds__SetRemoteDiscoveryMode(
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,	///< Request parameter
    _tds__SetRemoteDiscoveryModeResponse* tds__SetRemoteDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDPAddresses" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // response parameters:
    _tds__GetDPAddressesResponse*       tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // request parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // response parameters:
    _tds__GetDPAddressesResponse*       tds__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
int __tds__GetDPAddresses(
    _tds__GetDPAddresses*               tds__GetDPAddresses,	///< Request parameter
    _tds__GetDPAddressesResponse*       tds__GetDPAddressesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetUsers" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetUsers"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // response parameters:
    _tds__GetUsersResponse*             tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // request parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // response parameters:
    _tds__GetUsersResponse*             tds__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
int __tds__GetUsers(
    _tds__GetUsers*                     tds__GetUsers,	///< Request parameter
    _tds__GetUsersResponse*             tds__GetUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__CreateUsers" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/CreateUsers"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // response parameters:
    _tds__CreateUsersResponse*          tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // request parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // response parameters:
    _tds__CreateUsersResponse*          tds__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
int __tds__CreateUsers(
    _tds__CreateUsers*                  tds__CreateUsers,	///< Request parameter
    _tds__CreateUsersResponse*          tds__CreateUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteUsers" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // response parameters:
    _tds__DeleteUsersResponse*          tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // request parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // response parameters:
    _tds__DeleteUsersResponse*          tds__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
int __tds__DeleteUsers(
    _tds__DeleteUsers*                  tds__DeleteUsers,	///< Request parameter
    _tds__DeleteUsersResponse*          tds__DeleteUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetUser" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetUser"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetUser*                      tds__SetUser,
    // response parameters:
    _tds__SetUserResponse*              tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // request parameters:
    _tds__SetUser*                      tds__SetUser,
    // response parameters:
    _tds__SetUserResponse*              tds__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
int __tds__SetUser(
    _tds__SetUser*                      tds__SetUser,	///< Request parameter
    _tds__SetUserResponse*              tds__SetUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // response parameters:
    _tds__GetWsdlUrlResponse*           tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // request parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // response parameters:
    _tds__GetWsdlUrlResponse*           tds__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
int __tds__GetWsdlUrl(
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,	///< Request parameter
    _tds__GetWsdlUrlResponse*           tds__GetWsdlUrlResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCapabilities" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // response parameters:
    _tds__GetCapabilitiesResponse*      tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // request parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // response parameters:
    _tds__GetCapabilitiesResponse*      tds__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
int __tds__GetCapabilities(
    _tds__GetCapabilities*              tds__GetCapabilities,	///< Request parameter
    _tds__GetCapabilitiesResponse*      tds__GetCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDPAddresses" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // response parameters:
    _tds__SetDPAddressesResponse*       tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // request parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // response parameters:
    _tds__SetDPAddressesResponse*       tds__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
int __tds__SetDPAddresses(
    _tds__SetDPAddresses*               tds__SetDPAddresses,	///< Request parameter
    _tds__SetDPAddressesResponse*       tds__SetDPAddressesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetHostname" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetHostname"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // response parameters:
    _tds__GetHostnameResponse*          tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // request parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // response parameters:
    _tds__GetHostnameResponse*          tds__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
int __tds__GetHostname(
    _tds__GetHostname*                  tds__GetHostname,	///< Request parameter
    _tds__GetHostnameResponse*          tds__GetHostnameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetHostname" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetHostname"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // response parameters:
    _tds__SetHostnameResponse*          tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // request parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // response parameters:
    _tds__SetHostnameResponse*          tds__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
int __tds__SetHostname(
    _tds__SetHostname*                  tds__SetHostname,	///< Request parameter
    _tds__SetHostnameResponse*          tds__SetHostnameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDNS" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetDNS"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // response parameters:
    _tds__GetDNSResponse*               tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // request parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // response parameters:
    _tds__GetDNSResponse*               tds__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
int __tds__GetDNS(
    _tds__GetDNS*                       tds__GetDNS,	///< Request parameter
    _tds__GetDNSResponse*               tds__GetDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDNS" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetDNS"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // response parameters:
    _tds__SetDNSResponse*               tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // request parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // response parameters:
    _tds__SetDNSResponse*               tds__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
int __tds__SetDNS(
    _tds__SetDNS*                       tds__SetDNS,	///< Request parameter
    _tds__SetDNSResponse*               tds__SetDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNTP" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetNTP"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // response parameters:
    _tds__GetNTPResponse*               tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // request parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // response parameters:
    _tds__GetNTPResponse*               tds__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
int __tds__GetNTP(
    _tds__GetNTP*                       tds__GetNTP,	///< Request parameter
    _tds__GetNTPResponse*               tds__GetNTPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNTP" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetNTP"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // response parameters:
    _tds__SetNTPResponse*               tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // request parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // response parameters:
    _tds__SetNTPResponse*               tds__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
int __tds__SetNTP(
    _tds__SetNTP*                       tds__SetNTP,	///< Request parameter
    _tds__SetNTPResponse*               tds__SetNTPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // response parameters:
    _tds__GetDynamicDNSResponse*        tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // request parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // response parameters:
    _tds__GetDynamicDNSResponse*        tds__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
int __tds__GetDynamicDNS(
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,	///< Request parameter
    _tds__GetDynamicDNSResponse*        tds__GetDynamicDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // response parameters:
    _tds__SetDynamicDNSResponse*        tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // request parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // response parameters:
    _tds__SetDynamicDNSResponse*        tds__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
int __tds__SetDynamicDNS(
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,	///< Request parameter
    _tds__SetDynamicDNSResponse*        tds__SetDynamicDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // response parameters:
    _tds__GetNetworkInterfacesResponse* tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // request parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // response parameters:
    _tds__GetNetworkInterfacesResponse* tds__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
int __tds__GetNetworkInterfaces(
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,	///< Request parameter
    _tds__GetNetworkInterfacesResponse* tds__GetNetworkInterfacesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // response parameters:
    _tds__SetNetworkInterfacesResponse* tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // request parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // response parameters:
    _tds__SetNetworkInterfacesResponse* tds__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
int __tds__SetNetworkInterfaces(
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,	///< Request parameter
    _tds__SetNetworkInterfacesResponse* tds__SetNetworkInterfacesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // response parameters:
    _tds__GetNetworkProtocolsResponse*  tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // request parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // response parameters:
    _tds__GetNetworkProtocolsResponse*  tds__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
int __tds__GetNetworkProtocols(
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,	///< Request parameter
    _tds__GetNetworkProtocolsResponse*  tds__GetNetworkProtocolsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // response parameters:
    _tds__SetNetworkProtocolsResponse*  tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // request parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // response parameters:
    _tds__SetNetworkProtocolsResponse*  tds__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
int __tds__SetNetworkProtocols(
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,	///< Request parameter
    _tds__SetNetworkProtocolsResponse*  tds__SetNetworkProtocolsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // response parameters:
    _tds__GetNetworkDefaultGatewayResponse* tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // request parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // response parameters:
    _tds__GetNetworkDefaultGatewayResponse* tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
int __tds__GetNetworkDefaultGateway(
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,	///< Request parameter
    _tds__GetNetworkDefaultGatewayResponse* tds__GetNetworkDefaultGatewayResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // response parameters:
    _tds__SetNetworkDefaultGatewayResponse* tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // request parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // response parameters:
    _tds__SetNetworkDefaultGatewayResponse* tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
int __tds__SetNetworkDefaultGateway(
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,	///< Request parameter
    _tds__SetNetworkDefaultGatewayResponse* tds__SetNetworkDefaultGatewayResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // response parameters:
    _tds__GetZeroConfigurationResponse* tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // request parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // response parameters:
    _tds__GetZeroConfigurationResponse* tds__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
int __tds__GetZeroConfiguration(
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,	///< Request parameter
    _tds__GetZeroConfigurationResponse* tds__GetZeroConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // response parameters:
    _tds__SetZeroConfigurationResponse* tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // request parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // response parameters:
    _tds__SetZeroConfigurationResponse* tds__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
int __tds__SetZeroConfiguration(
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,	///< Request parameter
    _tds__SetZeroConfigurationResponse* tds__SetZeroConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // response parameters:
    _tds__GetIPAddressFilterResponse*   tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // response parameters:
    _tds__GetIPAddressFilterResponse*   tds__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
int __tds__GetIPAddressFilter(
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,	///< Request parameter
    _tds__GetIPAddressFilterResponse*   tds__GetIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // response parameters:
    _tds__SetIPAddressFilterResponse*   tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // response parameters:
    _tds__SetIPAddressFilterResponse*   tds__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
int __tds__SetIPAddressFilter(
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,	///< Request parameter
    _tds__SetIPAddressFilterResponse*   tds__SetIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // response parameters:
    _tds__AddIPAddressFilterResponse*   tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // response parameters:
    _tds__AddIPAddressFilterResponse*   tds__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
int __tds__AddIPAddressFilter(
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,	///< Request parameter
    _tds__AddIPAddressFilterResponse*   tds__AddIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // response parameters:
    _tds__RemoveIPAddressFilterResponse* tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // response parameters:
    _tds__RemoveIPAddressFilterResponse* tds__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
int __tds__RemoveIPAddressFilter(
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,	///< Request parameter
    _tds__RemoveIPAddressFilterResponse* tds__RemoveIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // response parameters:
    _tds__GetAccessPolicyResponse*      tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // request parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // response parameters:
    _tds__GetAccessPolicyResponse*      tds__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
int __tds__GetAccessPolicy(
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,	///< Request parameter
    _tds__GetAccessPolicyResponse*      tds__GetAccessPolicyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // response parameters:
    _tds__SetAccessPolicyResponse*      tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // request parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // response parameters:
    _tds__SetAccessPolicyResponse*      tds__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
int __tds__SetAccessPolicy(
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,	///< Request parameter
    _tds__SetAccessPolicyResponse*      tds__SetAccessPolicyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__CreateCertificate" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // response parameters:
    _tds__CreateCertificateResponse*    tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // request parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // response parameters:
    _tds__CreateCertificateResponse*    tds__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
int __tds__CreateCertificate(
    _tds__CreateCertificate*            tds__CreateCertificate,	///< Request parameter
    _tds__CreateCertificateResponse*    tds__CreateCertificateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCertificates" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetCertificates"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // response parameters:
    _tds__GetCertificatesResponse*      tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // request parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // response parameters:
    _tds__GetCertificatesResponse*      tds__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
int __tds__GetCertificates(
    _tds__GetCertificates*              tds__GetCertificates,	///< Request parameter
    _tds__GetCertificatesResponse*      tds__GetCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // response parameters:
    _tds__GetCertificatesStatusResponse* tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // request parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // response parameters:
    _tds__GetCertificatesStatusResponse* tds__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
int __tds__GetCertificatesStatus(
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,	///< Request parameter
    _tds__GetCertificatesStatusResponse* tds__GetCertificatesStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // response parameters:
    _tds__SetCertificatesStatusResponse* tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // request parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // response parameters:
    _tds__SetCertificatesStatusResponse* tds__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
int __tds__SetCertificatesStatus(
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,	///< Request parameter
    _tds__SetCertificatesStatusResponse* tds__SetCertificatesStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__DeleteCertificates" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // response parameters:
    _tds__DeleteCertificatesResponse*   tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // request parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // response parameters:
    _tds__DeleteCertificatesResponse*   tds__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
int __tds__DeleteCertificates(
    _tds__DeleteCertificates*           tds__DeleteCertificates,	///< Request parameter
    _tds__DeleteCertificatesResponse*   tds__DeleteCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // response parameters:
    _tds__GetPkcs10RequestResponse*     tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // request parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // response parameters:
    _tds__GetPkcs10RequestResponse*     tds__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
int __tds__GetPkcs10Request(
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,	///< Request parameter
    _tds__GetPkcs10RequestResponse*     tds__GetPkcs10RequestResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__LoadCertificates" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // response parameters:
    _tds__LoadCertificatesResponse*     tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // request parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // response parameters:
    _tds__LoadCertificatesResponse*     tds__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
int __tds__LoadCertificates(
    _tds__LoadCertificates*             tds__LoadCertificates,	///< Request parameter
    _tds__LoadCertificatesResponse*     tds__LoadCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // response parameters:
    _tds__GetClientCertificateModeResponse* tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // request parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // response parameters:
    _tds__GetClientCertificateModeResponse* tds__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
int __tds__GetClientCertificateMode(
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,	///< Request parameter
    _tds__GetClientCertificateModeResponse* tds__GetClientCertificateModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // response parameters:
    _tds__SetClientCertificateModeResponse* tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // request parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // response parameters:
    _tds__SetClientCertificateModeResponse* tds__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
int __tds__SetClientCertificateMode(
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,	///< Request parameter
    _tds__SetClientCertificateModeResponse* tds__SetClientCertificateModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // response parameters:
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // request parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // response parameters:
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
int __tds__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Request parameter
    _tds__GetRelayOutputsResponse*      tds__GetRelayOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // response parameters:
    _tds__SetRelayOutputSettingsResponse* tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // request parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // response parameters:
    _tds__SetRelayOutputSettingsResponse* tds__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
int __tds__SetRelayOutputSettings(
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,	///< Request parameter
    _tds__SetRelayOutputSettingsResponse* tds__SetRelayOutputSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // response parameters:
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // request parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // response parameters:
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
int __tds__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Request parameter
    _tds__SetRelayOutputStateResponse*  tds__SetRelayOutputStateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ImagingBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetImagingSettings" of service binding "ImagingBinding"

/**

Operation details:

Get the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__GetImagingSettings*          timg__GetImagingSettings,
    // response parameters:
    _timg__GetImagingSettingsResponse*  timg__GetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetImagingSettings(
    struct soap *soap,
    // request parameters:
    _timg__GetImagingSettings*          timg__GetImagingSettings,
    // response parameters:
    _timg__GetImagingSettingsResponse*  timg__GetImagingSettingsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	GetImagingSettings document
//gsoap timg service method-encoding:	GetImagingSettings literal
//gsoap timg service method-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings
int __timg__GetImagingSettings(
    _timg__GetImagingSettings*          timg__GetImagingSettings,	///< Request parameter
    _timg__GetImagingSettingsResponse*  timg__GetImagingSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__SetImagingSettings" of service binding "ImagingBinding"

/**

Operation details:

Set the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__SetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__SetImagingSettings*          timg__SetImagingSettings,
    // response parameters:
    _timg__SetImagingSettingsResponse*  timg__SetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__SetImagingSettings(
    struct soap *soap,
    // request parameters:
    _timg__SetImagingSettings*          timg__SetImagingSettings,
    // response parameters:
    _timg__SetImagingSettingsResponse*  timg__SetImagingSettingsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	SetImagingSettings document
//gsoap timg service method-encoding:	SetImagingSettings literal
//gsoap timg service method-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings
int __timg__SetImagingSettings(
    _timg__SetImagingSettings*          timg__SetImagingSettings,	///< Request parameter
    _timg__SetImagingSettingsResponse*  timg__SetImagingSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetOptions                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetOptions" of service binding "ImagingBinding"

/**

Operation details:

Get device specific ranges for Imaging parameters and functions.

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__GetOptions*                  timg__GetOptions,
    // response parameters:
    _timg__GetOptionsResponse*          timg__GetOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetOptions(
    struct soap *soap,
    // request parameters:
    _timg__GetOptions*                  timg__GetOptions,
    // response parameters:
    _timg__GetOptionsResponse*          timg__GetOptionsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	GetOptions document
//gsoap timg service method-encoding:	GetOptions literal
//gsoap timg service method-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptions
int __timg__GetOptions(
    _timg__GetOptions*                  timg__GetOptions,	///< Request parameter
    _timg__GetOptionsResponse*          timg__GetOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Move                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__Move" of service binding "ImagingBinding"

/**

Operation details:

Imaging move operation
			

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/Move"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Move(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__Move*                        timg__Move,
    // response parameters:
    _timg__MoveResponse*                timg__MoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Move(
    struct soap *soap,
    // request parameters:
    _timg__Move*                        timg__Move,
    // response parameters:
    _timg__MoveResponse*                timg__MoveResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	Move document
//gsoap timg service method-encoding:	Move literal
//gsoap timg service method-action:	Move http://www.onvif.org/ver20/imaging/wsdl/Move
int __timg__Move(
    _timg__Move*                        timg__Move,	///< Request parameter
    _timg__MoveResponse*                timg__MoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__Stop" of service binding "ImagingBinding"

/**

Operation details:

Imaging stop operation

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__Stop*                        timg__Stop,
    // response parameters:
    _timg__StopResponse*                timg__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__Stop(
    struct soap *soap,
    // request parameters:
    _timg__Stop*                        timg__Stop,
    // response parameters:
    _timg__StopResponse*                timg__StopResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	Stop document
//gsoap timg service method-encoding:	Stop literal
//gsoap timg service method-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStop
int __timg__Stop(
    _timg__Stop*                        timg__Stop,	///< Request parameter
    _timg__StopResponse*                timg__StopResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetStatus" of service binding "ImagingBinding"

/**

Operation details:

Imaging status operation.

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__GetStatus*                   timg__GetStatus,
    // response parameters:
    _timg__GetStatusResponse*           timg__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetStatus(
    struct soap *soap,
    // request parameters:
    _timg__GetStatus*                   timg__GetStatus,
    // response parameters:
    _timg__GetStatusResponse*           timg__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	GetStatus document
//gsoap timg service method-encoding:	GetStatus literal
//gsoap timg service method-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatus
int __timg__GetStatus(
    _timg__GetStatus*                   timg__GetStatus,	///< Request parameter
    _timg__GetStatusResponse*           timg__GetStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetMoveOptions                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__timg__GetMoveOptions" of service binding "ImagingBinding"

/**

Operation details:

Imaging move operation options

  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___timg__GetMoveOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _timg__GetMoveOptions*              timg__GetMoveOptions,
    // response parameters:
    _timg__GetMoveOptionsResponse*      timg__GetMoveOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __timg__GetMoveOptions(
    struct soap *soap,
    // request parameters:
    _timg__GetMoveOptions*              timg__GetMoveOptions,
    // response parameters:
    _timg__GetMoveOptionsResponse*      timg__GetMoveOptionsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap timg service method-style:	GetMoveOptions document
//gsoap timg service method-encoding:	GetMoveOptions literal
//gsoap timg service method-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions
int __timg__GetMoveOptions(
    _timg__GetMoveOptions*              timg__GetMoveOptions,	///< Request parameter
    _timg__GetMoveOptionsResponse*      timg__GetMoveOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSources" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // response parameters:
    _trt__GetVideoSourcesResponse*      trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // response parameters:
    _trt__GetVideoSourcesResponse*      trt__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
int __trt__GetVideoSources(
    _trt__GetVideoSources*              trt__GetVideoSources,	///< Request parameter
    _trt__GetVideoSourcesResponse*      trt__GetVideoSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSources" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // response parameters:
    _trt__GetAudioSourcesResponse*      trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // response parameters:
    _trt__GetAudioSourcesResponse*      trt__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
int __trt__GetAudioSources(
    _trt__GetAudioSources*              trt__GetAudioSources,	///< Request parameter
    _trt__GetAudioSourcesResponse*      trt__GetAudioSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__CreateProfile" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/CreateProfile"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // response parameters:
    _trt__CreateProfileResponse*        trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // request parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // response parameters:
    _trt__CreateProfileResponse*        trt__CreateProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
int __trt__CreateProfile(
    _trt__CreateProfile*                trt__CreateProfile,	///< Request parameter
    _trt__CreateProfileResponse*        trt__CreateProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetProfile" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdlGetProfile/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // response parameters:
    _trt__GetProfileResponse*           trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // request parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // response parameters:
    _trt__GetProfileResponse*           trt__GetProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
int __trt__GetProfile(
    _trt__GetProfile*                   trt__GetProfile,	///< Request parameter
    _trt__GetProfileResponse*           trt__GetProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetProfiles" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetProfiles"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // response parameters:
    _trt__GetProfilesResponse*          trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // request parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // response parameters:
    _trt__GetProfilesResponse*          trt__GetProfilesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
int __trt__GetProfiles(
    _trt__GetProfiles*                  trt__GetProfiles,	///< Request parameter
    _trt__GetProfilesResponse*          trt__GetProfilesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // response parameters:
    _trt__AddVideoEncoderConfigurationResponse* trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // response parameters:
    _trt__AddVideoEncoderConfigurationResponse* trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
int __trt__AddVideoEncoderConfiguration(
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Request parameter
    _trt__AddVideoEncoderConfigurationResponse* trt__AddVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // response parameters:
    _trt__AddVideoSourceConfigurationResponse* trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // response parameters:
    _trt__AddVideoSourceConfigurationResponse* trt__AddVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
int __trt__AddVideoSourceConfiguration(
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,	///< Request parameter
    _trt__AddVideoSourceConfigurationResponse* trt__AddVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // response parameters:
    _trt__AddAudioEncoderConfigurationResponse* trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // response parameters:
    _trt__AddAudioEncoderConfigurationResponse* trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
int __trt__AddAudioEncoderConfiguration(
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Request parameter
    _trt__AddAudioEncoderConfigurationResponse* trt__AddAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // response parameters:
    _trt__AddAudioSourceConfigurationResponse* trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // response parameters:
    _trt__AddAudioSourceConfigurationResponse* trt__AddAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
int __trt__AddAudioSourceConfiguration(
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,	///< Request parameter
    _trt__AddAudioSourceConfigurationResponse* trt__AddAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // response parameters:
    _trt__AddPTZConfigurationResponse*  trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // response parameters:
    _trt__AddPTZConfigurationResponse*  trt__AddPTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
int __trt__AddPTZConfiguration(
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,	///< Request parameter
    _trt__AddPTZConfigurationResponse*  trt__AddPTZConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // response parameters:
    _trt__AddVideoAnalyticsConfigurationResponse* trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // response parameters:
    _trt__AddVideoAnalyticsConfigurationResponse* trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
int __trt__AddVideoAnalyticsConfiguration(
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Request parameter
    _trt__AddVideoAnalyticsConfigurationResponse* trt__AddVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // response parameters:
    _trt__AddMetadataConfigurationResponse* trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // response parameters:
    _trt__AddMetadataConfigurationResponse* trt__AddMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
int __trt__AddMetadataConfiguration(
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,	///< Request parameter
    _trt__AddMetadataConfigurationResponse* trt__AddMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // response parameters:
    _trt__RemoveVideoEncoderConfigurationResponse* trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // response parameters:
    _trt__RemoveVideoEncoderConfigurationResponse* trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
int __trt__RemoveVideoEncoderConfiguration(
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Request parameter
    _trt__RemoveVideoEncoderConfigurationResponse* trt__RemoveVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // response parameters:
    _trt__RemoveVideoSourceConfigurationResponse* trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // response parameters:
    _trt__RemoveVideoSourceConfigurationResponse* trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
int __trt__RemoveVideoSourceConfiguration(
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Request parameter
    _trt__RemoveVideoSourceConfigurationResponse* trt__RemoveVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // response parameters:
    _trt__RemoveAudioEncoderConfigurationResponse* trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // response parameters:
    _trt__RemoveAudioEncoderConfigurationResponse* trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
int __trt__RemoveAudioEncoderConfiguration(
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Request parameter
    _trt__RemoveAudioEncoderConfigurationResponse* trt__RemoveAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // response parameters:
    _trt__RemoveAudioSourceConfigurationResponse* trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // response parameters:
    _trt__RemoveAudioSourceConfigurationResponse* trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
int __trt__RemoveAudioSourceConfiguration(
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Request parameter
    _trt__RemoveAudioSourceConfigurationResponse* trt__RemoveAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // response parameters:
    _trt__RemovePTZConfigurationResponse* trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // response parameters:
    _trt__RemovePTZConfigurationResponse* trt__RemovePTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
int __trt__RemovePTZConfiguration(
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,	///< Request parameter
    _trt__RemovePTZConfigurationResponse* trt__RemovePTZConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // response parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse* trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // response parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse* trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
int __trt__RemoveVideoAnalyticsConfiguration(
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Request parameter
    _trt__RemoveVideoAnalyticsConfigurationResponse* trt__RemoveVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // response parameters:
    _trt__RemoveMetadataConfigurationResponse* trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // response parameters:
    _trt__RemoveMetadataConfigurationResponse* trt__RemoveMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
int __trt__RemoveMetadataConfiguration(
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,	///< Request parameter
    _trt__RemoveMetadataConfigurationResponse* trt__RemoveMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__DeleteProfile" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // response parameters:
    _trt__DeleteProfileResponse*        trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // request parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // response parameters:
    _trt__DeleteProfileResponse*        trt__DeleteProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
int __trt__DeleteProfile(
    _trt__DeleteProfile*                trt__DeleteProfile,	///< Request parameter
    _trt__DeleteProfileResponse*        trt__DeleteProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // response parameters:
    _trt__GetVideoSourceConfigurationsResponse* trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // response parameters:
    _trt__GetVideoSourceConfigurationsResponse* trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
int __trt__GetVideoSourceConfigurations(
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Request parameter
    _trt__GetVideoSourceConfigurationsResponse* trt__GetVideoSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // response parameters:
    _trt__GetVideoEncoderConfigurationsResponse* trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // response parameters:
    _trt__GetVideoEncoderConfigurationsResponse* trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
int __trt__GetVideoEncoderConfigurations(
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Request parameter
    _trt__GetVideoEncoderConfigurationsResponse* trt__GetVideoEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // response parameters:
    _trt__GetAudioSourceConfigurationsResponse* trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // response parameters:
    _trt__GetAudioSourceConfigurationsResponse* trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
int __trt__GetAudioSourceConfigurations(
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Request parameter
    _trt__GetAudioSourceConfigurationsResponse* trt__GetAudioSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // response parameters:
    _trt__GetAudioEncoderConfigurationsResponse* trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // response parameters:
    _trt__GetAudioEncoderConfigurationsResponse* trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
int __trt__GetAudioEncoderConfigurations(
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Request parameter
    _trt__GetAudioEncoderConfigurationsResponse* trt__GetAudioEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // response parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse* trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // response parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse* trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
int __trt__GetVideoAnalyticsConfigurations(
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Request parameter
    _trt__GetVideoAnalyticsConfigurationsResponse* trt__GetVideoAnalyticsConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // response parameters:
    _trt__GetMetadataConfigurationsResponse* trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // response parameters:
    _trt__GetMetadataConfigurationsResponse* trt__GetMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
int __trt__GetMetadataConfigurations(
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,	///< Request parameter
    _trt__GetMetadataConfigurationsResponse* trt__GetMetadataConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // response parameters:
    _trt__GetVideoSourceConfigurationResponse* trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // response parameters:
    _trt__GetVideoSourceConfigurationResponse* trt__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
int __trt__GetVideoSourceConfiguration(
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,	///< Request parameter
    _trt__GetVideoSourceConfigurationResponse* trt__GetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // response parameters:
    _trt__GetVideoEncoderConfigurationResponse* trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // response parameters:
    _trt__GetVideoEncoderConfigurationResponse* trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
int __trt__GetVideoEncoderConfiguration(
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Request parameter
    _trt__GetVideoEncoderConfigurationResponse* trt__GetVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // response parameters:
    _trt__GetAudioSourceConfigurationResponse* trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // response parameters:
    _trt__GetAudioSourceConfigurationResponse* trt__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
int __trt__GetAudioSourceConfiguration(
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,	///< Request parameter
    _trt__GetAudioSourceConfigurationResponse* trt__GetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // response parameters:
    _trt__GetAudioEncoderConfigurationResponse* trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // response parameters:
    _trt__GetAudioEncoderConfigurationResponse* trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
int __trt__GetAudioEncoderConfiguration(
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Request parameter
    _trt__GetAudioEncoderConfigurationResponse* trt__GetAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // response parameters:
    _trt__GetVideoAnalyticsConfigurationResponse* trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // response parameters:
    _trt__GetVideoAnalyticsConfigurationResponse* trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
int __trt__GetVideoAnalyticsConfiguration(
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Request parameter
    _trt__GetVideoAnalyticsConfigurationResponse* trt__GetVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // response parameters:
    _trt__GetMetadataConfigurationResponse* trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // response parameters:
    _trt__GetMetadataConfigurationResponse* trt__GetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
int __trt__GetMetadataConfiguration(
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,	///< Request parameter
    _trt__GetMetadataConfigurationResponse* trt__GetMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // response parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse* trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // response parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse* trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
int __trt__GetCompatibleVideoEncoderConfigurations(
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Request parameter
    _trt__GetCompatibleVideoEncoderConfigurationsResponse* trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // response parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse* trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // response parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse* trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
int __trt__GetCompatibleVideoSourceConfigurations(
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Request parameter
    _trt__GetCompatibleVideoSourceConfigurationsResponse* trt__GetCompatibleVideoSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // response parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse* trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // response parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse* trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
int __trt__GetCompatibleAudioEncoderConfigurations(
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Request parameter
    _trt__GetCompatibleAudioEncoderConfigurationsResponse* trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // response parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse* trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // response parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse* trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
int __trt__GetCompatibleAudioSourceConfigurations(
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Request parameter
    _trt__GetCompatibleAudioSourceConfigurationsResponse* trt__GetCompatibleAudioSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // response parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // response parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Request parameter
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // response parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse* trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // request parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // response parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse* trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
int __trt__GetCompatibleMetadataConfigurations(
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Request parameter
    _trt__GetCompatibleMetadataConfigurationsResponse* trt__GetCompatibleMetadataConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // response parameters:
    _trt__SetVideoSourceConfigurationResponse* trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // response parameters:
    _trt__SetVideoSourceConfigurationResponse* trt__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
int __trt__SetVideoSourceConfiguration(
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,	///< Request parameter
    _trt__SetVideoSourceConfigurationResponse* trt__SetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // response parameters:
    _trt__SetVideoEncoderConfigurationResponse* trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // response parameters:
    _trt__SetVideoEncoderConfigurationResponse* trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
int __trt__SetVideoEncoderConfiguration(
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Request parameter
    _trt__SetVideoEncoderConfigurationResponse* trt__SetVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // response parameters:
    _trt__SetAudioSourceConfigurationResponse* trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // response parameters:
    _trt__SetAudioSourceConfigurationResponse* trt__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
int __trt__SetAudioSourceConfiguration(
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,	///< Request parameter
    _trt__SetAudioSourceConfigurationResponse* trt__SetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // response parameters:
    _trt__SetAudioEncoderConfigurationResponse* trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // response parameters:
    _trt__SetAudioEncoderConfigurationResponse* trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
int __trt__SetAudioEncoderConfiguration(
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Request parameter
    _trt__SetAudioEncoderConfigurationResponse* trt__SetAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // response parameters:
    _trt__SetVideoAnalyticsConfigurationResponse* trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // response parameters:
    _trt__SetVideoAnalyticsConfigurationResponse* trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
int __trt__SetVideoAnalyticsConfiguration(
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Request parameter
    _trt__SetVideoAnalyticsConfigurationResponse* trt__SetVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // response parameters:
    _trt__SetMetadataConfigurationResponse* trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // response parameters:
    _trt__SetMetadataConfigurationResponse* trt__SetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
int __trt__SetMetadataConfiguration(
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,	///< Request parameter
    _trt__SetMetadataConfigurationResponse* trt__SetMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // response parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse* trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // response parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse* trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
int __trt__GetVideoSourceConfigurationOptions(
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Request parameter
    _trt__GetVideoSourceConfigurationOptionsResponse* trt__GetVideoSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // response parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse* trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // response parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse* trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
int __trt__GetVideoEncoderConfigurationOptions(
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Request parameter
    _trt__GetVideoEncoderConfigurationOptionsResponse* trt__GetVideoEncoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // response parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse* trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // response parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse* trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
int __trt__GetAudioSourceConfigurationOptions(
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Request parameter
    _trt__GetAudioSourceConfigurationOptionsResponse* trt__GetAudioSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // response parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse* trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // response parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse* trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
int __trt__GetAudioEncoderConfigurationOptions(
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Request parameter
    _trt__GetAudioEncoderConfigurationOptionsResponse* trt__GetAudioEncoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // response parameters:
    _trt__GetMetadataConfigurationOptionsResponse* trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // response parameters:
    _trt__GetMetadataConfigurationOptionsResponse* trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
int __trt__GetMetadataConfigurationOptions(
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Request parameter
    _trt__GetMetadataConfigurationOptionsResponse* trt__GetMetadataConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/ GetGuaranteedNumberOfVideoEncoderInstances"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // response parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // request parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // response parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/ GetGuaranteedNumberOfVideoEncoderInstances
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Request parameter
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetStreamUri" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // response parameters:
    _trt__GetStreamUriResponse*         trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // request parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // response parameters:
    _trt__GetStreamUriResponse*         trt__GetStreamUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
int __trt__GetStreamUri(
    _trt__GetStreamUri*                 trt__GetStreamUri,	///< Request parameter
    _trt__GetStreamUriResponse*         trt__GetStreamUriResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // response parameters:
    _trt__StartMulticastStreamingResponse* trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // request parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // response parameters:
    _trt__StartMulticastStreamingResponse* trt__StartMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
int __trt__StartMulticastStreaming(
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,	///< Request parameter
    _trt__StartMulticastStreamingResponse* trt__StartMulticastStreamingResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // response parameters:
    _trt__StopMulticastStreamingResponse* trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // request parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // response parameters:
    _trt__StopMulticastStreamingResponse* trt__StopMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
int __trt__StopMulticastStreaming(
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,	///< Request parameter
    _trt__StopMulticastStreamingResponse* trt__StopMulticastStreamingResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // response parameters:
    _trt__SetSynchronizationPointResponse* trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // request parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // response parameters:
    _trt__SetSynchronizationPointResponse* trt__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
int __trt__SetSynchronizationPoint(
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,	///< Request parameter
    _trt__SetSynchronizationPointResponse* trt__SetSynchronizationPointResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__trt__GetSnapshotUri" of service binding "MediaBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // response parameters:
    _trt__GetSnapshotUriResponse*       trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // request parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // response parameters:
    _trt__GetSnapshotUriResponse*       trt__GetSnapshotUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
int __trt__GetSnapshotUri(
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,	///< Request parameter
    _trt__GetSnapshotUriResponse*       trt__GetSnapshotUriResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section tan Top-level root elements of schema "http://www.onvif.org/ver20/analytics/wsdl"

  - <tan:GetSupportedRules> @ref _tan__GetSupportedRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRules(struct soap*, _tan__GetSupportedRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRules(struct soap*, _tan__GetSupportedRules*);
    @endcode

  - <tan:GetSupportedRulesResponse> @ref _tan__GetSupportedRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRulesResponse(struct soap*, _tan__GetSupportedRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRulesResponse(struct soap*, _tan__GetSupportedRulesResponse*);
    @endcode

  - <tan:CreateRules> @ref _tan__CreateRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRules(struct soap*, _tan__CreateRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRules(struct soap*, _tan__CreateRules*);
    @endcode

  - <tan:CreateRulesResponse> @ref _tan__CreateRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRulesResponse(struct soap*, _tan__CreateRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRulesResponse(struct soap*, _tan__CreateRulesResponse*);
    @endcode

  - <tan:DeleteRules> @ref _tan__DeleteRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRules(struct soap*, _tan__DeleteRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRules(struct soap*, _tan__DeleteRules*);
    @endcode

  - <tan:DeleteRulesResponse> @ref _tan__DeleteRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRulesResponse(struct soap*, _tan__DeleteRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRulesResponse(struct soap*, _tan__DeleteRulesResponse*);
    @endcode

  - <tan:ModifyRules> @ref _tan__ModifyRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRules(struct soap*, _tan__ModifyRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRules(struct soap*, _tan__ModifyRules*);
    @endcode

  - <tan:ModifyRulesResponse> @ref _tan__ModifyRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRulesResponse(struct soap*, _tan__ModifyRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRulesResponse(struct soap*, _tan__ModifyRulesResponse*);
    @endcode

  - <tan:GetRules> @ref _tan__GetRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRules(struct soap*, _tan__GetRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRules(struct soap*, _tan__GetRules*);
    @endcode

  - <tan:GetRulesResponse> @ref _tan__GetRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRulesResponse(struct soap*, _tan__GetRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRulesResponse(struct soap*, _tan__GetRulesResponse*);
    @endcode

  - <tan:GetSupportedAnalyticsModules> @ref _tan__GetSupportedAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModules(struct soap*, _tan__GetSupportedAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModules(struct soap*, _tan__GetSupportedAnalyticsModules*);
    @endcode

  - <tan:GetSupportedAnalyticsModulesResponse> @ref _tan__GetSupportedAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModulesResponse(struct soap*, _tan__GetSupportedAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModulesResponse(struct soap*, _tan__GetSupportedAnalyticsModulesResponse*);
    @endcode

  - <tan:CreateAnalyticsModules> @ref _tan__CreateAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModules(struct soap*, _tan__CreateAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModules(struct soap*, _tan__CreateAnalyticsModules*);
    @endcode

  - <tan:CreateAnalyticsModulesResponse> @ref _tan__CreateAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModulesResponse(struct soap*, _tan__CreateAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModulesResponse(struct soap*, _tan__CreateAnalyticsModulesResponse*);
    @endcode

  - <tan:DeleteAnalyticsModules> @ref _tan__DeleteAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModules(struct soap*, _tan__DeleteAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModules(struct soap*, _tan__DeleteAnalyticsModules*);
    @endcode

  - <tan:DeleteAnalyticsModulesResponse> @ref _tan__DeleteAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModulesResponse(struct soap*, _tan__DeleteAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModulesResponse(struct soap*, _tan__DeleteAnalyticsModulesResponse*);
    @endcode

  - <tan:ModifyAnalyticsModules> @ref _tan__ModifyAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModules(struct soap*, _tan__ModifyAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModules(struct soap*, _tan__ModifyAnalyticsModules*);
    @endcode

  - <tan:ModifyAnalyticsModulesResponse> @ref _tan__ModifyAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModulesResponse(struct soap*, _tan__ModifyAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModulesResponse(struct soap*, _tan__ModifyAnalyticsModulesResponse*);
    @endcode

  - <tan:GetAnalyticsModules> @ref _tan__GetAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModules(struct soap*, _tan__GetAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModules(struct soap*, _tan__GetAnalyticsModules*);
    @endcode

  - <tan:GetAnalyticsModulesResponse> @ref _tan__GetAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModulesResponse(struct soap*, _tan__GetAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModulesResponse(struct soap*, _tan__GetAnalyticsModulesResponse*);
    @endcode

@section onv Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <onv:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:Message> @ref _onv__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onv__Message(struct soap*, _onv__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__onv__Message(struct soap*, _onv__Message*);
    @endcode

  - <onv:Polygon> (use wsdl2h option -g to auto-generate)

  - <onv:Polyline> (use wsdl2h option -g to auto-generate)

  - <onv:MetadataStream> (use wsdl2h option -g to auto-generate)

@section wsnb Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnb:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <wsnb:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <wsnb:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <wsnb:NotificationProducerRP> @ref _wsnb__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__NotificationProducerRP(struct soap*, _wsnb__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__NotificationProducerRP(struct soap*, _wsnb__NotificationProducerRP*);
    @endcode

  - <wsnb:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <wsnb:Filter> (use wsdl2h option -g to auto-generate)

  - <wsnb:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <wsnb:CreationTime> (use wsdl2h option -g to auto-generate)

  - <wsnb:SubscriptionManagerRP> @ref _wsnb__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__SubscriptionManagerRP(struct soap*, _wsnb__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__SubscriptionManagerRP(struct soap*, _wsnb__SubscriptionManagerRP*);
    @endcode

  - <wsnb:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <wsnb:Topic> (use wsdl2h option -g to auto-generate)

  - <wsnb:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <wsnb:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <wsnb:Notify> @ref _wsnb__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Notify(struct soap*, _wsnb__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Notify(struct soap*, _wsnb__Notify*);
    @endcode

  - <wsnb:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <wsnb:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <wsnb:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <wsnb:MessageContent> (use wsdl2h option -g to auto-generate)

  - <wsnb:UseRaw> @ref _wsnb__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__UseRaw(struct soap*, _wsnb__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__UseRaw(struct soap*, _wsnb__UseRaw*);
    @endcode

  - <wsnb:Subscribe> @ref _wsnb__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Subscribe(struct soap*, _wsnb__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Subscribe(struct soap*, _wsnb__Subscribe*);
    @endcode

  - <wsnb:SubscribeResponse> @ref _wsnb__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__SubscribeResponse(struct soap*, _wsnb__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__SubscribeResponse(struct soap*, _wsnb__SubscribeResponse*);
    @endcode

  - <wsnb:GetCurrentMessage> @ref _wsnb__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetCurrentMessage(struct soap*, _wsnb__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetCurrentMessage(struct soap*, _wsnb__GetCurrentMessage*);
    @endcode

  - <wsnb:GetCurrentMessageResponse> @ref _wsnb__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetCurrentMessageResponse(struct soap*, _wsnb__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetCurrentMessageResponse(struct soap*, _wsnb__GetCurrentMessageResponse*);
    @endcode

  - <wsnb:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:GetMessages> @ref _wsnb__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetMessages(struct soap*, _wsnb__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetMessages(struct soap*, _wsnb__GetMessages*);
    @endcode

  - <wsnb:GetMessagesResponse> @ref _wsnb__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetMessagesResponse(struct soap*, _wsnb__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetMessagesResponse(struct soap*, _wsnb__GetMessagesResponse*);
    @endcode

  - <wsnb:DestroyPullPoint> @ref _wsnb__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__DestroyPullPoint(struct soap*, _wsnb__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__DestroyPullPoint(struct soap*, _wsnb__DestroyPullPoint*);
    @endcode

  - <wsnb:DestroyPullPointResponse> @ref _wsnb__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__DestroyPullPointResponse(struct soap*, _wsnb__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__DestroyPullPointResponse(struct soap*, _wsnb__DestroyPullPointResponse*);
    @endcode

  - <wsnb:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:CreatePullPoint> @ref _wsnb__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__CreatePullPoint(struct soap*, _wsnb__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__CreatePullPoint(struct soap*, _wsnb__CreatePullPoint*);
    @endcode

  - <wsnb:CreatePullPointResponse> @ref _wsnb__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__CreatePullPointResponse(struct soap*, _wsnb__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__CreatePullPointResponse(struct soap*, _wsnb__CreatePullPointResponse*);
    @endcode

  - <wsnb:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:Renew> @ref _wsnb__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Renew(struct soap*, _wsnb__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Renew(struct soap*, _wsnb__Renew*);
    @endcode

  - <wsnb:RenewResponse> @ref _wsnb__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__RenewResponse(struct soap*, _wsnb__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__RenewResponse(struct soap*, _wsnb__RenewResponse*);
    @endcode

  - <wsnb:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:Unsubscribe> @ref _wsnb__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Unsubscribe(struct soap*, _wsnb__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Unsubscribe(struct soap*, _wsnb__Unsubscribe*);
    @endcode

  - <wsnb:UnsubscribeResponse> @ref _wsnb__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__UnsubscribeResponse(struct soap*, _wsnb__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__UnsubscribeResponse(struct soap*, _wsnb__UnsubscribeResponse*);
    @endcode

  - <wsnb:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:PauseSubscription> @ref _wsnb__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__PauseSubscription(struct soap*, _wsnb__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__PauseSubscription(struct soap*, _wsnb__PauseSubscription*);
    @endcode

  - <wsnb:PauseSubscriptionResponse> @ref _wsnb__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__PauseSubscriptionResponse(struct soap*, _wsnb__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__PauseSubscriptionResponse(struct soap*, _wsnb__PauseSubscriptionResponse*);
    @endcode

  - <wsnb:ResumeSubscription> @ref _wsnb__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__ResumeSubscription(struct soap*, _wsnb__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__ResumeSubscription(struct soap*, _wsnb__ResumeSubscription*);
    @endcode

  - <wsnb:ResumeSubscriptionResponse> @ref _wsnb__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__ResumeSubscriptionResponse(struct soap*, _wsnb__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__ResumeSubscriptionResponse(struct soap*, _wsnb__ResumeSubscriptionResponse*);
    @endcode

  - <wsnb:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate)

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    @endcode

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    @endcode

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    @endcode

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    @endcode

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    @endcode

  - <tds:RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    @endcode

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    @endcode

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    @endcode

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    @endcode

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    @endcode

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <tds:GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    @endcode

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    @endcode

  - <tds:GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*);
    @endcode

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    @endcode

  - <tds:SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*);
    @endcode

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    @endcode

  - <tds:AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*);
    @endcode

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    @endcode

  - <tds:RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    @endcode

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    @endcode

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    @endcode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    @endcode

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    @endcode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    @endcode

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    @endcode

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    @endcode

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    @endcode

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    @endcode

  - <tds:GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*);
    @endcode

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    @endcode

  - <tds:CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    @endcode

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    @endcode

  - <tds:DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    @endcode

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    @endcode

  - <tds:SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, _tds__SetUser*);
    @endcode

  - <tds:SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    @endcode

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    @endcode

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    @endcode

  - <tds:GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*);
    @endcode

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    @endcode

  - <tds:SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*);
    @endcode

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    @endcode

  - <tds:GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*);
    @endcode

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    @endcode

  - <tds:SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*);
    @endcode

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    @endcode

  - <tds:GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*);
    @endcode

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    @endcode

  - <tds:SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*);
    @endcode

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    @endcode

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    @endcode

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    @endcode

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    @endcode

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    @endcode

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    @endcode

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    @endcode

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    @endcode

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    @endcode

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    @endcode

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    @endcode

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    @endcode

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    @endcode

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    @endcode

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    @endcode

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    @endcode

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    @endcode

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    @endcode

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    @endcode

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    @endcode

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    @endcode

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    @endcode

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    @endcode

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    @endcode

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    @endcode

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    @endcode

  - <tds:CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    @endcode

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    @endcode

  - <tds:GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    @endcode

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    @endcode

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    @endcode

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    @endcode

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    @endcode

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    @endcode

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    @endcode

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    @endcode

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    @endcode

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    @endcode

  - <tds:LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    @endcode

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    @endcode

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    @endcode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    @endcode

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    @endcode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    @endcode

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    @endcode

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    @endcode

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    @endcode

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    @endcode

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    @endcode

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    @endcode

  - <trt:GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    @endcode

  - <trt:GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    @endcode

  - <trt:GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    @endcode

  - <trt:CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    @endcode

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    @endcode

  - <trt:GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, _trt__GetProfile*);
    @endcode

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    @endcode

  - <trt:GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    @endcode

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    @endcode

  - <trt:AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <trt:AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <trt:RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    @endcode

  - <trt:AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <trt:RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <trt:AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <trt:AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <trt:RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    @endcode

  - <trt:AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <trt:RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <trt:AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    @endcode

  - <trt:AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    @endcode

  - <trt:RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    @endcode

  - <trt:RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <trt:AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <trt:AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    @endcode

  - <trt:AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <trt:RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    @endcode

  - <trt:RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <trt:DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    @endcode

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <trt:GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    @endcode

  - <trt:GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <trt:GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    @endcode

  - <trt:GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    @endcode

  - <trt:GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    @endcode

  - <trt:GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <trt:GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    @endcode

  - <trt:GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <trt:GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    @endcode

  - <trt:GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <trt:SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <trt:SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    @endcode

  - <trt:SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <trt:SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    @endcode

  - <trt:SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    @endcode

  - <trt:SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <trt:GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <trt:GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    @endcode

  - <trt:GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    @endcode

  - <trt:StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    @endcode

  - <trt:StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    @endcode

  - <trt:StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    @endcode

  - <trt:StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    @endcode

  - <trt:SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    @endcode

  - <trt:SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    @endcode

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    @endcode

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    @endcode

@section timg Top-level root elements of schema "http://www.onvif.org/ver20/imaging/wsdl"

  - <timg:GetImagingSettings> @ref _timg__GetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettings(struct soap*, _timg__GetImagingSettings*);
    @endcode

  - <timg:GetImagingSettingsResponse> @ref _timg__GetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetImagingSettingsResponse(struct soap*, _timg__GetImagingSettingsResponse*);
    @endcode

  - <timg:SetImagingSettings> @ref _timg__SetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettings(struct soap*, _timg__SetImagingSettings*);
    @endcode

  - <timg:SetImagingSettingsResponse> @ref _timg__SetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__SetImagingSettingsResponse(struct soap*, _timg__SetImagingSettingsResponse*);
    @endcode

  - <timg:GetOptions> @ref _timg__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptions(struct soap*, _timg__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptions(struct soap*, _timg__GetOptions*);
    @endcode

  - <timg:GetOptionsResponse> @ref _timg__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetOptionsResponse(struct soap*, _timg__GetOptionsResponse*);
    @endcode

  - <timg:Move> @ref _timg__Move
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Move(struct soap*, _timg__Move*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Move(struct soap*, _timg__Move*);
    @endcode

  - <timg:MoveResponse> @ref _timg__MoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__MoveResponse(struct soap*, _timg__MoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__MoveResponse(struct soap*, _timg__MoveResponse*);
    @endcode

  - <timg:GetMoveOptions> @ref _timg__GetMoveOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptions(struct soap*, _timg__GetMoveOptions*);
    @endcode

  - <timg:GetMoveOptionsResponse> @ref _timg__GetMoveOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetMoveOptionsResponse(struct soap*, _timg__GetMoveOptionsResponse*);
    @endcode

  - <timg:Stop> @ref _timg__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__Stop(struct soap*, _timg__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__Stop(struct soap*, _timg__Stop*);
    @endcode

  - <timg:StopResponse> @ref _timg__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__StopResponse(struct soap*, _timg__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__StopResponse(struct soap*, _timg__StopResponse*);
    @endcode

  - <timg:GetStatus> @ref _timg__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatus(struct soap*, _timg__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatus(struct soap*, _timg__GetStatus*);
    @endcode

  - <timg:GetStatusResponse> @ref _timg__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__timg__GetStatusResponse(struct soap*, _timg__GetStatusResponse*);
    @endcode

*/

/* End of onvif.h */
