# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libonvif/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/streamingmediacenter
pkgincludedir = $(includedir)/streamingmediacenter
pkglibdir = $(libdir)/streamingmediacenter
pkglibexecdir = $(libexecdir)/streamingmediacenter
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = libonvif
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
	$(top_srcdir)/m4/autotroll.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libonvifdevicemgmt_la_LIBADD =
am_libonvifdevicemgmt_la_OBJECTS = DeviceC.lo \
	DeviceDeviceBindingProxy.lo Device-duration.lo \
	Device-wsseapi.lo Device-wsaapi.lo threads.lo smdevp.lo \
	OnvifC.lo
libonvifdevicemgmt_la_OBJECTS = $(am_libonvifdevicemgmt_la_OBJECTS)
libonvifdevicemgmt_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libonvifdevicemgmt_la_LDFLAGS) $(LDFLAGS) -o $@
libonvifhello_la_DEPENDENCIES =
am_libonvifhello_la_OBJECTS = RemoteC.lo Remotedpws_discoveryProxy.lo
libonvifhello_la_OBJECTS = $(am_libonvifhello_la_OBJECTS)
libonvifhello_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libonvifhello_la_LDFLAGS) $(LDFLAGS) -o $@
libonvifmedia_la_DEPENDENCIES =
am_libonvifmedia_la_OBJECTS = MediaC.lo MediaMediaBindingProxy.lo
libonvifmedia_la_OBJECTS = $(am_libonvifmedia_la_OBJECTS)
libonvifremotediscovery_la_DEPENDENCIES =
am_libonvifremotediscovery_la_OBJECTS = RemoteC.lo \
	Remotedpws_discoveryProxy.lo Remotedpws_discoveryService.lo
libonvifremotediscovery_la_OBJECTS =  \
	$(am_libonvifremotediscovery_la_OBJECTS)
libonvifremotediscovery_la_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(libonvifremotediscovery_la_LDFLAGS) $(LDFLAGS) -o $@
libonvifsoap_la_LIBADD =
am_libonvifsoap_la_OBJECTS = stdsoap2.lo dom.lo envC.lo
libonvifsoap_la_OBJECTS = $(am_libonvifsoap_la_OBJECTS)
libonvifsoap_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libonvifsoap_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libonvifdevicemgmt_la_SOURCES) $(libonvifhello_la_SOURCES) \
	$(libonvifmedia_la_SOURCES) \
	$(libonvifremotediscovery_la_SOURCES) \
	$(libonvifsoap_la_SOURCES)
DIST_SOURCES = $(libonvifdevicemgmt_la_SOURCES) \
	$(libonvifhello_la_SOURCES) $(libonvifmedia_la_SOURCES) \
	$(libonvifremotediscovery_la_SOURCES) \
	$(libonvifsoap_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/missing --run autoconf
AUTOHEADER = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/missing --run autoheader
AUTOMAKE = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_LDFLAGS = -L/usr/lib
BOOST_SYSTEM_LIB = -lboost_system-mt
BOOST_THREAD_LIB = -lboost_thread-mt
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = doxygen.cfg
DX_DOCDIR = doc
DX_DOT = /usr/bin/dot
DX_DOXYGEN = /usr/bin/doxygen
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='StreamingMediaCenter' DOCDIR='doc' VERSION='1.0' PERL_PATH='/usr/bin/perl' HAVE_DOT='YES' DOT_PATH='/usr/bin' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='YES' GENERATE_LATEX='NO'
DX_FLAG_DX_CURRENT_FEATURE = 
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 1
DX_FLAG_dot = 1
DX_FLAG_html = 1
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = StreamingMediaCenter
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MOC = /usr/bin/moc
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = streamingmediacenter
PACKAGE_BUGREPORT = mario.giustiniani@posix-shell.com
PACKAGE_NAME = StreamingMediaCenter
PACKAGE_STRING = StreamingMediaCenter 1.0
PACKAGE_TARNAME = streamingmediacenter
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
QMAKE = /usr/bin/qmake
QT_CFLAGS = -pipe -O2 -Wall -W -D_REENTRANT $(QT_DEFINES)
QT_CPPFLAGS = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
QT_CXXFLAGS = -pipe -O2 -Wall -W -D_REENTRANT $(QT_DEFINES)
QT_DEFINES = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
QT_INCPATH = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
QT_LDFLAGS = -Wl,-O1
QT_LFLAGS = -Wl,-O1
QT_LIBS = -L/usr/lib -lQtGui -lQtCore -lpthread 
QT_PATH = /usr/bin
QT_VERSION_MAJOR = 4
RANLIB = ranlib
RCC = /usr/bin/rcc
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
UIC = /usr/bin/uic
VERSION = 1.0
abs_builddir = /home/paperboy/Repository/Progetti/SMC/TND/libonvif
abs_srcdir = /home/paperboy/Repository/Progetti/SMC/TND/libonvif
abs_top_builddir = /home/paperboy/Repository/Progetti/SMC/TND
abs_top_srcdir = /home/paperboy/Repository/Progetti/SMC/TND
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/paperboy/Repository/Progetti/SMC/TND/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
WSDL2H_INCLUDE = $(top_srcdir)/common/import:$(top_srcdir)/common:$(top_srcdir)/common/WS
WSDL2H = /usr/local/bin/wsdl2h
WSDL2H_OPT = 
#SOAP = /usr/local/bin/soapcpp2
ONVIF_WSDL = \
	analytics.wsdl \
	devicemgmt.wsdl \
	media.wsdl \
	imaging.wsdl

ONVIF_TYPEMAP = typemap.dat
ONVIF_OPT = -i  -C  -x -pOnvif
ONVIF_H = onvif.h

#%-duration.cpp: 
#	-sed -e s@"soapH.h"@"$(@:%-duration.cpp=%)H.h"@  $(top_srcdir)/common/custom/duration.c > $(@)
#%-wsseapi.cpp: 
#	-cp $(COMMON)/plugin/wsseapi.cpp $(@)
#	-cp $(COMMON)/plugin/smdevp.h .
#	-cp $(COMMON)/plugin/threads.h .
#	-sed -e s@"soapH.h"@"$(@:%-wsseapi.cpp=%)H.h"@  $(top_srcdir)/common/plugin/wsseapi.h > wsseapi.h
#%-wsaapi.cpp: 
#	-cp $(COMMON)/plugin/wsaapi.c $(@)
#	-sed -e s@"soapH.h"@"$(@:%-wsaapi.cpp=%)H.h"@  $(top_srcdir)/common/plugin/wsaapi.h > wsaapi.h
#
#
SOAPINCLUDE = /usr/local/share/gsoap:/usr/local/share/gsoap/import:/usr/local/share/gsoap/custom
ONVIF_OPTIONS = -i  -C  -x
SOAP = /usr/local/bin/soapcpp2
LIBONVIF = $(top_srcdir)/libonvif
wsdl = $(top_srcdir)/libonvif
soapdir = $(top_srcdir)/libgsoap
remotedir = $(wsdl)/Remote
devicedir = $(wsdl)/Device
mediadir = $(wsdl)/Media
imagingdir = $(wsdl)/Imaging
analyticsdir = $(wsdl)/Analytics
COMMON = $(top_srcdir)/common
lib_LTLIBRARIES = libonvifsoap.la \
	libonvifremotediscovery.la \
	libonvifhello.la \
	libonvifdevicemgmt.la \
	libonvifmedia.la


#	
#	
#	libonvifimaging.la \
#	libonvifanalytics.la 
#
BUILT_SOURCES = \
	OnvifC.cpp \
	Onvif-duration.cpp \
	Onvif-wsseapi.cpp \
	Onvif-wsaapi.cpp \
	Device-duration.cpp

#	Remote-wsaapi.cpp \
#	Remote-duration.cpp 

#	Device-duration.cpp \
#	Device-wsseapi.cpp \
#	Device-wsaapi.cpp # Onvif Media
CLEANFILES = OnvifC.cpp \
	Onvif-duration.cpp \
	Onvif-wsseapi.cpp \
	Onvif-wsaapi.cpp 


#
#%-duration.cpp: Makefile
#	-sed -e s@"OnvifH.h"@"$(@:%-duration.cpp=%)H.h"@  $(top_srcdir)/libgsoap/duration.cpp > $(@:%-duration.cpp=%)/$(@)
#	
#%-wsseapi.cpp: Makefileconst char *id
#	-cp $(COMMON)/plugin/wsseapi.cpp $(@:%-wsseapi.cpp=%)/$(@)
#	-cp $(COMMON)/plugin/smdevp.h $(@:%-wsseapi.cpp=%)
#	-cp $(COMMON)/plugin/threads.h $(@:%-wsseapi.cpp=%)
#	-sed -e s@"soapH.h"@"$(@:%-wsseapi.cpp=%)H.h"@  $(top_srcdir)/common/plugin/wsseapi.h > $(@:%-wsseapi.cpp=%)/wsseapi.h
#%-wsaapi.cpp: Makefile
#	-cp $(COMMON)/plugin/wsaapi.c $(@:%-wsaapi.cpp=%)/$(@)
#	-sed -e s@"soapH.h"@"$(@:%-wsaapi.cpp=%)H.h"@  $(top_srcdir)/common/plugin/wsaapi.h > $(@:%-wsaapi.cpp=%)/wsaapi.h

#smdevp.h and smdevp.c 	Signature and message digest support
#threads.h and threads.c 	Multithreading and locking support 
# LibGsoap
AM_CPPFLAGS = -UHAVE_CONFIG_H -DWITH_NONAMESPACES -DWITH_DOM -DWITH_OPENSSL 
AM_CFLAGS = -UHAVE_CONFIG_H -DWITH_NONAMESPACES -DWITH_DOM -DWITH_OPENSSL  
libonvifsoap_la_SOURCES = $(top_srcdir)/libgsoap/stdsoap2.cpp \
	$(top_srcdir)/libgsoap/dom.cpp \
	envC.cpp

libonvifsoap_la_LDFLAGS = -lssl -lcrypto
libonvifremotediscovery_la_SOURCES = \
	$(remotedir)/RemoteC.cpp \
	$(remotedir)/Remotedpws_discoveryProxy.cpp \
	$(remotedir)/Remotedpws_discoveryService.cpp 

libonvifremotediscovery_la_LDFLAGS = -I$(remotedir) -lonvifsoap
libonvifremotediscovery_la_LIBADD = -lssl
libonvifhello_la_SOURCES = \
	$(remotedir)/RemoteC.cpp \
	$(remotedir)/Remotedpws_discoveryProxy.cpp 

libonvifhello_la_LDFLAGS = -I$(remotedir) -lonvifsoap
libonvifhello_la_LIBADD = -lssl

# Onvif Device Manager #	$(devicedir)/wsaapi.cpp 
libonvifdevicemgmt_la_SOURCES = \
	$(devicedir)/DeviceC.cpp \
	$(devicedir)/DeviceDeviceBindingProxy.cpp \
	$(devicedir)/Device-duration.cpp \
	$(devicedir)/Device-wsseapi.cpp \
	$(devicedir)/Device-wsaapi.cpp \
	$(top_srcdir)/libgsoap/threads.c \
	$(top_srcdir)/libgsoap/smdevp.cpp \
	OnvifC.cpp 

libonvifdevicemgmt_la_LDFLAGS = -lonvifsoap -lssl -I$(devicedir) 

# Onvif Media
libonvifmedia_la_SOURCES = \
	$(mediadir)/MediaC.cpp \
	$(mediadir)/MediaMediaBindingProxy.cpp \
libonvifmedia_la_LDFLAGS = -export-dynamic -lonvifsoap -lssl -I$(mediadir)

libonvifmedia_la_LIBADD = -lonvifsoap
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libonvif/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libonvif/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libonvifdevicemgmt.la: $(libonvifdevicemgmt_la_OBJECTS) $(libonvifdevicemgmt_la_DEPENDENCIES) 
	$(libonvifdevicemgmt_la_LINK) -rpath $(libdir) $(libonvifdevicemgmt_la_OBJECTS) $(libonvifdevicemgmt_la_LIBADD) $(LIBS)
libonvifhello.la: $(libonvifhello_la_OBJECTS) $(libonvifhello_la_DEPENDENCIES) 
	$(libonvifhello_la_LINK) -rpath $(libdir) $(libonvifhello_la_OBJECTS) $(libonvifhello_la_LIBADD) $(LIBS)
libonvifmedia.la: $(libonvifmedia_la_OBJECTS) $(libonvifmedia_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libonvifmedia_la_OBJECTS) $(libonvifmedia_la_LIBADD) $(LIBS)
libonvifremotediscovery.la: $(libonvifremotediscovery_la_OBJECTS) $(libonvifremotediscovery_la_DEPENDENCIES) 
	$(libonvifremotediscovery_la_LINK) -rpath $(libdir) $(libonvifremotediscovery_la_OBJECTS) $(libonvifremotediscovery_la_LIBADD) $(LIBS)
libonvifsoap.la: $(libonvifsoap_la_OBJECTS) $(libonvifsoap_la_DEPENDENCIES) 
	$(libonvifsoap_la_LINK) -rpath $(libdir) $(libonvifsoap_la_OBJECTS) $(libonvifsoap_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Device-duration.Plo
include ./$(DEPDIR)/Device-wsaapi.Plo
include ./$(DEPDIR)/Device-wsseapi.Plo
include ./$(DEPDIR)/DeviceC.Plo
include ./$(DEPDIR)/DeviceDeviceBindingProxy.Plo
include ./$(DEPDIR)/MediaC.Plo
include ./$(DEPDIR)/MediaMediaBindingProxy.Plo
include ./$(DEPDIR)/OnvifC.Plo
include ./$(DEPDIR)/RemoteC.Plo
include ./$(DEPDIR)/Remotedpws_discoveryProxy.Plo
include ./$(DEPDIR)/Remotedpws_discoveryService.Plo
include ./$(DEPDIR)/dom.Plo
include ./$(DEPDIR)/envC.Plo
include ./$(DEPDIR)/smdevp.Plo
include ./$(DEPDIR)/stdsoap2.Plo
include ./$(DEPDIR)/threads.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

threads.lo: $(top_srcdir)/libgsoap/threads.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT threads.lo -MD -MP -MF $(DEPDIR)/threads.Tpo -c -o threads.lo `test -f '$(top_srcdir)/libgsoap/threads.c' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/threads.c
	$(am__mv) $(DEPDIR)/threads.Tpo $(DEPDIR)/threads.Plo
#	source='$(top_srcdir)/libgsoap/threads.c' object='threads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o threads.lo `test -f '$(top_srcdir)/libgsoap/threads.c' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/threads.c

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

DeviceC.lo: $(devicedir)/DeviceC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeviceC.lo -MD -MP -MF $(DEPDIR)/DeviceC.Tpo -c -o DeviceC.lo `test -f '$(devicedir)/DeviceC.cpp' || echo '$(srcdir)/'`$(devicedir)/DeviceC.cpp
	$(am__mv) $(DEPDIR)/DeviceC.Tpo $(DEPDIR)/DeviceC.Plo
#	source='$(devicedir)/DeviceC.cpp' object='DeviceC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeviceC.lo `test -f '$(devicedir)/DeviceC.cpp' || echo '$(srcdir)/'`$(devicedir)/DeviceC.cpp

DeviceDeviceBindingProxy.lo: $(devicedir)/DeviceDeviceBindingProxy.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DeviceDeviceBindingProxy.lo -MD -MP -MF $(DEPDIR)/DeviceDeviceBindingProxy.Tpo -c -o DeviceDeviceBindingProxy.lo `test -f '$(devicedir)/DeviceDeviceBindingProxy.cpp' || echo '$(srcdir)/'`$(devicedir)/DeviceDeviceBindingProxy.cpp
	$(am__mv) $(DEPDIR)/DeviceDeviceBindingProxy.Tpo $(DEPDIR)/DeviceDeviceBindingProxy.Plo
#	source='$(devicedir)/DeviceDeviceBindingProxy.cpp' object='DeviceDeviceBindingProxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DeviceDeviceBindingProxy.lo `test -f '$(devicedir)/DeviceDeviceBindingProxy.cpp' || echo '$(srcdir)/'`$(devicedir)/DeviceDeviceBindingProxy.cpp

Device-duration.lo: $(devicedir)/Device-duration.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Device-duration.lo -MD -MP -MF $(DEPDIR)/Device-duration.Tpo -c -o Device-duration.lo `test -f '$(devicedir)/Device-duration.cpp' || echo '$(srcdir)/'`$(devicedir)/Device-duration.cpp
	$(am__mv) $(DEPDIR)/Device-duration.Tpo $(DEPDIR)/Device-duration.Plo
#	source='$(devicedir)/Device-duration.cpp' object='Device-duration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Device-duration.lo `test -f '$(devicedir)/Device-duration.cpp' || echo '$(srcdir)/'`$(devicedir)/Device-duration.cpp

Device-wsseapi.lo: $(devicedir)/Device-wsseapi.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Device-wsseapi.lo -MD -MP -MF $(DEPDIR)/Device-wsseapi.Tpo -c -o Device-wsseapi.lo `test -f '$(devicedir)/Device-wsseapi.cpp' || echo '$(srcdir)/'`$(devicedir)/Device-wsseapi.cpp
	$(am__mv) $(DEPDIR)/Device-wsseapi.Tpo $(DEPDIR)/Device-wsseapi.Plo
#	source='$(devicedir)/Device-wsseapi.cpp' object='Device-wsseapi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Device-wsseapi.lo `test -f '$(devicedir)/Device-wsseapi.cpp' || echo '$(srcdir)/'`$(devicedir)/Device-wsseapi.cpp

Device-wsaapi.lo: $(devicedir)/Device-wsaapi.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Device-wsaapi.lo -MD -MP -MF $(DEPDIR)/Device-wsaapi.Tpo -c -o Device-wsaapi.lo `test -f '$(devicedir)/Device-wsaapi.cpp' || echo '$(srcdir)/'`$(devicedir)/Device-wsaapi.cpp
	$(am__mv) $(DEPDIR)/Device-wsaapi.Tpo $(DEPDIR)/Device-wsaapi.Plo
#	source='$(devicedir)/Device-wsaapi.cpp' object='Device-wsaapi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Device-wsaapi.lo `test -f '$(devicedir)/Device-wsaapi.cpp' || echo '$(srcdir)/'`$(devicedir)/Device-wsaapi.cpp

smdevp.lo: $(top_srcdir)/libgsoap/smdevp.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT smdevp.lo -MD -MP -MF $(DEPDIR)/smdevp.Tpo -c -o smdevp.lo `test -f '$(top_srcdir)/libgsoap/smdevp.cpp' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/smdevp.cpp
	$(am__mv) $(DEPDIR)/smdevp.Tpo $(DEPDIR)/smdevp.Plo
#	source='$(top_srcdir)/libgsoap/smdevp.cpp' object='smdevp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o smdevp.lo `test -f '$(top_srcdir)/libgsoap/smdevp.cpp' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/smdevp.cpp

RemoteC.lo: $(remotedir)/RemoteC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteC.lo -MD -MP -MF $(DEPDIR)/RemoteC.Tpo -c -o RemoteC.lo `test -f '$(remotedir)/RemoteC.cpp' || echo '$(srcdir)/'`$(remotedir)/RemoteC.cpp
	$(am__mv) $(DEPDIR)/RemoteC.Tpo $(DEPDIR)/RemoteC.Plo
#	source='$(remotedir)/RemoteC.cpp' object='RemoteC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteC.lo `test -f '$(remotedir)/RemoteC.cpp' || echo '$(srcdir)/'`$(remotedir)/RemoteC.cpp

Remotedpws_discoveryProxy.lo: $(remotedir)/Remotedpws_discoveryProxy.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Remotedpws_discoveryProxy.lo -MD -MP -MF $(DEPDIR)/Remotedpws_discoveryProxy.Tpo -c -o Remotedpws_discoveryProxy.lo `test -f '$(remotedir)/Remotedpws_discoveryProxy.cpp' || echo '$(srcdir)/'`$(remotedir)/Remotedpws_discoveryProxy.cpp
	$(am__mv) $(DEPDIR)/Remotedpws_discoveryProxy.Tpo $(DEPDIR)/Remotedpws_discoveryProxy.Plo
#	source='$(remotedir)/Remotedpws_discoveryProxy.cpp' object='Remotedpws_discoveryProxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Remotedpws_discoveryProxy.lo `test -f '$(remotedir)/Remotedpws_discoveryProxy.cpp' || echo '$(srcdir)/'`$(remotedir)/Remotedpws_discoveryProxy.cpp

MediaC.lo: $(mediadir)/MediaC.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MediaC.lo -MD -MP -MF $(DEPDIR)/MediaC.Tpo -c -o MediaC.lo `test -f '$(mediadir)/MediaC.cpp' || echo '$(srcdir)/'`$(mediadir)/MediaC.cpp
	$(am__mv) $(DEPDIR)/MediaC.Tpo $(DEPDIR)/MediaC.Plo
#	source='$(mediadir)/MediaC.cpp' object='MediaC.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MediaC.lo `test -f '$(mediadir)/MediaC.cpp' || echo '$(srcdir)/'`$(mediadir)/MediaC.cpp

MediaMediaBindingProxy.lo: $(mediadir)/MediaMediaBindingProxy.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MediaMediaBindingProxy.lo -MD -MP -MF $(DEPDIR)/MediaMediaBindingProxy.Tpo -c -o MediaMediaBindingProxy.lo `test -f '$(mediadir)/MediaMediaBindingProxy.cpp' || echo '$(srcdir)/'`$(mediadir)/MediaMediaBindingProxy.cpp
	$(am__mv) $(DEPDIR)/MediaMediaBindingProxy.Tpo $(DEPDIR)/MediaMediaBindingProxy.Plo
#	source='$(mediadir)/MediaMediaBindingProxy.cpp' object='MediaMediaBindingProxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MediaMediaBindingProxy.lo `test -f '$(mediadir)/MediaMediaBindingProxy.cpp' || echo '$(srcdir)/'`$(mediadir)/MediaMediaBindingProxy.cpp

Remotedpws_discoveryService.lo: $(remotedir)/Remotedpws_discoveryService.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Remotedpws_discoveryService.lo -MD -MP -MF $(DEPDIR)/Remotedpws_discoveryService.Tpo -c -o Remotedpws_discoveryService.lo `test -f '$(remotedir)/Remotedpws_discoveryService.cpp' || echo '$(srcdir)/'`$(remotedir)/Remotedpws_discoveryService.cpp
	$(am__mv) $(DEPDIR)/Remotedpws_discoveryService.Tpo $(DEPDIR)/Remotedpws_discoveryService.Plo
#	source='$(remotedir)/Remotedpws_discoveryService.cpp' object='Remotedpws_discoveryService.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Remotedpws_discoveryService.lo `test -f '$(remotedir)/Remotedpws_discoveryService.cpp' || echo '$(srcdir)/'`$(remotedir)/Remotedpws_discoveryService.cpp

stdsoap2.lo: $(top_srcdir)/libgsoap/stdsoap2.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stdsoap2.lo -MD -MP -MF $(DEPDIR)/stdsoap2.Tpo -c -o stdsoap2.lo `test -f '$(top_srcdir)/libgsoap/stdsoap2.cpp' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/stdsoap2.cpp
	$(am__mv) $(DEPDIR)/stdsoap2.Tpo $(DEPDIR)/stdsoap2.Plo
#	source='$(top_srcdir)/libgsoap/stdsoap2.cpp' object='stdsoap2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stdsoap2.lo `test -f '$(top_srcdir)/libgsoap/stdsoap2.cpp' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/stdsoap2.cpp

dom.lo: $(top_srcdir)/libgsoap/dom.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dom.lo -MD -MP -MF $(DEPDIR)/dom.Tpo -c -o dom.lo `test -f '$(top_srcdir)/libgsoap/dom.cpp' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/dom.cpp
	$(am__mv) $(DEPDIR)/dom.Tpo $(DEPDIR)/dom.Plo
#	source='$(top_srcdir)/libgsoap/dom.cpp' object='dom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dom.lo `test -f '$(top_srcdir)/libgsoap/dom.cpp' || echo '$(srcdir)/'`$(top_srcdir)/libgsoap/dom.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES


OnvifC.cpp:
	-$(WSDL2H) $(WSDL2H_OPT) -I$(WSDL2H_INCLUDE) -t$(ONVIF_TYPEMAP) $(ONVIF_WSDL) -o onvif.h
	-$(SOAP) $(ONVIF_OPT)  -I$(WSDL2H_INCLUDE) onvif.h 
Onvif-duration.cpp: 
	-sed -e s@"soapH.h"@"$(@:%-duration.cpp=%)H.h"@  $(top_srcdir)/common/custom/duration.c > $(@)
Onvif-wsseapi.cpp: 
	-cp $(COMMON)/plugin/wsseapi.cpp $(@)
	-cp $(COMMON)/plugin/smdevp.h .
	-cp $(COMMON)/plugin/threads.h .
	-sed -e s@"soapH.h"@"$(@:%-wsseapi.cpp=%)H.h"@  $(top_srcdir)/common/plugin/wsseapi.h > wsseapi.h
Onvif-wsaapi.cpp: 
	-cp $(COMMON)/plugin/wsaapi.c $(@)
	-sed -e s@"soapH.h"@"$(@:%-wsaapi.cpp=%)H.h"@  $(top_srcdir)/common/plugin/wsaapi.h > wsaapi.h
Device-duration.cpp: 
	-sed -e s@"soapH.h"@"$(@:%-duration.cpp=%)H.h"@  $(top_srcdir)/common/custom/duration.c > $(devicedir)/$(@)

#libonvifimaging_la_SOURCES = \
#	$(imagingdir)/ImagingC.cpp \
#	$(imagingdir)/ImagingImagingBindingProxy.cpp 	
#libonvifimaging_la_LDFLAGS = -export-dynamic
#libonvifimaging_la_CXXFLAGS = -I$(soapdir):$(imagingdir)
#libonvifimaging_la_LIBADD = -lonvifsoap
#
#libonvifanalytics_la_SOURCES = \
#	$(analyticsdir)/AnalyticsC.cpp \
#	$(analyticsdir)/AnalyticsAnalyticsEngineBindingProxy.cpp \
#	$(analyticsdir)/AnalyticsRuleEngineBindingProxy.cpp
#libonvifanalytics_la_LDFLAGS = -export-dynamic
#libonvifanalytics_la_CXXFLAGS = -I$(soapdir):$(analyticsedir)
#libonvifanalytics_la_LIBADD = -lonvifsoap

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
