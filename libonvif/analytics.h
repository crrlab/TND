// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* ../../libonvif/analytics.h
   Generated by wsdl2h 2.8.0 from ../../data/onvif/analytics.wsdl and ../../data/onvif/typemap.dat
   2010-11-15 23:11:08 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on ../../libonvif/analytics.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"
#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tan = "http://www.onvif.org/ver20/analytics/wsdl"
onv = "http://www.onvif.org/ver10/schema"
wsnb = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"

*/

#define SOAP_NAMESPACE_OF_tan	"http://www.onvif.org/ver20/analytics/wsdl"
//gsoap tan   schema namespace:	http://www.onvif.org/ver20/analytics/wsdl
//gsoap tan   schema elementForm:	qualified
//gsoap tan   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onv	"http://www.onvif.org/ver10/schema"
//gsoap onv   schema namespace:	http://www.onvif.org/ver10/schema
//gsoap onv   schema elementForm:	qualified
//gsoap onv   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnb	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnb  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnb  schema elementForm:	qualified
//gsoap wsnb  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


// Imported type "http://www.w3.org/2005/08/addressing":EndpointReferenceType defined by wsa5__EndpointReferenceType

/// Primitive built-in type "xs:NCName"
typedef std::string xsd__NCName;

/// Class wrapper for built-in type "xs:NCName" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__NCName_ to check runtime type (see soapStub.h)
class xsd__NCName_ : public xsd__anyType
{ public:
    xsd__NCName                          __item;                       
};

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Class wrapper for built-in type "xs:QName" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__QName_ to check runtime type (see soapStub.h)
class xsd__QName_ : public xsd__anyType
{ public:
    xsd__QName                           __item;                       
};

/// Primitive built-in type "xs:anySimpleType"
typedef std::string xsd__anySimpleType;

/// Class wrapper for built-in type "xs:anySimpleType" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__anySimpleType_ to check runtime type (see soapStub.h)
class xsd__anySimpleType_ : public xsd__anyType
{ public:
    xsd__anySimpleType                   __item;                       
};

/// Primitive built-in type "xs:anyURI"
typedef std::string xsd__anyURI;

/// Class wrapper for built-in type "xs:anyURI" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__anyURI_ to check runtime type (see soapStub.h)
class xsd__anyURI_ : public xsd__anyType
{ public:
    xsd__anyURI                          __item;                       
};

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
	struct soap *soap;
};

/// Class wrapper for built-in type "xs:base64Binary" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__base64Binary_ to check runtime type (see soapStub.h)
class xsd__base64Binary_ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item;                       
};

/// Class wrapper for built-in type "xs:boolean" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__boolean to check runtime type (see soapStub.h)
class xsd__boolean : public xsd__anyType
{ public:
    bool                                 __item;                       
};

/// Class wrapper for built-in type "xs:dateTime" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__dateTime to check runtime type (see soapStub.h)
class xsd__dateTime : public xsd__anyType
{ public:
    time_t                               __item;                       
};

/// Built-in type "xs:duration".
#import "custom/duration.h"

/// Class wrapper for built-in type "xs:duration" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__duration_ to check runtime type (see soapStub.h)
class xsd__duration_ : public xsd__anyType
{ public:
    xsd__duration                        __item;                       
};

/// Class wrapper for built-in type "xs:float" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__float to check runtime type (see soapStub.h)
class xsd__float : public xsd__anyType
{ public:
    float                                __item;                       
};

/// Class wrapper for built-in type "xs:int" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__int to check runtime type (see soapStub.h)
class xsd__int : public xsd__anyType
{ public:
    int                                  __item;                       
};

/// Primitive built-in type "xs:integer"
typedef std::string xsd__integer;

/// Class wrapper for built-in type "xs:integer" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__integer_ to check runtime type (see soapStub.h)
class xsd__integer_ : public xsd__anyType
{ public:
    xsd__integer                         __item;                       
};

/// Primitive built-in type "xs:nonNegativeInteger"
typedef std::string xsd__nonNegativeInteger;

/// Class wrapper for built-in type "xs:nonNegativeInteger" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__nonNegativeInteger_ to check runtime type (see soapStub.h)
class xsd__nonNegativeInteger_ : public xsd__anyType
{ public:
    xsd__nonNegativeInteger              __item;                       
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    std::string                          __item;                       
};

/// Primitive built-in type "xs:token"
typedef std::string xsd__token;

/// Class wrapper for built-in type "xs:token" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__token_ to check runtime type (see soapStub.h)
class xsd__token_ : public xsd__anyType
{ public:
    xsd__token                           __item;                       
};

// Imported element "http://www.w3.org/2004/08/xop/include":Include declared as _xop__Include

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class _tan__GetSupportedRules.
class _tan__GetSupportedRules;

//  Forward declaration of class _tan__GetSupportedRulesResponse.
class _tan__GetSupportedRulesResponse;

//  Forward declaration of class _tan__CreateRules.
class _tan__CreateRules;

//  Forward declaration of class _tan__CreateRulesResponse.
class _tan__CreateRulesResponse;

//  Forward declaration of class _tan__DeleteRules.
class _tan__DeleteRules;

//  Forward declaration of class _tan__DeleteRulesResponse.
class _tan__DeleteRulesResponse;

//  Forward declaration of class _tan__ModifyRules.
class _tan__ModifyRules;

//  Forward declaration of class _tan__ModifyRulesResponse.
class _tan__ModifyRulesResponse;

//  Forward declaration of class _tan__GetRules.
class _tan__GetRules;

//  Forward declaration of class _tan__GetRulesResponse.
class _tan__GetRulesResponse;

//  Forward declaration of class _tan__GetSupportedAnalyticsModules.
class _tan__GetSupportedAnalyticsModules;

//  Forward declaration of class _tan__GetSupportedAnalyticsModulesResponse.
class _tan__GetSupportedAnalyticsModulesResponse;

//  Forward declaration of class _tan__CreateAnalyticsModules.
class _tan__CreateAnalyticsModules;

//  Forward declaration of class _tan__CreateAnalyticsModulesResponse.
class _tan__CreateAnalyticsModulesResponse;

//  Forward declaration of class _tan__DeleteAnalyticsModules.
class _tan__DeleteAnalyticsModules;

//  Forward declaration of class _tan__DeleteAnalyticsModulesResponse.
class _tan__DeleteAnalyticsModulesResponse;

//  Forward declaration of class _tan__ModifyAnalyticsModules.
class _tan__ModifyAnalyticsModules;

//  Forward declaration of class _tan__ModifyAnalyticsModulesResponse.
class _tan__ModifyAnalyticsModulesResponse;

//  Forward declaration of class _tan__GetAnalyticsModules.
class _tan__GetAnalyticsModules;

//  Forward declaration of class _tan__GetAnalyticsModulesResponse.
class _tan__GetAnalyticsModulesResponse;

//  Forward declaration of class onv__DeviceEntity.
class onv__DeviceEntity;

//  Forward declaration of class onv__IntRectangle.
class onv__IntRectangle;

//  Forward declaration of class onv__IntRectangleRange.
class onv__IntRectangleRange;

//  Forward declaration of class onv__IntRange.
class onv__IntRange;

//  Forward declaration of class onv__FloatRange.
class onv__FloatRange;

//  Forward declaration of class onv__DurationRange.
class onv__DurationRange;

//  Forward declaration of class onv__IntList.
class onv__IntList;

//  Forward declaration of class onv__VideoSource.
class onv__VideoSource;

//  Forward declaration of class onv__VideoSourceExtension.
class onv__VideoSourceExtension;

//  Forward declaration of class onv__AudioSource.
class onv__AudioSource;

//  Forward declaration of class onv__Profile.
class onv__Profile;

//  Forward declaration of class onv__ProfileExtension.
class onv__ProfileExtension;

//  Forward declaration of class onv__ConfigurationEntity.
class onv__ConfigurationEntity;

//  Forward declaration of class onv__VideoSourceConfiguration.
class onv__VideoSourceConfiguration;

//  Forward declaration of class onv__VideoSourceConfigurationOptions.
class onv__VideoSourceConfigurationOptions;

//  Forward declaration of class onv__VideoSourceConfigurationOptionsExtension.
class onv__VideoSourceConfigurationOptionsExtension;

//  Forward declaration of class onv__VideoEncoderConfiguration.
class onv__VideoEncoderConfiguration;

//  Forward declaration of class onv__VideoResolution.
class onv__VideoResolution;

//  Forward declaration of class onv__VideoRateControl.
class onv__VideoRateControl;

//  Forward declaration of class onv__Mpeg4Configuration.
class onv__Mpeg4Configuration;

//  Forward declaration of class onv__H264Configuration.
class onv__H264Configuration;

//  Forward declaration of class onv__VideoEncoderConfigurationOptions.
class onv__VideoEncoderConfigurationOptions;

//  Forward declaration of class onv__VideoEncoderOptionsExtension.
class onv__VideoEncoderOptionsExtension;

//  Forward declaration of class onv__JpegOptions.
class onv__JpegOptions;

//  Forward declaration of class onv__Mpeg4Options.
class onv__Mpeg4Options;

//  Forward declaration of class onv__H264Options.
class onv__H264Options;

//  Forward declaration of class onv__AudioSourceConfiguration.
class onv__AudioSourceConfiguration;

//  Forward declaration of class onv__AudioSourceConfigurationOptions.
class onv__AudioSourceConfigurationOptions;

//  Forward declaration of class onv__AudioSourceOptionsExtension.
class onv__AudioSourceOptionsExtension;

//  Forward declaration of class onv__AudioEncoderConfiguration.
class onv__AudioEncoderConfiguration;

//  Forward declaration of class onv__AudioEncoderConfigurationOptions.
class onv__AudioEncoderConfigurationOptions;

//  Forward declaration of class onv__AudioEncoderConfigurationOption.
class onv__AudioEncoderConfigurationOption;

//  Forward declaration of class onv__VideoAnalyticsConfiguration.
class onv__VideoAnalyticsConfiguration;

//  Forward declaration of class onv__MetadataConfiguration.
class onv__MetadataConfiguration;

//  Forward declaration of class onv__PTZFilter.
class onv__PTZFilter;

//  Forward declaration of class onv__EventSubscription.
class onv__EventSubscription;

//  Forward declaration of class onv__MetadataConfigurationOptions.
class onv__MetadataConfigurationOptions;

//  Forward declaration of class onv__PTZStatusFilterOptions.
class onv__PTZStatusFilterOptions;

//  Forward declaration of class onv__MulticastConfiguration.
class onv__MulticastConfiguration;

//  Forward declaration of class onv__StreamSetup.
class onv__StreamSetup;

//  Forward declaration of class onv__Transport.
class onv__Transport;

//  Forward declaration of class onv__MediaUri.
class onv__MediaUri;

//  Forward declaration of class onv__Scope.
class onv__Scope;

//  Forward declaration of class onv__NetworkInterface.
class onv__NetworkInterface;

//  Forward declaration of class onv__NetworkInterfaceExtension.
class onv__NetworkInterfaceExtension;

//  Forward declaration of class onv__NetworkInterfaceLink.
class onv__NetworkInterfaceLink;

//  Forward declaration of class onv__NetworkInterfaceConnectionSetting.
class onv__NetworkInterfaceConnectionSetting;

//  Forward declaration of class onv__NetworkInterfaceInfo.
class onv__NetworkInterfaceInfo;

//  Forward declaration of class onv__IPv6NetworkInterface.
class onv__IPv6NetworkInterface;

//  Forward declaration of class onv__IPv4NetworkInterface.
class onv__IPv4NetworkInterface;

//  Forward declaration of class onv__IPv4Configuration.
class onv__IPv4Configuration;

//  Forward declaration of class onv__IPv6Configuration.
class onv__IPv6Configuration;

//  Forward declaration of class onv__IPv6ConfigurationExtension.
class onv__IPv6ConfigurationExtension;

//  Forward declaration of class onv__NetworkProtocol.
class onv__NetworkProtocol;

//  Forward declaration of class onv__NetworkProtocolExtension.
class onv__NetworkProtocolExtension;

//  Forward declaration of class onv__NetworkHost.
class onv__NetworkHost;

//  Forward declaration of class onv__NetworkHostExtension.
class onv__NetworkHostExtension;

//  Forward declaration of class onv__IPAddress.
class onv__IPAddress;

//  Forward declaration of class onv__PrefixedIPv4Address.
class onv__PrefixedIPv4Address;

//  Forward declaration of class onv__PrefixedIPv6Address.
class onv__PrefixedIPv6Address;

//  Forward declaration of class onv__HostnameInformation.
class onv__HostnameInformation;

//  Forward declaration of class onv__HostnameInformationExtension.
class onv__HostnameInformationExtension;

//  Forward declaration of class onv__DNSInformation.
class onv__DNSInformation;

//  Forward declaration of class onv__DNSInformationExtension.
class onv__DNSInformationExtension;

//  Forward declaration of class onv__NTPInformation.
class onv__NTPInformation;

//  Forward declaration of class onv__NTPInformationExtension.
class onv__NTPInformationExtension;

//  Forward declaration of class onv__DynamicDNSInformation.
class onv__DynamicDNSInformation;

//  Forward declaration of class onv__DynamicDNSInformationExtension.
class onv__DynamicDNSInformationExtension;

//  Forward declaration of class onv__NetworkInterfaceSetConfiguration.
class onv__NetworkInterfaceSetConfiguration;

//  Forward declaration of class onv__NetworkInterfaceSetConfigurationExtension.
class onv__NetworkInterfaceSetConfigurationExtension;

//  Forward declaration of class onv__IPv6NetworkInterfaceSetConfiguration.
class onv__IPv6NetworkInterfaceSetConfiguration;

//  Forward declaration of class onv__IPv4NetworkInterfaceSetConfiguration.
class onv__IPv4NetworkInterfaceSetConfiguration;

//  Forward declaration of class onv__NetworkGateway.
class onv__NetworkGateway;

//  Forward declaration of class onv__NetworkZeroConfiguration.
class onv__NetworkZeroConfiguration;

//  Forward declaration of class onv__NetworkZeroConfigurationExtension.
class onv__NetworkZeroConfigurationExtension;

//  Forward declaration of class onv__IPAddressFilter.
class onv__IPAddressFilter;

//  Forward declaration of class onv__IPAddressFilterExtension.
class onv__IPAddressFilterExtension;

//  Forward declaration of class onv__Capabilities.
class onv__Capabilities;

//  Forward declaration of class onv__CapabilitiesExtension.
class onv__CapabilitiesExtension;

//  Forward declaration of class onv__AnalyticsCapabilities.
class onv__AnalyticsCapabilities;

//  Forward declaration of class onv__DeviceCapabilities.
class onv__DeviceCapabilities;

//  Forward declaration of class onv__DeviceCapabilitiesExtension.
class onv__DeviceCapabilitiesExtension;

//  Forward declaration of class onv__EventCapabilities.
class onv__EventCapabilities;

//  Forward declaration of class onv__IOCapabilities.
class onv__IOCapabilities;

//  Forward declaration of class onv__IOCapabilitiesExtension.
class onv__IOCapabilitiesExtension;

//  Forward declaration of class onv__MediaCapabilities.
class onv__MediaCapabilities;

//  Forward declaration of class onv__MediaCapabilitiesExtension.
class onv__MediaCapabilitiesExtension;

//  Forward declaration of class onv__RealTimeStreamingCapabilities.
class onv__RealTimeStreamingCapabilities;

//  Forward declaration of class onv__RealTimeStreamingCapabilitiesExtension.
class onv__RealTimeStreamingCapabilitiesExtension;

//  Forward declaration of class onv__ProfileCapabilities.
class onv__ProfileCapabilities;

//  Forward declaration of class onv__NetworkCapabilities.
class onv__NetworkCapabilities;

//  Forward declaration of class onv__NetworkCapabilitiesExtension.
class onv__NetworkCapabilitiesExtension;

//  Forward declaration of class onv__SecurityCapabilities.
class onv__SecurityCapabilities;

//  Forward declaration of class onv__SecurityCapabilitiesExtension.
class onv__SecurityCapabilitiesExtension;

//  Forward declaration of class onv__StorageCapabilities.
class onv__StorageCapabilities;

//  Forward declaration of class onv__SystemCapabilities.
class onv__SystemCapabilities;

//  Forward declaration of class onv__SystemCapabilitiesExtension.
class onv__SystemCapabilitiesExtension;

//  Forward declaration of class onv__OnvifVersion.
class onv__OnvifVersion;

//  Forward declaration of class onv__ImagingCapabilities.
class onv__ImagingCapabilities;

//  Forward declaration of class onv__PTZCapabilities.
class onv__PTZCapabilities;

//  Forward declaration of class onv__SystemLog.
class onv__SystemLog;

//  Forward declaration of class onv__SupportInformation.
class onv__SupportInformation;

//  Forward declaration of class onv__BinaryData.
class onv__BinaryData;

//  Forward declaration of class onv__AttachmentData.
class onv__AttachmentData;

//  Forward declaration of class onv__BackupFile.
class onv__BackupFile;

//  Forward declaration of class onv__SystemDateTime.
class onv__SystemDateTime;

//  Forward declaration of class onv__SystemDateTimeExtension.
class onv__SystemDateTimeExtension;

//  Forward declaration of class onv__DateTime.
class onv__DateTime;

//  Forward declaration of class onv__Date.
class onv__Date;

//  Forward declaration of class onv__Time.
class onv__Time;

//  Forward declaration of class onv__TimeZone.
class onv__TimeZone;

//  Forward declaration of class onv__User.
class onv__User;

//  Forward declaration of class onv__UserExtension.
class onv__UserExtension;

//  Forward declaration of class onv__CertificateGenerationParameters.
class onv__CertificateGenerationParameters;

//  Forward declaration of class onv__CertificateGenerationParametersExtension.
class onv__CertificateGenerationParametersExtension;

//  Forward declaration of class onv__Certificate.
class onv__Certificate;

//  Forward declaration of class onv__CertificateStatus.
class onv__CertificateStatus;

//  Forward declaration of class onv__RelayOutputSettings.
class onv__RelayOutputSettings;

//  Forward declaration of class onv__RelayOutput.
class onv__RelayOutput;

//  Forward declaration of class onv__PTZNode.
class onv__PTZNode;

//  Forward declaration of class onv__PTZNodeExtension.
class onv__PTZNodeExtension;

//  Forward declaration of class onv__PTZConfiguration.
class onv__PTZConfiguration;

//  Forward declaration of class onv__PTZConfigurationExtension.
class onv__PTZConfigurationExtension;

//  Forward declaration of class onv__PTZConfigurationOptions.
class onv__PTZConfigurationOptions;

//  Forward declaration of class onv__PanTiltLimits.
class onv__PanTiltLimits;

//  Forward declaration of class onv__ZoomLimits.
class onv__ZoomLimits;

//  Forward declaration of class onv__PTZSpaces.
class onv__PTZSpaces;

//  Forward declaration of class onv__PTZSpacesExtension.
class onv__PTZSpacesExtension;

//  Forward declaration of class onv__Space2DDescription.
class onv__Space2DDescription;

//  Forward declaration of class onv__Space1DDescription.
class onv__Space1DDescription;

//  Forward declaration of class onv__Vector2D.
class onv__Vector2D;

//  Forward declaration of class onv__Vector1D.
class onv__Vector1D;

//  Forward declaration of class onv__PTZVector.
class onv__PTZVector;

//  Forward declaration of class onv__PTZSpeed.
class onv__PTZSpeed;

//  Forward declaration of class onv__PTZStatus.
class onv__PTZStatus;

//  Forward declaration of class onv__PTZPreset.
class onv__PTZPreset;

//  Forward declaration of class onv__PTZMoveStatus.
class onv__PTZMoveStatus;

//  Forward declaration of class onv__ImagingStatus.
class onv__ImagingStatus;

//  Forward declaration of class onv__FocusStatus.
class onv__FocusStatus;

//  Forward declaration of class onv__FocusConfiguration.
class onv__FocusConfiguration;

//  Forward declaration of class onv__ImagingSettings.
class onv__ImagingSettings;

//  Forward declaration of class onv__ImagingSettingsExtension.
class onv__ImagingSettingsExtension;

//  Forward declaration of class onv__Exposure.
class onv__Exposure;

//  Forward declaration of class onv__WideDynamicRange.
class onv__WideDynamicRange;

//  Forward declaration of class onv__BacklightCompensation.
class onv__BacklightCompensation;

//  Forward declaration of class onv__ImagingOptions.
class onv__ImagingOptions;

//  Forward declaration of class onv__WideDynamicRangeOptions.
class onv__WideDynamicRangeOptions;

//  Forward declaration of class onv__BacklightCompensationOptions.
class onv__BacklightCompensationOptions;

//  Forward declaration of class onv__FocusOptions.
class onv__FocusOptions;

//  Forward declaration of class onv__ExposureOptions.
class onv__ExposureOptions;

//  Forward declaration of class onv__WhiteBalanceOptions.
class onv__WhiteBalanceOptions;

//  Forward declaration of class onv__FocusMove.
class onv__FocusMove;

//  Forward declaration of class onv__AbsoluteFocus.
class onv__AbsoluteFocus;

//  Forward declaration of class onv__RelativeFocus.
class onv__RelativeFocus;

//  Forward declaration of class onv__ContinuousFocus.
class onv__ContinuousFocus;

//  Forward declaration of class onv__MoveOptions.
class onv__MoveOptions;

//  Forward declaration of class onv__AbsoluteFocusOptions.
class onv__AbsoluteFocusOptions;

//  Forward declaration of class onv__RelativeFocusOptions.
class onv__RelativeFocusOptions;

//  Forward declaration of class onv__ContinuousFocusOptions.
class onv__ContinuousFocusOptions;

//  Forward declaration of class onv__WhiteBalance.
class onv__WhiteBalance;

//  Forward declaration of class onv__ImagingStatus20.
class onv__ImagingStatus20;

//  Forward declaration of class onv__ImagingStatus20Extension.
class onv__ImagingStatus20Extension;

//  Forward declaration of class onv__FocusStatus20.
class onv__FocusStatus20;

//  Forward declaration of class onv__FocusStatus20Extension.
class onv__FocusStatus20Extension;

//  Forward declaration of class onv__ImagingSettings20.
class onv__ImagingSettings20;

//  Forward declaration of class onv__ImagingSettingsExtension20.
class onv__ImagingSettingsExtension20;

//  Forward declaration of class onv__WideDynamicRange20.
class onv__WideDynamicRange20;

//  Forward declaration of class onv__BacklightCompensation20.
class onv__BacklightCompensation20;

//  Forward declaration of class onv__Exposure20.
class onv__Exposure20;

//  Forward declaration of class onv__ImagingOptions20.
class onv__ImagingOptions20;

//  Forward declaration of class onv__ImagingOptions20Extension.
class onv__ImagingOptions20Extension;

//  Forward declaration of class onv__WideDynamicRangeOptions20.
class onv__WideDynamicRangeOptions20;

//  Forward declaration of class onv__BacklightCompensationOptions20.
class onv__BacklightCompensationOptions20;

//  Forward declaration of class onv__ExposureOptions20.
class onv__ExposureOptions20;

//  Forward declaration of class onv__MoveOptions20.
class onv__MoveOptions20;

//  Forward declaration of class onv__RelativeFocusOptions20.
class onv__RelativeFocusOptions20;

//  Forward declaration of class onv__WhiteBalance20.
class onv__WhiteBalance20;

//  Forward declaration of class onv__WhiteBalance20Extension.
class onv__WhiteBalance20Extension;

//  Forward declaration of class onv__FocusConfiguration20.
class onv__FocusConfiguration20;

//  Forward declaration of class onv__FocusConfiguration20Extension.
class onv__FocusConfiguration20Extension;

//  Forward declaration of class onv__WhiteBalanceOptions20.
class onv__WhiteBalanceOptions20;

//  Forward declaration of class onv__WhiteBalanceOptions20Extension.
class onv__WhiteBalanceOptions20Extension;

//  Forward declaration of class onv__FocusOptions20.
class onv__FocusOptions20;

//  Forward declaration of class onv__FocusOptions20Extension.
class onv__FocusOptions20Extension;

//  Forward declaration of class onv__MessageExtension.
class onv__MessageExtension;

//  Forward declaration of class onv__ItemList.
class onv__ItemList;

//  Forward declaration of class onv__ItemListExtension.
class onv__ItemListExtension;

//  Forward declaration of class onv__MessageDescription.
class onv__MessageDescription;

//  Forward declaration of class onv__MessageDescriptionExtension.
class onv__MessageDescriptionExtension;

//  Forward declaration of class onv__ItemListDescription.
class onv__ItemListDescription;

//  Forward declaration of class onv__ItemListDescriptionExtension.
class onv__ItemListDescriptionExtension;

//  Forward declaration of class onv__Vector.
class onv__Vector;

//  Forward declaration of class onv__Rectangle.
class onv__Rectangle;

//  Forward declaration of class onv__Polygon.
class onv__Polygon;

//  Forward declaration of class onv__Polyline.
class onv__Polyline;

//  Forward declaration of class onv__Color.
class onv__Color;

//  Forward declaration of class onv__ColorCovariance.
class onv__ColorCovariance;

//  Forward declaration of class onv__Appearance.
class onv__Appearance;

//  Forward declaration of class onv__AppearanceExtension.
class onv__AppearanceExtension;

//  Forward declaration of class onv__ShapeDescriptor.
class onv__ShapeDescriptor;

//  Forward declaration of class onv__ShapeDescriptorExtension.
class onv__ShapeDescriptorExtension;

//  Forward declaration of class onv__ColorDescriptor.
class onv__ColorDescriptor;

//  Forward declaration of class onv__ColorDescriptorExtension.
class onv__ColorDescriptorExtension;

//  Forward declaration of class onv__ClassDescriptor.
class onv__ClassDescriptor;

//  Forward declaration of class onv__ClassDescriptorExtension.
class onv__ClassDescriptorExtension;

//  Forward declaration of class onv__Object.
class onv__Object;

//  Forward declaration of class onv__ObjectExtension.
class onv__ObjectExtension;

//  Forward declaration of class onv__Transformation.
class onv__Transformation;

//  Forward declaration of class onv__TransformationExtension.
class onv__TransformationExtension;

//  Forward declaration of class onv__Frame.
class onv__Frame;

//  Forward declaration of class onv__FrameExtension.
class onv__FrameExtension;

//  Forward declaration of class onv__Merge.
class onv__Merge;

//  Forward declaration of class onv__Split.
class onv__Split;

//  Forward declaration of class onv__Rename.
class onv__Rename;

//  Forward declaration of class onv__ObjectId.
class onv__ObjectId;

//  Forward declaration of class onv__Behaviour.
class onv__Behaviour;

//  Forward declaration of class onv__BehaviourExtension.
class onv__BehaviourExtension;

//  Forward declaration of class onv__ObjectTree.
class onv__ObjectTree;

//  Forward declaration of class onv__ObjectTreeExtension.
class onv__ObjectTreeExtension;

//  Forward declaration of class onv__AnalyticsEngineConfiguration.
class onv__AnalyticsEngineConfiguration;

//  Forward declaration of class onv__AnalyticsEngineConfigurationExtension.
class onv__AnalyticsEngineConfigurationExtension;

//  Forward declaration of class onv__RuleEngineConfiguration.
class onv__RuleEngineConfiguration;

//  Forward declaration of class onv__RuleEngineConfigurationExtension.
class onv__RuleEngineConfigurationExtension;

//  Forward declaration of class onv__Config.
class onv__Config;

//  Forward declaration of class onv__ConfigDescription.
class onv__ConfigDescription;

//  Forward declaration of class onv__ConfigDescriptionExtension.
class onv__ConfigDescriptionExtension;

//  Forward declaration of class onv__SupportedRules.
class onv__SupportedRules;

//  Forward declaration of class onv__SupportedRulesExtension.
class onv__SupportedRulesExtension;

//  Forward declaration of class onv__SupportedAnalyticsModules.
class onv__SupportedAnalyticsModules;

//  Forward declaration of class onv__SupportedAnalyticsModulesExtension.
class onv__SupportedAnalyticsModulesExtension;

//  Forward declaration of class onv__MetadataStream.
class onv__MetadataStream;

//  Forward declaration of class onv__MetadataStreamExtension.
class onv__MetadataStreamExtension;

//  Forward declaration of class onv__VideoAnalyticsStream.
class onv__VideoAnalyticsStream;

//  Forward declaration of class onv__VideoAnalyticsStreamExtension.
class onv__VideoAnalyticsStreamExtension;

//  Forward declaration of class onv__PTZStream.
class onv__PTZStream;

//  Forward declaration of class onv__PTZStreamExtension.
class onv__PTZStreamExtension;

//  Forward declaration of class onv__EventStream.
class onv__EventStream;

//  Forward declaration of class onv__EventStreamExtension.
class onv__EventStreamExtension;

//  Forward declaration of class _onv__Message.
class _onv__Message;

//  Forward declaration of class wsnb__QueryExpressionType.
class wsnb__QueryExpressionType;

//  Forward declaration of class wsnb__TopicExpressionType.
class wsnb__TopicExpressionType;

//  Forward declaration of class wsnb__FilterType.
class wsnb__FilterType;

//  Forward declaration of class wsnb__SubscriptionPolicyType.
class wsnb__SubscriptionPolicyType;

//  Forward declaration of class wsnb__NotificationMessageHolderType.
class wsnb__NotificationMessageHolderType;

//  Forward declaration of class wsnb__SubscribeCreationFailedFaultType.
class wsnb__SubscribeCreationFailedFaultType;

//  Forward declaration of class wsnb__InvalidFilterFaultType.
class wsnb__InvalidFilterFaultType;

//  Forward declaration of class wsnb__TopicExpressionDialectUnknownFaultType.
class wsnb__TopicExpressionDialectUnknownFaultType;

//  Forward declaration of class wsnb__InvalidTopicExpressionFaultType.
class wsnb__InvalidTopicExpressionFaultType;

//  Forward declaration of class wsnb__TopicNotSupportedFaultType.
class wsnb__TopicNotSupportedFaultType;

//  Forward declaration of class wsnb__MultipleTopicsSpecifiedFaultType.
class wsnb__MultipleTopicsSpecifiedFaultType;

//  Forward declaration of class wsnb__InvalidProducerPropertiesExpressionFaultType.
class wsnb__InvalidProducerPropertiesExpressionFaultType;

//  Forward declaration of class wsnb__InvalidMessageContentExpressionFaultType.
class wsnb__InvalidMessageContentExpressionFaultType;

//  Forward declaration of class wsnb__UnrecognizedPolicyRequestFaultType.
class wsnb__UnrecognizedPolicyRequestFaultType;

//  Forward declaration of class wsnb__UnsupportedPolicyRequestFaultType.
class wsnb__UnsupportedPolicyRequestFaultType;

//  Forward declaration of class wsnb__NotifyMessageNotSupportedFaultType.
class wsnb__NotifyMessageNotSupportedFaultType;

//  Forward declaration of class wsnb__UnacceptableInitialTerminationTimeFaultType.
class wsnb__UnacceptableInitialTerminationTimeFaultType;

//  Forward declaration of class wsnb__NoCurrentMessageOnTopicFaultType.
class wsnb__NoCurrentMessageOnTopicFaultType;

//  Forward declaration of class wsnb__UnableToGetMessagesFaultType.
class wsnb__UnableToGetMessagesFaultType;

//  Forward declaration of class wsnb__UnableToDestroyPullPointFaultType.
class wsnb__UnableToDestroyPullPointFaultType;

//  Forward declaration of class wsnb__UnableToCreatePullPointFaultType.
class wsnb__UnableToCreatePullPointFaultType;

//  Forward declaration of class wsnb__UnacceptableTerminationTimeFaultType.
class wsnb__UnacceptableTerminationTimeFaultType;

//  Forward declaration of class wsnb__UnableToDestroySubscriptionFaultType.
class wsnb__UnableToDestroySubscriptionFaultType;

//  Forward declaration of class wsnb__PauseFailedFaultType.
class wsnb__PauseFailedFaultType;

//  Forward declaration of class wsnb__ResumeFailedFaultType.
class wsnb__ResumeFailedFaultType;

//  Forward declaration of class _wsnb__NotificationProducerRP.
class _wsnb__NotificationProducerRP;

//  Forward declaration of class _wsnb__SubscriptionManagerRP.
class _wsnb__SubscriptionManagerRP;

//  Forward declaration of class _wsnb__Notify.
class _wsnb__Notify;

//  Forward declaration of class _wsnb__UseRaw.
class _wsnb__UseRaw;

//  Forward declaration of class _wsnb__Subscribe.
class _wsnb__Subscribe;

//  Forward declaration of class _wsnb__SubscribeResponse.
class _wsnb__SubscribeResponse;

//  Forward declaration of class _wsnb__GetCurrentMessage.
class _wsnb__GetCurrentMessage;

//  Forward declaration of class _wsnb__GetCurrentMessageResponse.
class _wsnb__GetCurrentMessageResponse;

//  Forward declaration of class _wsnb__GetMessages.
class _wsnb__GetMessages;

//  Forward declaration of class _wsnb__GetMessagesResponse.
class _wsnb__GetMessagesResponse;

//  Forward declaration of class _wsnb__DestroyPullPoint.
class _wsnb__DestroyPullPoint;

//  Forward declaration of class _wsnb__DestroyPullPointResponse.
class _wsnb__DestroyPullPointResponse;

//  Forward declaration of class _wsnb__CreatePullPoint.
class _wsnb__CreatePullPoint;

//  Forward declaration of class _wsnb__CreatePullPointResponse.
class _wsnb__CreatePullPointResponse;

//  Forward declaration of class _wsnb__Renew.
class _wsnb__Renew;

//  Forward declaration of class _wsnb__RenewResponse.
class _wsnb__RenewResponse;

//  Forward declaration of class _wsnb__Unsubscribe.
class _wsnb__Unsubscribe;

//  Forward declaration of class _wsnb__UnsubscribeResponse.
class _wsnb__UnsubscribeResponse;

//  Forward declaration of class _wsnb__PauseSubscription.
class _wsnb__PauseSubscription;

//  Forward declaration of class _wsnb__PauseSubscriptionResponse.
class _wsnb__PauseSubscriptionResponse;

//  Forward declaration of class _wsnb__ResumeSubscription.
class _wsnb__ResumeSubscription;

//  Forward declaration of class _wsnb__ResumeSubscriptionResponse.
class _wsnb__ResumeSubscriptionResponse;

//  Forward declaration of class wsrfbf__BaseFaultType.
class wsrfbf__BaseFaultType;

//  Forward declaration of class wstop__Documentation.
class wstop__Documentation;

//  Forward declaration of class wstop__ExtensibleDocumented.
class wstop__ExtensibleDocumented;

//  Forward declaration of class wstop__QueryExpressionType.
class wstop__QueryExpressionType;

//  Forward declaration of class wstop__TopicNamespaceType.
class wstop__TopicNamespaceType;

//  Forward declaration of class wstop__TopicType.
class wstop__TopicType;

//  Forward declaration of class wstop__TopicSetType.
class wstop__TopicSetType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef std::string wsnb__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of xs:string.
/// Length of this string is within 0..64 characters
typedef std::string onv__ReferenceToken:64;

/// Class wrapper
class onv__ReferenceToken__ : public xsd__anyType
{ public:
    onv__ReferenceToken                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of xs:string.
/// Length of this string is within 0..64 characters
typedef std::string onv__Name:64;

/// Class wrapper
class onv__Name__ : public xsd__anyType
{ public:
    onv__Name                            __item;                       
};

/// "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__VideoEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__VideoEncoding
{
	onv__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	onv__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	onv__VideoEncoding__H264,	///< xs:string value="H264"
};

/// Class wrapper
class onv__VideoEncoding_ : public xsd__anyType
{ public:
    enum onv__VideoEncoding              __item;                       
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Mpeg4Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Mpeg4Profile
{
	onv__Mpeg4Profile__SP,	///< xs:string value="SP"
	onv__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// Class wrapper
class onv__Mpeg4Profile_ : public xsd__anyType
{ public:
    enum onv__Mpeg4Profile               __item;                       
};

/// "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__H264Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__H264Profile
{
	onv__H264Profile__Baseline,	///< xs:string value="Baseline"
	onv__H264Profile__Main,	///< xs:string value="Main"
	onv__H264Profile__Extended,	///< xs:string value="Extended"
	onv__H264Profile__High,	///< xs:string value="High"
};

/// Class wrapper
class onv__H264Profile_ : public xsd__anyType
{ public:
    enum onv__H264Profile                __item;                       
};

/// "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__AudioEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__AudioEncoding
{
	onv__AudioEncoding__G711,	///< xs:string value="G711"
	onv__AudioEncoding__G726,	///< xs:string value="G726"
	onv__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// Class wrapper
class onv__AudioEncoding_ : public xsd__anyType
{ public:
    enum onv__AudioEncoding              __item;                       
};

/// "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__StreamType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__StreamType
{
	onv__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	onv__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// Class wrapper
class onv__StreamType_ : public xsd__anyType
{ public:
    enum onv__StreamType                 __item;                       
};

/// "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__TransportProtocol' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__TransportProtocol
{
	onv__TransportProtocol__UDP,	///< xs:string value="UDP"
	onv__TransportProtocol__TCP,	///< xs:string value="TCP"
	onv__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	onv__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// Class wrapper
class onv__TransportProtocol_ : public xsd__anyType
{ public:
    enum onv__TransportProtocol          __item;                       
};

/// "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ScopeDefinition' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ScopeDefinition
{
	onv__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	onv__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// Class wrapper
class onv__ScopeDefinition_ : public xsd__anyType
{ public:
    enum onv__ScopeDefinition            __item;                       
};

/// "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__DiscoveryMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__DiscoveryMode
{
	onv__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	onv__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// Class wrapper
class onv__DiscoveryMode_ : public xsd__anyType
{ public:
    enum onv__DiscoveryMode              __item;                       
};

/// "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Duplex' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Duplex
{
	onv__Duplex__Full,	///< xs:string value="Full"
	onv__Duplex__Half,	///< xs:string value="Half"
};

/// Class wrapper
class onv__Duplex_ : public xsd__anyType
{ public:
    enum onv__Duplex                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of xs:int.
/// @brief For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
typedef int onv__IANA_IfTypes;

/// Class wrapper
class onv__IANA_IfTypes__ : public xsd__anyType
{ public:
    onv__IANA_IfTypes                    __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IPv6DHCPConfiguration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IPv6DHCPConfiguration
{
	onv__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	onv__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	onv__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	onv__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// Class wrapper
class onv__IPv6DHCPConfiguration_ : public xsd__anyType
{ public:
    enum onv__IPv6DHCPConfiguration      __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__NetworkProtocolType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__NetworkProtocolType
{
	onv__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	onv__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	onv__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// Class wrapper
class onv__NetworkProtocolType_ : public xsd__anyType
{ public:
    enum onv__NetworkProtocolType        __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__NetworkHostType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__NetworkHostType
{
	onv__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	onv__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	onv__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// Class wrapper
class onv__NetworkHostType_ : public xsd__anyType
{ public:
    enum onv__NetworkHostType            __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of xs:token.
typedef xsd__token onv__IPv4Address;

/// Class wrapper
class onv__IPv4Address__ : public xsd__anyType
{ public:
    onv__IPv4Address                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of xs:token.
typedef xsd__token onv__IPv6Address;

/// Class wrapper
class onv__IPv6Address__ : public xsd__anyType
{ public:
    onv__IPv6Address                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of xs:token.
typedef xsd__token onv__HwAddress;

/// Class wrapper
class onv__HwAddress__ : public xsd__anyType
{ public:
    onv__HwAddress                       __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IPType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IPType
{
	onv__IPType__IPv4,	///< xs:string value="IPv4"
	onv__IPType__IPv6,	///< xs:string value="IPv6"
};

/// Class wrapper
class onv__IPType_ : public xsd__anyType
{ public:
    enum onv__IPType                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of xs:token.
typedef xsd__token onv__DNSName;

/// Class wrapper
class onv__DNSName__ : public xsd__anyType
{ public:
    onv__DNSName                         __item;                       
};

/// "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of xs:token.
typedef xsd__token onv__Domain;

/// Class wrapper
class onv__Domain__ : public xsd__anyType
{ public:
    onv__Domain                          __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IPAddressFilterType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IPAddressFilterType
{
	onv__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	onv__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// Class wrapper
class onv__IPAddressFilterType_ : public xsd__anyType
{ public:
    enum onv__IPAddressFilterType        __item;                       
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__DynamicDNSType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__DynamicDNSType
{
	onv__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	onv__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	onv__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// Class wrapper
class onv__DynamicDNSType_ : public xsd__anyType
{ public:
    enum onv__DynamicDNSType             __item;                       
};

/// "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__CapabilityCategory' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__CapabilityCategory
{
	onv__CapabilityCategory__All,	///< xs:string value="All"
	onv__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	onv__CapabilityCategory__Device,	///< xs:string value="Device"
	onv__CapabilityCategory__Events,	///< xs:string value="Events"
	onv__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	onv__CapabilityCategory__Media,	///< xs:string value="Media"
	onv__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// Class wrapper
class onv__CapabilityCategory_ : public xsd__anyType
{ public:
    enum onv__CapabilityCategory         __item;                       
};

/// "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__SystemLogType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__SystemLogType
{
	onv__SystemLogType__System,	///< xs:string value="System"
	onv__SystemLogType__Access,	///< xs:string value="Access"
};

/// Class wrapper
class onv__SystemLogType_ : public xsd__anyType
{ public:
    enum onv__SystemLogType              __item;                       
};

/// "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__FactoryDefaultType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__FactoryDefaultType
{
	onv__FactoryDefaultType__Hard,	///< xs:string value="Hard"
	onv__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// Class wrapper
class onv__FactoryDefaultType_ : public xsd__anyType
{ public:
    enum onv__FactoryDefaultType         __item;                       
};

/// "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__SetDateTimeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__SetDateTimeType
{
	onv__SetDateTimeType__Manual,	///< xs:string value="Manual"
	onv__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// Class wrapper
class onv__SetDateTimeType_ : public xsd__anyType
{ public:
    enum onv__SetDateTimeType            __item;                       
};

/// "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__UserLevel' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__UserLevel
{
	onv__UserLevel__Administrator,	///< xs:string value="Administrator"
	onv__UserLevel__Operator,	///< xs:string value="Operator"
	onv__UserLevel__User,	///< xs:string value="User"
	onv__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	onv__UserLevel__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onv__UserLevel_ : public xsd__anyType
{ public:
    enum onv__UserLevel                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RelayLogicalState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RelayLogicalState
{
	onv__RelayLogicalState__active,	///< xs:string value="active"
	onv__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// Class wrapper
class onv__RelayLogicalState_ : public xsd__anyType
{ public:
    enum onv__RelayLogicalState          __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RelayIdleState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RelayIdleState
{
	onv__RelayIdleState__closed,	///< xs:string value="closed"
	onv__RelayIdleState__open,	///< xs:string value="open"
};

/// Class wrapper
class onv__RelayIdleState_ : public xsd__anyType
{ public:
    enum onv__RelayIdleState             __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__RelayMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__RelayMode
{
	onv__RelayMode__Monostable,	///< xs:string value="Monostable"
	onv__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// Class wrapper
class onv__RelayMode_ : public xsd__anyType
{ public:
    enum onv__RelayMode                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of xs:string.
/// Length of this string is within 0..128 characters
typedef std::string onv__AuxiliaryData:128;

/// Class wrapper
class onv__AuxiliaryData__ : public xsd__anyType
{ public:
    onv__AuxiliaryData                   __item;                       
};

/// "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__MoveStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__MoveStatus
{
	onv__MoveStatus__IDLE,	///< xs:string value="IDLE"
	onv__MoveStatus__MOVING,	///< xs:string value="MOVING"
	onv__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// Class wrapper
class onv__MoveStatus_ : public xsd__anyType
{ public:
    enum onv__MoveStatus                 __item;                       
};

/// "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__AutoFocusMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__AutoFocusMode
{
	onv__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	onv__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onv__AutoFocusMode_ : public xsd__anyType
{ public:
    enum onv__AutoFocusMode              __item;                       
};

/// "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__WideDynamicMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__WideDynamicMode
{
	onv__WideDynamicMode__OFF,	///< xs:string value="OFF"
	onv__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// Class wrapper
class onv__WideDynamicMode_ : public xsd__anyType
{ public:
    enum onv__WideDynamicMode            __item;                       
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__BacklightCompensationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__BacklightCompensationMode
{
	onv__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
	onv__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// Class wrapper
class onv__BacklightCompensationMode_ : public xsd__anyType
{ public:
    enum onv__BacklightCompensationMode  __item;                       
};

/// "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ExposurePriority' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ExposurePriority
{
	onv__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	onv__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// Class wrapper
class onv__ExposurePriority_ : public xsd__anyType
{ public:
    enum onv__ExposurePriority           __item;                       
};

/// "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ExposureMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ExposureMode
{
	onv__ExposureMode__AUTO,	///< xs:string value="AUTO"
	onv__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onv__ExposureMode_ : public xsd__anyType
{ public:
    enum onv__ExposureMode               __item;                       
};

/// "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Enabled' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Enabled
{
	onv__Enabled__ENABLED,	///< xs:string value="ENABLED"
	onv__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// Class wrapper
class onv__Enabled_ : public xsd__anyType
{ public:
    enum onv__Enabled                    __item;                       
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__WhiteBalanceMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__WhiteBalanceMode
{
	onv__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	onv__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onv__WhiteBalanceMode_ : public xsd__anyType
{ public:
    enum onv__WhiteBalanceMode           __item;                       
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__IrCutFilterMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__IrCutFilterMode
{
	onv__IrCutFilterMode__ON,	///< xs:string value="ON"
	onv__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	onv__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// Class wrapper
class onv__IrCutFilterMode_ : public xsd__anyType
{ public:
    enum onv__IrCutFilterMode            __item;                       
};

/// "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of xs:anyURI.
typedef xsd__anyURI onv__TopicNamespaceLocation;

/// Class wrapper
class onv__TopicNamespaceLocation__ : public xsd__anyType
{ public:
    onv__TopicNamespaceLocation          __item;                       
};

/// "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__PropertyOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__PropertyOperation
{
	onv__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	onv__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	onv__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// Class wrapper
class onv__PropertyOperation_ : public xsd__anyType
{ public:
    enum onv__PropertyOperation          __item;                       
};

/// "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__Direction' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__Direction
{
	onv__Direction__Left,	///< xs:string value="Left"
	onv__Direction__Right,	///< xs:string value="Right"
	onv__Direction__Any,	///< xs:string value="Any"
};

/// Class wrapper
class onv__Direction_ : public xsd__anyType
{ public:
    enum onv__Direction                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onv__ClassType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onv__ClassType
{
	onv__ClassType__Animal,	///< xs:string value="Animal"
	onv__ClassType__Face,	///< xs:string value="Face"
	onv__ClassType__Human,	///< xs:string value="Human"
	onv__ClassType__Vehical,	///< xs:string value="Vehical"
	onv__ClassType__Other,	///< xs:string value="Other"
};

/// Class wrapper
class onv__ClassType_ : public xsd__anyType
{ public:
    enum onv__ClassType                  __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of xs:token.
/// @brief TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*" (note: not automatically enforced)
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// Class wrapper
class wstop__FullTopicExpression__ : public xsd__anyType
{ public:
    wstop__FullTopicExpression           __item;                       
};

/// "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of xs:token.
/// @brief The pattern allows strings matching the following EBNF: ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*" (note: not automatically enforced)
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// Class wrapper
class wstop__ConcreteTopicExpression__ : public xsd__anyType
{ public:
    wstop__ConcreteTopicExpression       __item;                       
};

/// "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of xs:QName.
/// @brief The pattern allows strings matching the following EBNF: RootTopic ::= QName
typedef xsd__QName wstop__SimpleTopicExpression;

/// Class wrapper
class wstop__SimpleTopicExpression__ : public xsd__anyType
{ public:
    wstop__SimpleTopicExpression         __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRules is a complexType.
class _tan__GetSupportedRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedRulesResponse is a complexType.
class _tan__GetSupportedRulesResponse
{ public:
/// Element SupportedRules of type "http://www.onvif.org/ver10/schema":SupportedRules.
    onv__SupportedRules*                 SupportedRules                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRules

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateRules is a complexType.
class _tan__CreateRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > Rule                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateRulesResponse is a complexType.
class _tan__CreateRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteRules is a complexType.
class _tan__DeleteRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > RuleName                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteRulesResponse is a complexType.
class _tan__DeleteRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyRules is a complexType.
class _tan__ModifyRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > Rule                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyRulesResponse is a complexType.
class _tan__ModifyRulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetRules is a complexType.
class _tan__GetRules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetRulesResponse is a complexType.
class _tan__GetRulesResponse
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > Rule                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModules is a complexType.
class _tan__GetSupportedAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetSupportedAnalyticsModulesResponse is a complexType.
class _tan__GetSupportedAnalyticsModulesResponse
{ public:
/// Element SupportedAnalyticsModules of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules.
    onv__SupportedAnalyticsModules*      SupportedAnalyticsModules      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModules is a complexType.
class _tan__CreateAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > AnalyticsModule                1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":CreateAnalyticsModulesResponse is a complexType.
class _tan__CreateAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModules is a complexType.
class _tan__DeleteAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > AnalyticsModuleName            1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":DeleteAnalyticsModulesResponse is a complexType.
class _tan__DeleteAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModules is a complexType.
class _tan__ModifyAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// Vector of onv__Config* with length 1..unbounded
    std::vector<onv__Config*           > AnalyticsModule                1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":ModifyAnalyticsModulesResponse is a complexType.
class _tan__ModifyAnalyticsModulesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules

/// "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModules is a complexType.
class _tan__GetAnalyticsModules
{ public:
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse

/// "http://www.onvif.org/ver20/analytics/wsdl":GetAnalyticsModulesResponse is a complexType.
class _tan__GetAnalyticsModulesResponse
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > AnalyticsModule                0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
class onv__DeviceEntity : public xsd__anyType
{ public:
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
class onv__IntRectangle : public xsd__anyType
{ public:
/// Attribute x of type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute y of type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute width of type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute height of type xs:int.
   @int                                  height                         1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
class onv__IntRectangleRange : public xsd__anyType
{ public:
/// Element XRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       XRange                         1;	///< Required element.
/// Element YRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       YRange                         1;	///< Required element.
/// Element WidthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       WidthRange                     1;	///< Required element.
/// Element HeightRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       HeightRange                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IntRange is a complexType.
class onv__IntRange : public xsd__anyType
{ public:
/// Element Min of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element Max of type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
class onv__FloatRange : public xsd__anyType
{ public:
/// Element Min of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element Max of type xs:float.
    float                                Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
class onv__DurationRange : public xsd__anyType
{ public:
/// Element Min of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element Max of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IntList is a complexType.
class onv__IntList : public xsd__anyType
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > Items                          0;
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
class onv__VideoSourceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Profile is a complexType.
class onv__Profile : public xsd__anyType
{ public:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onv__VideoSourceConfiguration*       VideoSourceConfiguration       0;	///< Optional element.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onv__AudioSourceConfiguration*       AudioSourceConfiguration       0;	///< Optional element.
/// Element VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onv__VideoEncoderConfiguration*      VideoEncoderConfiguration      0;	///< Optional element.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onv__AudioEncoderConfiguration*      AudioEncoderConfiguration      0;	///< Optional element.
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onv__VideoAnalyticsConfiguration*    VideoAnalyticsConfiguration    0;	///< Optional element.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    onv__PTZConfiguration*               PTZConfiguration               0;	///< Optional element.
/// Element MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onv__MetadataConfiguration*          MetadataConfiguration          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    onv__ProfileExtension*               Extension                      0;	///< Optional element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
/// Attribute fixed of type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
class onv__ProfileExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
class onv__ConfigurationEntity : public xsd__anyType
{ public:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
class onv__VideoSourceConfigurationOptions : public xsd__anyType
{ public:
/// Element BoundsRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    onv__IntRectangleRange*              BoundsRange                    1;	///< Required element.
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > VideoSourceTokensAvailable     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    onv__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
class onv__VideoSourceConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
class onv__VideoResolution : public xsd__anyType
{ public:
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
class onv__VideoRateControl : public xsd__anyType
{ public:
/// Element FrameRateLimit of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// Element EncodingInterval of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// Element BitrateLimit of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
class onv__Mpeg4Configuration : public xsd__anyType
{ public:
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// Element Mpeg4Profile of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum onv__Mpeg4Profile               Mpeg4Profile                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
class onv__H264Configuration : public xsd__anyType
{ public:
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// Element H264Profile of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum onv__H264Profile                H264Profile                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
class onv__VideoEncoderConfigurationOptions : public xsd__anyType
{ public:
/// Element QualityRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       QualityRange                   1;	///< Required element.
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions.
    onv__JpegOptions*                    JPEG                           0;	///< Optional element.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    onv__Mpeg4Options*                   MPEG4                          0;	///< Optional element.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options.
    onv__H264Options*                    H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    onv__VideoEncoderOptionsExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
class onv__VideoEncoderOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
class onv__JpegOptions : public xsd__anyType
{ public:
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
class onv__Mpeg4Options : public xsd__anyType
{ public:
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       GovLengthRange                 1;	///< Required element.
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
/// Vector of enum onv__Mpeg4Profile with length 1..unbounded
    std::vector<enum onv__Mpeg4Profile > Mpeg4ProfilesSupported         1;
};

/// "http://www.onvif.org/ver10/schema":H264Options is a complexType.
class onv__H264Options : public xsd__anyType
{ public:
/// Vector of onv__VideoResolution* with length 1..unbounded
    std::vector<onv__VideoResolution*  > ResolutionsAvailable           1;
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       GovLengthRange                 1;	///< Required element.
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       FrameRateRange                 1;	///< Required element.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onv__IntRange*                       EncodingIntervalRange          1;	///< Required element.
/// Vector of enum onv__H264Profile with length 1..unbounded
    std::vector<enum onv__H264Profile  > H264ProfilesSupported          1;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
class onv__AudioSourceConfigurationOptions : public xsd__anyType
{ public:
/// Vector of onv__ReferenceToken with length 1..unbounded
    std::vector<onv__ReferenceToken    > InputTokensAvailable           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    onv__AudioSourceOptionsExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
class onv__AudioSourceOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
class onv__AudioEncoderConfigurationOptions : public xsd__anyType
{ public:
/// Vector of onv__AudioEncoderConfigurationOption* with length 0..unbounded
    std::vector<onv__AudioEncoderConfigurationOption*> Options                        0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
class onv__AudioEncoderConfigurationOption : public xsd__anyType
{ public:
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onv__AudioEncoding              Encoding                       1;	///< Required element.
/// Element BitrateList of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        BitrateList                    1;	///< Required element.
/// Element SampleRateList of type "http://www.onvif.org/ver10/schema":IntList.
    onv__IntList*                        SampleRateList                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
class onv__PTZFilter : public xsd__anyType
{ public:
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// Element Position of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
/// @brief Subcription handling in the same way as base notification subscription.
class onv__EventSubscription : public xsd__anyType
{ public:
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnb__FilterType*                    Filter                         0;	///< Optional element.
    class _onv__EventSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
class onv__MetadataConfigurationOptions : public xsd__anyType
{ public:
/// Element PTZStatusFilterOptions of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    onv__PTZStatusFilterOptions*         PTZStatusFilterOptions         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
class onv__PTZStatusFilterOptions : public xsd__anyType
{ public:
/// Element PanTiltStatusSupported of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// Element ZoomStatusSupported of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
class onv__MulticastConfiguration : public xsd__anyType
{ public:
/// Element Address of type "http://www.onvif.org/ver10/schema":IPAddress.
    onv__IPAddress*                      Address                        1;	///< Required element.
/// Element Port of type xs:int.
    int                                  Port                           1;	///< Required element.
/// Element TTL of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
class onv__StreamSetup : public xsd__anyType
{ public:
/// Element Stream of type "http://www.onvif.org/ver10/schema":StreamType.
    enum onv__StreamType                 Stream                         1;	///< Required element.
/// Element Transport of type "http://www.onvif.org/ver10/schema":Transport.
    onv__Transport*                      Transport                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Transport is a complexType.
class onv__Transport : public xsd__anyType
{ public:
/// Element Protocol of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum onv__TransportProtocol          Protocol                       1;	///< Required element.
/// Element Tunnel of type "http://www.onvif.org/ver10/schema":Transport.
    onv__Transport*                      Tunnel                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
class onv__MediaUri : public xsd__anyType
{ public:
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// Element InvalidAfterConnect of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// Element InvalidAfterReboot of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Scope is a complexType.
class onv__Scope : public xsd__anyType
{ public:
/// Element ScopeDef of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum onv__ScopeDefinition            ScopeDef                       1;	///< Required element.
/// Element ScopeItem of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
class onv__NetworkInterfaceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
class onv__NetworkInterfaceLink : public xsd__anyType
{ public:
/// Element AdminSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onv__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// Element OperSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onv__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    onv__IANA_IfTypes                    InterfaceType                  1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
class onv__NetworkInterfaceConnectionSetting : public xsd__anyType
{ public:
/// Element AutoNegotiation of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// Element Speed of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// Element Duplex of type "http://www.onvif.org/ver10/schema":Duplex.
    enum onv__Duplex                     Duplex                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
class onv__NetworkInterfaceInfo : public xsd__anyType
{ public:
/// Element Name of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// Element HwAddress of type "http://www.onvif.org/ver10/schema":HwAddress.
    onv__HwAddress                       HwAddress                      1;	///< Required element.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
class onv__IPv6NetworkInterface : public xsd__anyType
{ public:
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    onv__IPv6Configuration*              Config                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
class onv__IPv4NetworkInterface : public xsd__anyType
{ public:
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    onv__IPv4Configuration*              Config                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
class onv__IPv4Configuration : public xsd__anyType
{ public:
/// Vector of onv__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv4Address*> Manual                         0;
/// Element LinkLocal of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    onv__PrefixedIPv4Address*            LinkLocal                      0;	///< Optional element.
/// Element FromDHCP of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    onv__PrefixedIPv4Address*            FromDHCP                       0;	///< Optional element.
/// Element DHCP of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
class onv__IPv6Configuration : public xsd__anyType
{ public:
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum onv__IPv6DHCPConfiguration      DHCP                           1;	///< Required element.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> Manual                         0;
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> LinkLocal                      0;
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> FromDHCP                       0;
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> FromRA                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    onv__IPv6ConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
class onv__IPv6ConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
class onv__NetworkProtocol : public xsd__anyType
{ public:
/// Element Name of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum onv__NetworkProtocolType        Name                           1;	///< Required element.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Vector of int with length 1..unbounded
    std::vector<int                    > Port                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    onv__NetworkProtocolExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
class onv__NetworkProtocolExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
class onv__NetworkHost : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum onv__NetworkHostType            Type                           1;	///< Required element.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onv__IPv4Address*                    IPv4Address                    0;	///< Optional element.
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onv__IPv6Address*                    IPv6Address                    0;	///< Optional element.
/// Element DNSname of type "http://www.onvif.org/ver10/schema":DNSName.
    onv__DNSName*                        DNSname                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    onv__NetworkHostExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
class onv__NetworkHostExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
class onv__IPAddress : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":IPType.
    enum onv__IPType                     Type                           1;	///< Required element.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onv__IPv4Address*                    IPv4Address                    0;	///< Optional element.
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onv__IPv6Address*                    IPv6Address                    0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
class onv__PrefixedIPv4Address : public xsd__anyType
{ public:
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onv__IPv4Address                     Address                        1;	///< Required element.
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
class onv__PrefixedIPv6Address : public xsd__anyType
{ public:
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onv__IPv6Address                     Address                        1;	///< Required element.
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
class onv__HostnameInformation : public xsd__anyType
{ public:
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Element Name of type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    onv__HostnameInformationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
class onv__HostnameInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
class onv__DNSInformation : public xsd__anyType
{ public:
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// Vector of onv__IPAddress* with length 0..unbounded
    std::vector<onv__IPAddress*        > DNSFromDHCP                    0;
/// Vector of onv__IPAddress* with length 0..unbounded
    std::vector<onv__IPAddress*        > DNSManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    onv__DNSInformationExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
class onv__DNSInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
class onv__NTPInformation : public xsd__anyType
{ public:
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > NTPFromDHCP                    0;
/// Vector of onv__NetworkHost* with length 0..unbounded
    std::vector<onv__NetworkHost*      > NTPManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    onv__NTPInformationExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
class onv__NTPInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
class onv__DynamicDNSInformation : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum onv__DynamicDNSType             Type                           1;	///< Required element.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    onv__DNSName*                        Name                           0;	///< Optional element.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    onv__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
class onv__DynamicDNSInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
class onv__NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onv__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    onv__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    onv__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    onv__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
class onv__NetworkInterfaceSetConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
class onv__IPv6NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> Manual                         0;
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum onv__IPv6DHCPConfiguration*     DHCP                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
class onv__IPv4NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// Vector of onv__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv4Address*> Manual                         0;
/// Element DHCP of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
class onv__NetworkGateway : public xsd__anyType
{ public:
/// Vector of onv__IPv4Address with length 0..unbounded
    std::vector<onv__IPv4Address       > IPv4Address                    0;
/// Vector of onv__IPv6Address with length 0..unbounded
    std::vector<onv__IPv6Address       > IPv6Address                    0;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
class onv__NetworkZeroConfiguration : public xsd__anyType
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  InterfaceToken                 1;	///< Required element.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Vector of onv__IPv4Address with length 0..unbounded
    std::vector<onv__IPv4Address       > Addresses                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    onv__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
class onv__NetworkZeroConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
class onv__IPAddressFilter : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum onv__IPAddressFilterType        Type                           1;	///< Required element.
/// Vector of onv__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv4Address*> IPv4Address                    0;
/// Vector of onv__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onv__PrefixedIPv6Address*> IPv6Address                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    onv__IPAddressFilterExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
class onv__IPAddressFilterExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
class onv__Capabilities : public xsd__anyType
{ public:
/// Element Analytics of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    onv__AnalyticsCapabilities*          Analytics                      0;	///< Optional element.
/// Element Device of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    onv__DeviceCapabilities*             Device                         0;	///< Optional element.
/// Element Events of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    onv__EventCapabilities*              Events                         0;	///< Optional element.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    onv__ImagingCapabilities*            Imaging                        0;	///< Optional element.
/// Element Media of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    onv__MediaCapabilities*              Media                          0;	///< Optional element.
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    onv__PTZCapabilities*                PTZ                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    onv__CapabilitiesExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
class onv__CapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
class onv__AnalyticsCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element RuleSupport of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// Element AnalyticsModuleSupport of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
class onv__DeviceCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element Network of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    onv__NetworkCapabilities*            Network                        0;	///< Optional element.
/// Element System of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    onv__SystemCapabilities*             System                         0;	///< Optional element.
/// Element IO of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    onv__IOCapabilities*                 IO                             0;	///< Optional element.
/// Element Security of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    onv__SecurityCapabilities*           Security                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    onv__DeviceCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
class onv__DeviceCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
class onv__EventCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element WSSubscriptionPolicySupport of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// Element WSPullPointSupport of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// Element WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
class onv__IOCapabilities : public xsd__anyType
{ public:
/// Element InputConnectors of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// Element RelayOutputs of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    onv__IOCapabilitiesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
class onv__IOCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
class onv__MediaCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    onv__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    onv__MediaCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
class onv__MediaCapabilitiesExtension : public xsd__anyType
{ public:
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    onv__ProfileCapabilities*            ProfileCapabilities            1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
class onv__RealTimeStreamingCapabilities : public xsd__anyType
{ public:
/// Element RTPMulticast of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// Element RTP_TCP of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    onv__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
class onv__RealTimeStreamingCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
class onv__ProfileCapabilities : public xsd__anyType
{ public:
/// Element MaximumNumberOfProfiles of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
class onv__NetworkCapabilities : public xsd__anyType
{ public:
/// Element IPFilter of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// Element ZeroConfiguration of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// Element IPVersion6 of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// Element DynDNS of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    onv__NetworkCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
class onv__NetworkCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
class onv__SecurityCapabilities : public xsd__anyType
{ public:
/// Element TLS1.1 of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// Element TLS1.2 of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// Element OnboardKeyGeneration of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// Element AccessPolicyConfig of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// Element X.509Token of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// Element SAMLToken of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// Element KerberosToken of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// Element RELToken of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    onv__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
class onv__SecurityCapabilitiesExtension : public xsd__anyType
{ public:
/// Element TLS1.0 of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":StorageCapabilities is a complexType.
class onv__StorageCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
class onv__SystemCapabilities : public xsd__anyType
{ public:
/// Element DiscoveryResolve of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// Element DiscoveryBye of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// Element RemoteDiscovery of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// Element SystemBackup of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// Element SystemLogging of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// Element FirmwareUpgrade of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// Vector of onv__OnvifVersion* with length 1..unbounded
    std::vector<onv__OnvifVersion*     > SupportedVersions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    onv__SystemCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
class onv__SystemCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
class onv__OnvifVersion : public xsd__anyType
{ public:
/// Element Major of type xs:int.
    int                                  Major                          1;	///< Required element.
/// Element Minor of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
class onv__ImagingCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
class onv__PTZCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
class onv__SystemLog : public xsd__anyType
{ public:
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Binary                         0;	///< Optional element.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
class onv__SupportInformation : public xsd__anyType
{ public:
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Binary                         0;	///< Optional element.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
class onv__BinaryData : public xsd__anyType
{ public:
/// Element Data of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
class onv__AttachmentData : public xsd__anyType
{ public:
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @char*                                xmime__contentType             0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
class onv__BackupFile : public xsd__anyType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element Data of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onv__AttachmentData*                 Data                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
class onv__SystemDateTime : public xsd__anyType
{ public:
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum onv__SetDateTimeType            DateTimeType                   1;	///< Required element.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    onv__TimeZone*                       TimeZone                       0;	///< Optional element.
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onv__DateTime*                       UTCDateTime                    0;	///< Optional element.
/// Element LocalDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onv__DateTime*                       LocalDateTime                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    onv__SystemDateTimeExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
class onv__SystemDateTimeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DateTime is a complexType.
class onv__DateTime : public xsd__anyType
{ public:
/// Element Time of type "http://www.onvif.org/ver10/schema":Time.
    onv__Time*                           Time                           1;	///< Required element.
/// Element Date of type "http://www.onvif.org/ver10/schema":Date.
    onv__Date*                           Date                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Date is a complexType.
class onv__Date : public xsd__anyType
{ public:
/// Element Year of type xs:int.
    int                                  Year                           1;	///< Required element.
/// Element Month of type xs:int.
    int                                  Month                          1;	///< Required element.
/// Element Day of type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Time is a complexType.
class onv__Time : public xsd__anyType
{ public:
/// Element Hour of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// Element Minute of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// Element Second of type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
class onv__TimeZone : public xsd__anyType
{ public:
/// @brief The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3 Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3 CET = designation for standard time when daylight saving is not in force -1 = offset in hours = negative so 1 hour east of Greenwich meridian CEST = designation when daylight saving is in force ("Central European Summer Time") , = no offset number between code and comma, so default to one hour ahead for daylight saving M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month) /2, = the local time when the switch occurs = 2 a.m. in this case M10.5.0 = when daylight saving ends = the last Sunday in October. /3, = the local time when the switch occurs = 3 a.m. in this case
/// Element TZ of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":User is a complexType.
class onv__User : public xsd__anyType
{ public:
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element UserLevel of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum onv__UserLevel                  UserLevel                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":UserExtension.
    onv__UserExtension*                  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
class onv__UserExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
class onv__CertificateGenerationParameters : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element ValidNotBefore of type xs:token.
    xsd__token*                          ValidNotBefore                 0;	///< Optional element.
/// Element ValidNotAfter of type xs:token.
    xsd__token*                          ValidNotAfter                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    onv__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
class onv__CertificateGenerationParametersExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Certificate is a complexType.
class onv__Certificate : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    onv__BinaryData*                     Certificate                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
class onv__CertificateStatus : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
class onv__RelayOutputSettings : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum onv__RelayMode                  Mode                           1;	///< Required element.
/// Element DelayTime of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// Element IdleState of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum onv__RelayIdleState             IdleState                      1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
class onv__PTZNodeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
class onv__PTZConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
class onv__PTZConfigurationOptions : public xsd__anyType
{ public:
/// Element Spaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    onv__PTZSpaces*                      Spaces                         1;	///< Required element.
/// Element PTZTimeout of type "http://www.onvif.org/ver10/schema":DurationRange.
    onv__DurationRange*                  PTZTimeout                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
class onv__PanTiltLimits : public xsd__anyType
{ public:
/// Element Range of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    onv__Space2DDescription*             Range                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
class onv__ZoomLimits : public xsd__anyType
{ public:
/// Element Range of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    onv__Space1DDescription*             Range                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
class onv__PTZSpaces : public xsd__anyType
{ public:
/// Vector of onv__Space2DDescription* with length 0..unbounded
    std::vector<onv__Space2DDescription*> AbsolutePanTiltPositionSpace   0;
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> AbsoluteZoomPositionSpace      0;
/// Vector of onv__Space2DDescription* with length 0..unbounded
    std::vector<onv__Space2DDescription*> RelativePanTiltTranslationSpace 0;
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> RelativeZoomTranslationSpace   0;
/// Vector of onv__Space2DDescription* with length 0..unbounded
    std::vector<onv__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> ContinuousZoomVelocitySpace    0;
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> PanTiltSpeedSpace              0;
/// Vector of onv__Space1DDescription* with length 0..unbounded
    std::vector<onv__Space1DDescription*> ZoomSpeedSpace                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    onv__PTZSpacesExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
class onv__PTZSpacesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
class onv__Space2DDescription : public xsd__anyType
{ public:
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     XRange                         1;	///< Required element.
/// Element YRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YRange                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
class onv__Space1DDescription : public xsd__anyType
{ public:
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     XRange                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
class onv__Vector2D : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute y of type xs:float.
   @float                                y                              1;	///< Required attribute.
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
class onv__Vector1D : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
class onv__PTZVector : public xsd__anyType
{ public:
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    onv__Vector2D*                       PanTilt                        0;	///< Optional element.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    onv__Vector1D*                       Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
class onv__PTZSpeed : public xsd__anyType
{ public:
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    onv__Vector2D*                       PanTilt                        0;	///< Optional element.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    onv__Vector1D*                       Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
class onv__PTZStatus : public xsd__anyType
{ public:
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      Position                       0;	///< Optional element.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    onv__PTZMoveStatus*                  MoveStatus                     0;	///< Optional element.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element UtcTime of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
class onv__PTZPreset : public xsd__anyType
{ public:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name*                           Name                           0;	///< Optional element.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onv__PTZVector*                      PTZPosition                    0;	///< Optional element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken*                 token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
class onv__PTZMoveStatus : public xsd__anyType
{ public:
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus*                PanTilt                        0;	///< Optional element.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus*                Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
class onv__ImagingStatus : public xsd__anyType
{ public:
/// Element FocusStatus of type "http://www.onvif.org/ver10/schema":FocusStatus.
    onv__FocusStatus*                    FocusStatus                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
class onv__FocusStatus : public xsd__anyType
{ public:
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus                 MoveStatus                     1;	///< Required element.
/// Element Error of type xs:string.
    std::string                          Error                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
class onv__FocusConfiguration : public xsd__anyType
{ public:
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum onv__AutoFocusMode              AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// @brief Parameter to set autofocus far limit (unit: meter). If set to 0.0, infinity will be used.
/// Element FarLimit of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
class onv__ImagingSettings : public xsd__anyType
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    onv__BacklightCompensation*          BacklightCompensation          0;	///< Optional element.
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure.
    onv__Exposure*                       Exposure                       0;	///< Optional element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    onv__FocusConfiguration*             Focus                          0;	///< Optional element.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum onv__IrCutFilterMode*           IrCutFilter                    0;	///< Optional element.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    onv__WideDynamicRange*               WideDynamicRange               0;	///< Optional element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    onv__WhiteBalance*                   WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    onv__ImagingSettingsExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
class onv__ImagingSettingsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Exposure is a complexType.
class onv__Exposure : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum onv__ExposureMode               Mode                           1;	///< Required element.
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum onv__ExposurePriority           Priority                       1;	///< Required element.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      Window                         1;	///< Required element.
/// Element MinExposureTime of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// Element MaxExposureTime of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// Element MinGain of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// Element MaxGain of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// Element MinIris of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// Element MaxIris of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// Element ExposureTime of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// Element Gain of type xs:float.
    float                                Gain                           1;	///< Required element.
/// Element Iris of type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
class onv__WideDynamicRange : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum onv__WideDynamicMode            Mode                           1;	///< Required element.
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
class onv__BacklightCompensation : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum onv__BacklightCompensationMode  Mode                           1;	///< Required element.
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
class onv__ImagingOptions : public xsd__anyType
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    onv__BacklightCompensationOptions*   BacklightCompensation          1;	///< Required element.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Brightness                     1;	///< Required element.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ColorSaturation                1;	///< Required element.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Contrast                       1;	///< Required element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    onv__ExposureOptions*                Exposure                       1;	///< Required element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions.
    onv__FocusOptions*                   Focus                          1;	///< Required element.
/// Vector of enum onv__IrCutFilterMode with length 1..unbounded
    std::vector<enum onv__IrCutFilterMode> IrCutFilterModes               1;
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Sharpness                      1;	///< Required element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    onv__WideDynamicRangeOptions*        WideDynamicRange               1;	///< Required element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    onv__WhiteBalanceOptions*            WhiteBalance                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
class onv__WideDynamicRangeOptions : public xsd__anyType
{ public:
/// Vector of enum onv__WideDynamicMode with length 1..unbounded
    std::vector<enum onv__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
class onv__BacklightCompensationOptions : public xsd__anyType
{ public:
/// Vector of enum onv__WideDynamicMode with length 1..unbounded
    std::vector<enum onv__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
class onv__FocusOptions : public xsd__anyType
{ public:
/// Vector of enum onv__AutoFocusMode with length 0..unbounded
    std::vector<enum onv__AutoFocusMode> AutoFocusModes                 0;
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     DefaultSpeed                   1;	///< Required element.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     NearLimit                      1;	///< Required element.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     FarLimit                       1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
class onv__ExposureOptions : public xsd__anyType
{ public:
/// Vector of enum onv__ExposureMode with length 1..unbounded
    std::vector<enum onv__ExposureMode > Mode                           1;
/// Vector of enum onv__ExposurePriority with length 1..unbounded
    std::vector<enum onv__ExposurePriority> Priority                       1;
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinExposureTime                1;	///< Required element.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxExposureTime                1;	///< Required element.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinGain                        1;	///< Required element.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxGain                        1;	///< Required element.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinIris                        1;	///< Required element.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxIris                        1;	///< Required element.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ExposureTime                   1;	///< Required element.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Gain                           1;	///< Required element.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Iris                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
class onv__WhiteBalanceOptions : public xsd__anyType
{ public:
/// Vector of enum onv__WhiteBalanceMode with length 1..unbounded
    std::vector<enum onv__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YrGain                         1;	///< Required element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YbGain                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
class onv__FocusMove : public xsd__anyType
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    onv__AbsoluteFocus*                  Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    onv__RelativeFocus*                  Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    onv__ContinuousFocus*                Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
class onv__AbsoluteFocus : public xsd__anyType
{ public:
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
class onv__RelativeFocus : public xsd__anyType
{ public:
/// Element Distance of type xs:float.
    float                                Distance                       1;	///< Required element.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
class onv__ContinuousFocus : public xsd__anyType
{ public:
/// Element Speed of type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
class onv__MoveOptions : public xsd__anyType
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    onv__AbsoluteFocusOptions*           Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    onv__RelativeFocusOptions*           Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    onv__ContinuousFocusOptions*         Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
class onv__AbsoluteFocusOptions : public xsd__anyType
{ public:
/// Element Position of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Position                       1;	///< Required element.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
class onv__RelativeFocusOptions : public xsd__anyType
{ public:
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Distance                       1;	///< Required element.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
class onv__ContinuousFocusOptions : public xsd__anyType
{ public:
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
class onv__WhiteBalance : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum onv__WhiteBalanceMode           Mode                           1;	///< Required element.
/// Element CrGain of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// Element CbGain of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
class onv__ImagingStatus20 : public xsd__anyType
{ public:
/// Element FocusStatus20 of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    onv__FocusStatus20*                  FocusStatus20                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    onv__ImagingStatus20Extension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
class onv__ImagingStatus20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
class onv__FocusStatus20 : public xsd__anyType
{ public:
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onv__MoveStatus                 MoveStatus                     1;	///< Required element.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    onv__FocusStatus20Extension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
class onv__FocusStatus20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
class onv__ImagingSettings20 : public xsd__anyType
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    onv__BacklightCompensation20*        BacklightCompensation          0;	///< Optional element.
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure20.
    onv__Exposure20*                     Exposure                       0;	///< Optional element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    onv__FocusConfiguration20*           Focus                          0;	///< Optional element.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum onv__IrCutFilterMode*           IrCutFilter                    0;	///< Optional element.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    onv__WideDynamicRange20*             WideDynamicRange               0;	///< Optional element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    onv__WhiteBalance20*                 WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    onv__ImagingSettingsExtension20*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
class onv__ImagingSettingsExtension20 : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
class onv__WideDynamicRange20 : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum onv__WideDynamicMode            Mode                           1;	///< Required element.
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
class onv__BacklightCompensation20 : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum onv__BacklightCompensationMode  Mode                           1;	///< Required element.
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
class onv__Exposure20 : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum onv__ExposureMode               Mode                           1;	///< Required element.
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum onv__ExposurePriority*          Priority                       0;	///< Optional element.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      Window                         0;	///< Optional element.
/// Element MinExposureTime of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// Element MaxExposureTime of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// Element MinGain of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// Element MaxGain of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// Element MinIris of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// Element MaxIris of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// Element ExposureTime of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// Element Gain of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// Element Iris of type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
class onv__ImagingOptions20 : public xsd__anyType
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    onv__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Brightness                     0;	///< Optional element.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ColorSaturation                0;	///< Optional element.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Contrast                       0;	///< Optional element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    onv__ExposureOptions20*              Exposure                       0;	///< Optional element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    onv__FocusOptions20*                 Focus                          0;	///< Optional element.
/// Vector of enum onv__IrCutFilterMode with length 0..unbounded
    std::vector<enum onv__IrCutFilterMode> IrCutFilterModes               0;
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Sharpness                      0;	///< Optional element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    onv__WideDynamicRangeOptions20*      WideDynamicRange               0;	///< Optional element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    onv__WhiteBalanceOptions20*          WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    onv__ImagingOptions20Extension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
class onv__ImagingOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
class onv__WideDynamicRangeOptions20 : public xsd__anyType
{ public:
/// Vector of enum onv__WideDynamicMode with length 1..unbounded
    std::vector<enum onv__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
class onv__BacklightCompensationOptions20 : public xsd__anyType
{ public:
/// Vector of enum onv__BacklightCompensationMode with length 1..unbounded
    std::vector<enum onv__BacklightCompensationMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
class onv__ExposureOptions20 : public xsd__anyType
{ public:
/// Vector of enum onv__ExposureMode with length 1..unbounded
    std::vector<enum onv__ExposureMode > Mode                           1;
/// Vector of enum onv__ExposurePriority with length 0..unbounded
    std::vector<enum onv__ExposurePriority> Priority                       0;
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinExposureTime                0;	///< Optional element.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxExposureTime                0;	///< Optional element.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinGain                        0;	///< Optional element.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxGain                        0;	///< Optional element.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MinIris                        0;	///< Optional element.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     MaxIris                        0;	///< Optional element.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     ExposureTime                   0;	///< Optional element.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Gain                           0;	///< Optional element.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Iris                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
class onv__MoveOptions20 : public xsd__anyType
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    onv__AbsoluteFocusOptions*           Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    onv__RelativeFocusOptions20*         Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    onv__ContinuousFocusOptions*         Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
class onv__RelativeFocusOptions20 : public xsd__anyType
{ public:
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Distance                       1;	///< Required element.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
class onv__WhiteBalance20 : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum onv__WhiteBalanceMode           Mode                           1;	///< Required element.
/// Element CrGain of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// Element CbGain of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    onv__WhiteBalance20Extension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
class onv__WhiteBalance20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
class onv__FocusConfiguration20 : public xsd__anyType
{ public:
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum onv__AutoFocusMode              AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// @brief Parameter to set autofocus far limit (unit: meter). If set to 0.0, infinity will be used.
/// Element FarLimit of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    onv__FocusConfiguration20Extension*  Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
class onv__FocusConfiguration20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
class onv__WhiteBalanceOptions20 : public xsd__anyType
{ public:
/// Vector of enum onv__WhiteBalanceMode with length 1..unbounded
    std::vector<enum onv__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YrGain                         0;	///< Optional element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     YbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    onv__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
class onv__WhiteBalanceOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
class onv__FocusOptions20 : public xsd__anyType
{ public:
/// Vector of enum onv__AutoFocusMode with length 0..unbounded
    std::vector<enum onv__AutoFocusMode> AutoFocusModes                 0;
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     DefaultSpeed                   0;	///< Optional element.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     NearLimit                      0;	///< Optional element.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onv__FloatRange*                     FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    onv__FocusOptions20Extension*        Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
class onv__FocusOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
class onv__MessageExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ItemList is a complexType.
class onv__ItemList : public xsd__anyType
{ public:
/// Size of SimpleItem array is 0..unbounded
   $int                                  __sizeSimpleItem               0;
    class _onv__ItemList_SimpleItem
    {
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Value of type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;
/// Size of ElementItem array is 0..unbounded
   $int                                  __sizeElementItem              0;
    class _onv__ItemList_ElementItem
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    onv__ItemListExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
class onv__ItemListExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
class onv__MessageDescription : public xsd__anyType
{ public:
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    onv__MessageDescriptionExtension*    Extension                      0;	///< Optional element.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
class onv__MessageDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
class onv__ItemListDescription : public xsd__anyType
{ public:
/// Size of SimpleItemDescription array is 0..unbounded
   $int                                  __sizeSimpleItemDescription    0;
    class _onv__ItemListDescription_SimpleItemDescription
    {
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }                                   *SimpleItemDescription          0;
/// Size of ElementItemDescription array is 0..unbounded
   $int                                  __sizeElementItemDescription   0;
    class _onv__ItemListDescription_ElementItemDescription
    {
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }                                   *ElementItemDescription         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    onv__ItemListDescriptionExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
class onv__ItemListDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Vector is a complexType.
class onv__Vector : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
class onv__Rectangle : public xsd__anyType
{ public:
/// Attribute bottom of type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute top of type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute right of type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute left of type xs:float.
   @float*                               left                           0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Polygon is a complexType.
class onv__Polygon : public xsd__anyType
{ public:
/// Vector of onv__Vector* with length 3..unbounded
    std::vector<onv__Vector*           > Point                          3;
};

/// "http://www.onvif.org/ver10/schema":Polyline is a complexType.
class onv__Polyline : public xsd__anyType
{ public:
/// Vector of onv__Vector* with length 2..unbounded
    std::vector<onv__Vector*           > Point                          2;
};

/// "http://www.onvif.org/ver10/schema":Color is a complexType.
class onv__Color : public xsd__anyType
{ public:
/// Attribute X of type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute Y of type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute Z of type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
class onv__ColorCovariance : public xsd__anyType
{ public:
/// Attribute XX of type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute YY of type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute ZZ of type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute XY of type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute XZ of type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute YZ of type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Appearance is a complexType.
class onv__Appearance : public xsd__anyType
{ public:
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onv__Transformation*                 Transformation                 0;	///< Optional element.
/// Element Shape of type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    onv__ShapeDescriptor*                Shape                          0;	///< Optional element.
/// Element Color of type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    onv__ColorDescriptor*                Color                          0;	///< Optional element.
/// Element Class of type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    onv__ClassDescriptor*                Class                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    onv__AppearanceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
class onv__AppearanceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
class onv__ShapeDescriptor : public xsd__anyType
{ public:
/// Element BoundingBox of type "http://www.onvif.org/ver10/schema":Rectangle.
    onv__Rectangle*                      BoundingBox                    1;	///< Required element.
/// Element CenterOfGravity of type "http://www.onvif.org/ver10/schema":Vector.
    onv__Vector*                         CenterOfGravity                1;	///< Required element.
/// Vector of onv__Polygon* with length 0..unbounded
    std::vector<onv__Polygon*          > Polygon                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    onv__ShapeDescriptorExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
class onv__ShapeDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
class onv__ColorDescriptor : public xsd__anyType
{ public:
/// Size of ColorCluster array is 0..unbounded
   $int                                  __sizeColorCluster             0;
    class _onv__ColorDescriptor_ColorCluster
    {
/// Element Color of type "http://www.onvif.org/ver10/schema":Color.
    onv__Color*                          Color                          1;	///< Required element.
/// Element Weight of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element Covariance of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    onv__ColorCovariance*                Covariance                     0;	///< Optional element.
    }                                   *ColorCluster                   0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    onv__ColorDescriptorExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
class onv__ColorDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
class onv__ClassDescriptor : public xsd__anyType
{ public:
/// Size of ClassCandidate array is 0..unbounded
   $int                                  __sizeClassCandidate           0;
    class _onv__ClassDescriptor_ClassCandidate
    {
/// Element Type of type "http://www.onvif.org/ver10/schema":ClassType.
    enum onv__ClassType                  Type                           1;	///< Required element.
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }                                   *ClassCandidate                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    onv__ClassDescriptorExtension*       Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
class onv__ClassDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
class onv__ObjectExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Transformation is a complexType.
class onv__Transformation : public xsd__anyType
{ public:
/// Element Translate of type "http://www.onvif.org/ver10/schema":Vector.
    onv__Vector*                         Translate                      0;	///< Optional element.
/// Element Scale of type "http://www.onvif.org/ver10/schema":Vector.
    onv__Vector*                         Scale                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    onv__TransformationExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
class onv__TransformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Frame is a complexType.
class onv__Frame : public xsd__anyType
{ public:
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onv__PTZStatus*                      PTZStatus                      0;	///< Optional element.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onv__Transformation*                 Transformation                 0;	///< Optional element.
/// Vector of onv__Object* with length 0..unbounded
    std::vector<onv__Object*           > Object                         0;
/// Element ObjectTree of type "http://www.onvif.org/ver10/schema":ObjectTree.
    onv__ObjectTree*                     ObjectTree                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FrameExtension.
    onv__FrameExtension*                 Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
class onv__FrameExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Merge is a complexType.
class onv__Merge : public xsd__anyType
{ public:
/// Vector of onv__ObjectId* with length 2..unbounded
    std::vector<onv__ObjectId*         > from                           2;
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       to                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Split is a complexType.
class onv__Split : public xsd__anyType
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       from                           1;	///< Required element.
/// Vector of onv__ObjectId* with length 2..unbounded
    std::vector<onv__ObjectId*         > to                             2;
};

/// "http://www.onvif.org/ver10/schema":Rename is a complexType.
class onv__Rename : public xsd__anyType
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       from                           1;	///< Required element.
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    onv__ObjectId*                       to                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
class onv__ObjectId : public xsd__anyType
{ public:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
class onv__Behaviour : public xsd__anyType
{ public:
    class _onv__Behaviour_Removed
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Removed                        0;	///< Optional element.
    class _onv__Behaviour_Idle
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Idle                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    onv__BehaviourExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
class onv__BehaviourExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
class onv__ObjectTree : public xsd__anyType
{ public:
/// Vector of onv__Rename* with length 0..unbounded
    std::vector<onv__Rename*           > Rename                         0;
/// Vector of onv__Split* with length 0..unbounded
    std::vector<onv__Split*            > Split                          0;
/// Vector of onv__Merge* with length 0..unbounded
    std::vector<onv__Merge*            > Merge                          0;
/// Vector of onv__ObjectId* with length 0..unbounded
    std::vector<onv__ObjectId*         > Delete                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    onv__ObjectTreeExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
class onv__ObjectTreeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
class onv__AnalyticsEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > AnalyticsModule                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    onv__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
class onv__AnalyticsEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
class onv__RuleEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onv__Config* with length 0..unbounded
    std::vector<onv__Config*           > Rule                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    onv__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
class onv__RuleEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Config is a complexType.
class onv__Config : public xsd__anyType
{ public:
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Parameters                     1;	///< Required element.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
class onv__ConfigDescription : public xsd__anyType
{ public:
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Parameters                     1;	///< Required element.
/// Size of Messages array is 0..unbounded
   $int                                  __sizeMessages                 0;
    class _onv__ConfigDescription_Messages
    {
/// INHERITED FROM onv__MessageDescription:
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onv__ItemListDescription*            Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    onv__MessageDescriptionExtension*    Extension                      0;	///< Optional element.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM onv__MessageDescription
/// Element ParentTopic of type xs:string.
    std::string                          ParentTopic                    1;	///< Required element.
    }                                   *Messages                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    onv__ConfigDescriptionExtension*     Extension                      0;	///< Optional element.
/// Attribute Name of type xs:QName.
   @xsd__QName                           Name                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
class onv__ConfigDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
class onv__SupportedRules : public xsd__anyType
{ public:
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > RuleContentSchemaLocation      0;
/// Vector of onv__ConfigDescription* with length 0..unbounded
    std::vector<onv__ConfigDescription*> RuleDescription                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    onv__SupportedRulesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
class onv__SupportedRulesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
class onv__SupportedAnalyticsModules : public xsd__anyType
{ public:
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > AnalyticsModuleContentSchemaLocation 0;
/// Vector of onv__ConfigDescription* with length 0..unbounded
    std::vector<onv__ConfigDescription*> AnalyticsModuleDescription     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    onv__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
class onv__SupportedAnalyticsModulesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
class onv__MetadataStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    class __onv__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _onv__union_MetadataStream selector: set to SOAP_UNION__onv__union_MetadataStream_<fieldname> or 0
    union _onv__union_MetadataStream
    {
/// Element VideoAnalytics of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    onv__VideoAnalyticsStream*           VideoAnalytics                 1;	///< Required element.
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZStream.
    onv__PTZStream*                      PTZ                            1;	///< Required element.
/// Element Event of type "http://www.onvif.org/ver10/schema":EventStream.
    onv__EventStream*                    Event                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    onv__MetadataStreamExtension*        Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
class onv__MetadataStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
class onv__VideoAnalyticsStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    class __onv__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _onv__union_VideoAnalyticsStream selector: set to SOAP_UNION__onv__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in type onv__VideoAnalyticsStream
    union _onv__union_VideoAnalyticsStream
    {
/// Element Frame of type "http://www.onvif.org/ver10/schema":Frame.
    onv__Frame*                          Frame                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    onv__VideoAnalyticsStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
class onv__VideoAnalyticsStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
class onv__PTZStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    class __onv__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _onv__union_PTZStream selector: set to SOAP_UNION__onv__union_PTZStream_<fieldname> or 0
/// Union for choice in type onv__PTZStream
    union _onv__union_PTZStream
    {
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onv__PTZStatus*                      PTZStatus                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    onv__PTZStreamExtension*             Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
class onv__PTZStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EventStream is a complexType.
class onv__EventStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    class __onv__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _onv__union_EventStream selector: set to SOAP_UNION__onv__union_EventStream_<fieldname> or 0
/// Union for choice in type onv__EventStream
    union _onv__union_EventStream
    {
/// Element reference "http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    wsnb__NotificationMessageHolderType*  wsnb__NotificationMessage      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    onv__EventStreamExtension*           Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
class onv__EventStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://www.onvif.org/ver10/schema":Message

/// "http://www.onvif.org/ver10/schema":Message is a complexType.
class _onv__Message
{ public:
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemList.
    onv__ItemList*                       Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageExtension.
    onv__MessageExtension*               Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute PropertyOperation of type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum onv__PropertyOperation*         PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
class wsnb__QueryExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
class wsnb__TopicExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
class wsnb__FilterType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
class wsnb__SubscriptionPolicyType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
class wsnb__NotificationMessageHolderType : public xsd__anyType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    wsnb__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
    class _wsnb__NotificationMessageHolderType_Message
    {
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    Message                        1;	///< Required element.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP

/// "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
class _wsnb__NotificationProducerRP
{ public:
/// Vector of wsnb__TopicExpressionType* element refs with length 0..unbounded
    std::vector<wsnb__TopicExpressionType*> TopicExpression                0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                FixedTopicSet                  0;	///< Optional element.
/// Vector of xsd__anyURI element refs with length 0..unbounded
    std::vector<xsd__anyURI            > TopicExpressionDialect         0;
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
class _wsnb__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    wsnb__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    wsnb__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
class _wsnb__Notify
{ public:
/// Vector of wsnb__NotificationMessageHolderType* element refs with length 1..unbounded
    std::vector<wsnb__NotificationMessageHolderType*> NotificationMessage            1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
class _wsnb__UseRaw
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
class _wsnb__Subscribe
{ public:
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnb__FilterType*                    Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnb__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Nullable pointer.
    class _wsnb__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
class _wsnb__SubscribeResponse
{ public:
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
class _wsnb__GetCurrentMessage
{ public:
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    wsnb__TopicExpressionType*           Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
class _wsnb__GetCurrentMessageResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
class _wsnb__GetMessages
{ public:
/// Element MaximumNumber of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
class _wsnb__GetMessagesResponse
{ public:
/// Vector of wsnb__NotificationMessageHolderType* element refs with length 0..unbounded
    std::vector<wsnb__NotificationMessageHolderType*> NotificationMessage            0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
class _wsnb__DestroyPullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
class _wsnb__DestroyPullPointResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
class _wsnb__CreatePullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
class _wsnb__CreatePullPointResponse
{ public:
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
class _wsnb__Renew
{ public:
/// Element TerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnb__AbsoluteOrRelativeTimeType*    TerminationTime                1;	///< Nullable pointer.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
class _wsnb__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
class _wsnb__Unsubscribe
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
class _wsnb__UnsubscribeResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
class _wsnb__PauseSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
class _wsnb__PauseSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
class _wsnb__ResumeSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
class _wsnb__ResumeSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
class wsrfbf__BaseFaultType : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__BaseFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__BaseFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__BaseFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
class wstop__Documentation : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
class wstop__ExtensibleDocumented : public xsd__anyType
{ public:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
class wstop__QueryExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__VideoSource : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onv__VideoResolution*                Resolution                     1;	///< Required element.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    onv__ImagingSettings*                Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    onv__VideoSourceExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__AudioSource : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Channels of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoSourceConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  SourceToken                    1;	///< Required element.
/// Element Bounds of type "http://www.onvif.org/ver10/schema":IntRectangle.
    onv__IntRectangle*                   Bounds                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoEncoderConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum onv__VideoEncoding              Encoding                       1;	///< Required element.
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onv__VideoResolution*                Resolution                     1;	///< Required element.
/// Element Quality of type xs:float.
    float                                Quality                        1;	///< Required element.
/// Element RateControl of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    onv__VideoRateControl*               RateControl                    0;	///< Optional element.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    onv__Mpeg4Configuration*             MPEG4                          0;	///< Optional element.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Configuration.
    onv__H264Configuration*              H264                           0;	///< Optional element.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      1;	///< Required element.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AudioSourceConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  SourceToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__AudioEncoderConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onv__AudioEncoding              Encoding                       1;	///< Required element.
/// Element Bitrate of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// Element SampleRate of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      1;	///< Required element.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__VideoAnalyticsConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    onv__AnalyticsEngineConfiguration*   AnalyticsEngineConfiguration   1;	///< Required element.
/// Element RuleEngineConfiguration of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    onv__RuleEngineConfiguration*        RuleEngineConfiguration        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__MetadataConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZFilter.
    onv__PTZFilter*                      PTZStatus                      0;	///< Optional element.
/// Element Events of type "http://www.onvif.org/ver10/schema":EventSubscription.
    onv__EventSubscription*              Events                         0;	///< Optional element.
/// Element Analytics of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onv__MulticastConfiguration*         Multicast                      1;	///< Required element.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__NetworkInterface : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element Info of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    onv__NetworkInterfaceInfo*           Info                           0;	///< Optional element.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    onv__NetworkInterfaceLink*           Link                           0;	///< Optional element.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    onv__IPv4NetworkInterface*           IPv4                           0;	///< Optional element.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    onv__IPv6NetworkInterface*           IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    onv__NetworkInterfaceExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__RelayOutput : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    onv__RelayOutputSettings*            Properties                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onv__PTZNode : public onv__DeviceEntity
{ public:
/*  INHERITED FROM onv__DeviceEntity:
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__DeviceEntity */
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name*                           Name                           0;	///< Optional element.
/// Element SupportedPTZSpaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    onv__PTZSpaces*                      SupportedPTZSpaces             1;	///< Required element.
/// Element MaximumNumberOfPresets of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// Element HomeSupported of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// Vector of onv__AuxiliaryData with length 0..unbounded
    std::vector<onv__AuxiliaryData     > AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    onv__PTZNodeExtension*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onv__PTZConfiguration : public onv__ConfigurationEntity
{ public:
/*  INHERITED FROM onv__ConfigurationEntity:
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onv__Name                            Name                           1;	///< Required element.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onv__ReferenceToken                  token                          1;	///< Required attribute.
    END OF INHERITED FROM onv__ConfigurationEntity */
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onv__ReferenceToken                  NodeToken                      1;	///< Required element.
/// Element DefaultAbsolutePantTiltPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// Element DefaultAbsoluteZoomPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// Element DefaultRelativePanTiltTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// Element DefaultRelativeZoomTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// Element DefaultContinuousPanTiltVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// Element DefaultContinuousZoomVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// Element DefaultPTZSpeed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onv__PTZSpeed*                       DefaultPTZSpeed                0;	///< Optional element.
/// Element DefaultPTZTimeout of type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// Element PanTiltLimits of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    onv__PanTiltLimits*                  PanTiltLimits                  0;	///< Optional element.
/// Element ZoomLimits of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    onv__ZoomLimits*                     ZoomLimits                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    onv__PTZConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ObjectId.
class onv__Object : public onv__ObjectId
{ public:
/*  INHERITED FROM onv__ObjectId:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
    END OF INHERITED FROM onv__ObjectId */
/// Element Appearance of type "http://www.onvif.org/ver10/schema":Appearance.
    onv__Appearance*                     Appearance                     0;	///< Optional element.
/// Element Behaviour of type "http://www.onvif.org/ver10/schema":Behaviour.
    onv__Behaviour*                      Behaviour                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectExtension.
    onv__ObjectExtension*                Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__SubscribeCreationFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidFilterFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidFilterFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidFilterFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidFilterFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 1..unbounded
    std::vector<xsd__QName             > UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__TopicExpressionDialectUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidTopicExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__TopicNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__TopicNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__TopicNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__MultipleTopicsSpecifiedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidProducerPropertiesExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__InvalidMessageContentExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnrecognizedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnsupportedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__NotifyMessageNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnacceptableInitialTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__NoCurrentMessageOnTopicFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToGetMessagesFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToGetMessagesFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToGetMessagesFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToDestroyPullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToCreatePullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnacceptableTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__UnableToDestroySubscriptionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__PauseFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__PauseFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__PauseFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__PauseFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class wsnb__ResumeFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__ResumeFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Size of Description array is 0..unbounded
   $int                                  __sizeDescription              0;
    class _wsrfbf__ResumeFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }                                   *Description                    0;
    class _wsrfbf__ResumeFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Size of Topic array is 0..unbounded
   $int                                  __sizeTopic                    0;
    class _wstop__TopicNamespaceType_Topic
    {
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* with length 0..unbounded
    std::vector<wstop__TopicType*      > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    std::string                                                        
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute parent of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
    }                                   *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute targetNamespace of type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* with length 0..unbounded
    std::vector<wstop__TopicType*      > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    std::string                                                        
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class wstop__TopicSetType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/analytics/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of type "http://www.onvif.org/ver10/schema":MetadataStream.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	RuleEngineBinding 
//gsoap ns1  service type:	RuleEnginePort 
//gsoap ns1  service namespace:	http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns2  service name:	AnalyticsEngineBinding 
//gsoap ns2  service type:	AnalyticsEnginePort 
//gsoap ns2  service namespace:	http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref RuleEngineBinding

  - @ref AnalyticsEngineBinding

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page RuleEngineBinding Binding "RuleEngineBinding"

@section RuleEngineBinding_operations Operations of Binding  "RuleEngineBinding"

  - @ref __ns1__GetSupportedRules

  - @ref __ns1__CreateRules

  - @ref __ns1__DeleteRules

  - @ref __ns1__GetRules

  - @ref __ns1__ModifyRules

@section RuleEngineBinding_ports Endpoints of Binding  "RuleEngineBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page AnalyticsEngineBinding Binding "AnalyticsEngineBinding"

@section AnalyticsEngineBinding_operations Operations of Binding  "AnalyticsEngineBinding"

  - @ref __ns2__GetSupportedAnalyticsModules

  - @ref __ns2__CreateAnalyticsModules

  - @ref __ns2__DeleteAnalyticsModules

  - @ref __ns2__GetAnalyticsModules

  - @ref __ns2__ModifyAnalyticsModules

@section AnalyticsEngineBinding_ports Endpoints of Binding  "AnalyticsEngineBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RuleEngineBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetSupportedRules                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetSupportedRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetSupportedRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetSupportedRules*            tan__GetSupportedRules,
    // response parameters:
    _tan__GetSupportedRulesResponse*    tan__GetSupportedRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetSupportedRules(
    struct soap *soap,
    // request parameters:
    _tan__GetSupportedRules*            tan__GetSupportedRules,
    // response parameters:
    _tan__GetSupportedRulesResponse*    tan__GetSupportedRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetSupportedRules document
//gsoap ns1  service method-encoding:	GetSupportedRules literal
//gsoap ns1  service method-action:	GetSupportedRules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules
int __ns1__GetSupportedRules(
    _tan__GetSupportedRules*            tan__GetSupportedRules,	///< Request parameter
    _tan__GetSupportedRulesResponse*    tan__GetSupportedRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__CreateRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__CreateRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/CreateRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__CreateRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__CreateRules*                  tan__CreateRules,
    // response parameters:
    _tan__CreateRulesResponse*          tan__CreateRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__CreateRules(
    struct soap *soap,
    // request parameters:
    _tan__CreateRules*                  tan__CreateRules,
    // response parameters:
    _tan__CreateRulesResponse*          tan__CreateRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	CreateRules document
//gsoap ns1  service method-encoding:	CreateRules literal
//gsoap ns1  service method-action:	CreateRules http://www.onvif.org/ver20/analytics/wsdl/CreateRules
int __ns1__CreateRules(
    _tan__CreateRules*                  tan__CreateRules,	///< Request parameter
    _tan__CreateRulesResponse*          tan__CreateRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DeleteRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DeleteRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/DeleteRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DeleteRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__DeleteRules*                  tan__DeleteRules,
    // response parameters:
    _tan__DeleteRulesResponse*          tan__DeleteRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DeleteRules(
    struct soap *soap,
    // request parameters:
    _tan__DeleteRules*                  tan__DeleteRules,
    // response parameters:
    _tan__DeleteRulesResponse*          tan__DeleteRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	DeleteRules document
//gsoap ns1  service method-encoding:	DeleteRules literal
//gsoap ns1  service method-action:	DeleteRules http://www.onvif.org/ver20/analytics/wsdl/DeleteRules
int __ns1__DeleteRules(
    _tan__DeleteRules*                  tan__DeleteRules,	///< Request parameter
    _tan__DeleteRulesResponse*          tan__DeleteRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetRules                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetRules*                     tan__GetRules,
    // response parameters:
    _tan__GetRulesResponse*             tan__GetRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetRules(
    struct soap *soap,
    // request parameters:
    _tan__GetRules*                     tan__GetRules,
    // response parameters:
    _tan__GetRulesResponse*             tan__GetRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetRules document
//gsoap ns1  service method-encoding:	GetRules literal
//gsoap ns1  service method-action:	GetRules http://www.onvif.org/ver20/analytics/wsdl/GetRules
int __ns1__GetRules(
    _tan__GetRules*                     tan__GetRules,	///< Request parameter
    _tan__GetRulesResponse*             tan__GetRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__ModifyRules                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ModifyRules" of service binding "RuleEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/ModifyRules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ModifyRules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__ModifyRules*                  tan__ModifyRules,
    // response parameters:
    _tan__ModifyRulesResponse*          tan__ModifyRulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ModifyRules(
    struct soap *soap,
    // request parameters:
    _tan__ModifyRules*                  tan__ModifyRules,
    // response parameters:
    _tan__ModifyRulesResponse*          tan__ModifyRulesResponse
  );
@endcode

C++ proxy class (defined in soapRuleEngineBindingProxy.h):
@code
  class RuleEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapRuleEngineBindingService.h):
@code
  class RuleEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	ModifyRules document
//gsoap ns1  service method-encoding:	ModifyRules literal
//gsoap ns1  service method-action:	ModifyRules http://www.onvif.org/ver20/analytics/wsdl/ModifyRules
int __ns1__ModifyRules(
    _tan__ModifyRules*                  tan__ModifyRules,	///< Request parameter
    _tan__ModifyRulesResponse*          tan__ModifyRulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AnalyticsEngineBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetSupportedAnalyticsModules                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__GetSupportedAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetSupportedAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // response parameters:
    _tan__GetSupportedAnalyticsModulesResponse* tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetSupportedAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,
    // response parameters:
    _tan__GetSupportedAnalyticsModulesResponse* tan__GetSupportedAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	GetSupportedAnalyticsModules document
//gsoap ns2  service method-encoding:	GetSupportedAnalyticsModules literal
//gsoap ns2  service method-action:	GetSupportedAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules
int __ns2__GetSupportedAnalyticsModules(
    _tan__GetSupportedAnalyticsModules* tan__GetSupportedAnalyticsModules,	///< Request parameter
    _tan__GetSupportedAnalyticsModulesResponse* tan__GetSupportedAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__CreateAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__CreateAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__CreateAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,
    // response parameters:
    _tan__CreateAnalyticsModulesResponse* tan__CreateAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__CreateAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,
    // response parameters:
    _tan__CreateAnalyticsModulesResponse* tan__CreateAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	CreateAnalyticsModules document
//gsoap ns2  service method-encoding:	CreateAnalyticsModules literal
//gsoap ns2  service method-action:	CreateAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules
int __ns2__CreateAnalyticsModules(
    _tan__CreateAnalyticsModules*       tan__CreateAnalyticsModules,	///< Request parameter
    _tan__CreateAnalyticsModulesResponse* tan__CreateAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__DeleteAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__DeleteAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__DeleteAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,
    // response parameters:
    _tan__DeleteAnalyticsModulesResponse* tan__DeleteAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__DeleteAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,
    // response parameters:
    _tan__DeleteAnalyticsModulesResponse* tan__DeleteAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	DeleteAnalyticsModules document
//gsoap ns2  service method-encoding:	DeleteAnalyticsModules literal
//gsoap ns2  service method-action:	DeleteAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules
int __ns2__DeleteAnalyticsModules(
    _tan__DeleteAnalyticsModules*       tan__DeleteAnalyticsModules,	///< Request parameter
    _tan__DeleteAnalyticsModulesResponse* tan__DeleteAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__GetAnalyticsModules                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__GetAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,
    // response parameters:
    _tan__GetAnalyticsModulesResponse*  tan__GetAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,
    // response parameters:
    _tan__GetAnalyticsModulesResponse*  tan__GetAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	GetAnalyticsModules document
//gsoap ns2  service method-encoding:	GetAnalyticsModules literal
//gsoap ns2  service method-action:	GetAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules
int __ns2__GetAnalyticsModules(
    _tan__GetAnalyticsModules*          tan__GetAnalyticsModules,	///< Request parameter
    _tan__GetAnalyticsModulesResponse*  tan__GetAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__ModifyAnalyticsModules                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ModifyAnalyticsModules" of service binding "AnalyticsEngineBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ModifyAnalyticsModules(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,
    // response parameters:
    _tan__ModifyAnalyticsModulesResponse* tan__ModifyAnalyticsModulesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ModifyAnalyticsModules(
    struct soap *soap,
    // request parameters:
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,
    // response parameters:
    _tan__ModifyAnalyticsModulesResponse* tan__ModifyAnalyticsModulesResponse
  );
@endcode

C++ proxy class (defined in soapAnalyticsEngineBindingProxy.h):
@code
  class AnalyticsEngineBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapAnalyticsEngineBindingService.h):
@code
  class AnalyticsEngineBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	ModifyAnalyticsModules document
//gsoap ns2  service method-encoding:	ModifyAnalyticsModules literal
//gsoap ns2  service method-action:	ModifyAnalyticsModules http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules
int __ns2__ModifyAnalyticsModules(
    _tan__ModifyAnalyticsModules*       tan__ModifyAnalyticsModules,	///< Request parameter
    _tan__ModifyAnalyticsModulesResponse* tan__ModifyAnalyticsModulesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section tan Top-level root elements of schema "http://www.onvif.org/ver20/analytics/wsdl"

  - <tan:GetSupportedRules> @ref _tan__GetSupportedRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRules(struct soap*, _tan__GetSupportedRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRules(struct soap*, _tan__GetSupportedRules*);
    @endcode

  - <tan:GetSupportedRulesResponse> @ref _tan__GetSupportedRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedRulesResponse(struct soap*, _tan__GetSupportedRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedRulesResponse(struct soap*, _tan__GetSupportedRulesResponse*);
    @endcode

  - <tan:CreateRules> @ref _tan__CreateRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRules(struct soap*, _tan__CreateRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRules(struct soap*, _tan__CreateRules*);
    @endcode

  - <tan:CreateRulesResponse> @ref _tan__CreateRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateRulesResponse(struct soap*, _tan__CreateRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateRulesResponse(struct soap*, _tan__CreateRulesResponse*);
    @endcode

  - <tan:DeleteRules> @ref _tan__DeleteRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRules(struct soap*, _tan__DeleteRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRules(struct soap*, _tan__DeleteRules*);
    @endcode

  - <tan:DeleteRulesResponse> @ref _tan__DeleteRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteRulesResponse(struct soap*, _tan__DeleteRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteRulesResponse(struct soap*, _tan__DeleteRulesResponse*);
    @endcode

  - <tan:ModifyRules> @ref _tan__ModifyRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRules(struct soap*, _tan__ModifyRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRules(struct soap*, _tan__ModifyRules*);
    @endcode

  - <tan:ModifyRulesResponse> @ref _tan__ModifyRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyRulesResponse(struct soap*, _tan__ModifyRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyRulesResponse(struct soap*, _tan__ModifyRulesResponse*);
    @endcode

  - <tan:GetRules> @ref _tan__GetRules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRules(struct soap*, _tan__GetRules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRules(struct soap*, _tan__GetRules*);
    @endcode

  - <tan:GetRulesResponse> @ref _tan__GetRulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetRulesResponse(struct soap*, _tan__GetRulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetRulesResponse(struct soap*, _tan__GetRulesResponse*);
    @endcode

  - <tan:GetSupportedAnalyticsModules> @ref _tan__GetSupportedAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModules(struct soap*, _tan__GetSupportedAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModules(struct soap*, _tan__GetSupportedAnalyticsModules*);
    @endcode

  - <tan:GetSupportedAnalyticsModulesResponse> @ref _tan__GetSupportedAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetSupportedAnalyticsModulesResponse(struct soap*, _tan__GetSupportedAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetSupportedAnalyticsModulesResponse(struct soap*, _tan__GetSupportedAnalyticsModulesResponse*);
    @endcode

  - <tan:CreateAnalyticsModules> @ref _tan__CreateAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModules(struct soap*, _tan__CreateAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModules(struct soap*, _tan__CreateAnalyticsModules*);
    @endcode

  - <tan:CreateAnalyticsModulesResponse> @ref _tan__CreateAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__CreateAnalyticsModulesResponse(struct soap*, _tan__CreateAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__CreateAnalyticsModulesResponse(struct soap*, _tan__CreateAnalyticsModulesResponse*);
    @endcode

  - <tan:DeleteAnalyticsModules> @ref _tan__DeleteAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModules(struct soap*, _tan__DeleteAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModules(struct soap*, _tan__DeleteAnalyticsModules*);
    @endcode

  - <tan:DeleteAnalyticsModulesResponse> @ref _tan__DeleteAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__DeleteAnalyticsModulesResponse(struct soap*, _tan__DeleteAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__DeleteAnalyticsModulesResponse(struct soap*, _tan__DeleteAnalyticsModulesResponse*);
    @endcode

  - <tan:ModifyAnalyticsModules> @ref _tan__ModifyAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModules(struct soap*, _tan__ModifyAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModules(struct soap*, _tan__ModifyAnalyticsModules*);
    @endcode

  - <tan:ModifyAnalyticsModulesResponse> @ref _tan__ModifyAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__ModifyAnalyticsModulesResponse(struct soap*, _tan__ModifyAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__ModifyAnalyticsModulesResponse(struct soap*, _tan__ModifyAnalyticsModulesResponse*);
    @endcode

  - <tan:GetAnalyticsModules> @ref _tan__GetAnalyticsModules
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModules(struct soap*, _tan__GetAnalyticsModules*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModules(struct soap*, _tan__GetAnalyticsModules*);
    @endcode

  - <tan:GetAnalyticsModulesResponse> @ref _tan__GetAnalyticsModulesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tan__GetAnalyticsModulesResponse(struct soap*, _tan__GetAnalyticsModulesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tan__GetAnalyticsModulesResponse(struct soap*, _tan__GetAnalyticsModulesResponse*);
    @endcode

@section onv Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <onv:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <onv:Message> @ref _onv__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onv__Message(struct soap*, _onv__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__onv__Message(struct soap*, _onv__Message*);
    @endcode

  - <onv:Polygon> (use wsdl2h option -g to auto-generate)

  - <onv:Polyline> (use wsdl2h option -g to auto-generate)

  - <onv:MetadataStream> (use wsdl2h option -g to auto-generate)

@section wsnb Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnb:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <wsnb:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <wsnb:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <wsnb:NotificationProducerRP> @ref _wsnb__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__NotificationProducerRP(struct soap*, _wsnb__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__NotificationProducerRP(struct soap*, _wsnb__NotificationProducerRP*);
    @endcode

  - <wsnb:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <wsnb:Filter> (use wsdl2h option -g to auto-generate)

  - <wsnb:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <wsnb:CreationTime> (use wsdl2h option -g to auto-generate)

  - <wsnb:SubscriptionManagerRP> @ref _wsnb__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__SubscriptionManagerRP(struct soap*, _wsnb__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__SubscriptionManagerRP(struct soap*, _wsnb__SubscriptionManagerRP*);
    @endcode

  - <wsnb:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <wsnb:Topic> (use wsdl2h option -g to auto-generate)

  - <wsnb:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <wsnb:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <wsnb:Notify> @ref _wsnb__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Notify(struct soap*, _wsnb__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Notify(struct soap*, _wsnb__Notify*);
    @endcode

  - <wsnb:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <wsnb:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <wsnb:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <wsnb:MessageContent> (use wsdl2h option -g to auto-generate)

  - <wsnb:UseRaw> @ref _wsnb__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__UseRaw(struct soap*, _wsnb__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__UseRaw(struct soap*, _wsnb__UseRaw*);
    @endcode

  - <wsnb:Subscribe> @ref _wsnb__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Subscribe(struct soap*, _wsnb__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Subscribe(struct soap*, _wsnb__Subscribe*);
    @endcode

  - <wsnb:SubscribeResponse> @ref _wsnb__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__SubscribeResponse(struct soap*, _wsnb__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__SubscribeResponse(struct soap*, _wsnb__SubscribeResponse*);
    @endcode

  - <wsnb:GetCurrentMessage> @ref _wsnb__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetCurrentMessage(struct soap*, _wsnb__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetCurrentMessage(struct soap*, _wsnb__GetCurrentMessage*);
    @endcode

  - <wsnb:GetCurrentMessageResponse> @ref _wsnb__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetCurrentMessageResponse(struct soap*, _wsnb__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetCurrentMessageResponse(struct soap*, _wsnb__GetCurrentMessageResponse*);
    @endcode

  - <wsnb:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:GetMessages> @ref _wsnb__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetMessages(struct soap*, _wsnb__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetMessages(struct soap*, _wsnb__GetMessages*);
    @endcode

  - <wsnb:GetMessagesResponse> @ref _wsnb__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__GetMessagesResponse(struct soap*, _wsnb__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__GetMessagesResponse(struct soap*, _wsnb__GetMessagesResponse*);
    @endcode

  - <wsnb:DestroyPullPoint> @ref _wsnb__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__DestroyPullPoint(struct soap*, _wsnb__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__DestroyPullPoint(struct soap*, _wsnb__DestroyPullPoint*);
    @endcode

  - <wsnb:DestroyPullPointResponse> @ref _wsnb__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__DestroyPullPointResponse(struct soap*, _wsnb__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__DestroyPullPointResponse(struct soap*, _wsnb__DestroyPullPointResponse*);
    @endcode

  - <wsnb:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:CreatePullPoint> @ref _wsnb__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__CreatePullPoint(struct soap*, _wsnb__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__CreatePullPoint(struct soap*, _wsnb__CreatePullPoint*);
    @endcode

  - <wsnb:CreatePullPointResponse> @ref _wsnb__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__CreatePullPointResponse(struct soap*, _wsnb__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__CreatePullPointResponse(struct soap*, _wsnb__CreatePullPointResponse*);
    @endcode

  - <wsnb:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:Renew> @ref _wsnb__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Renew(struct soap*, _wsnb__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Renew(struct soap*, _wsnb__Renew*);
    @endcode

  - <wsnb:RenewResponse> @ref _wsnb__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__RenewResponse(struct soap*, _wsnb__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__RenewResponse(struct soap*, _wsnb__RenewResponse*);
    @endcode

  - <wsnb:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:Unsubscribe> @ref _wsnb__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__Unsubscribe(struct soap*, _wsnb__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__Unsubscribe(struct soap*, _wsnb__Unsubscribe*);
    @endcode

  - <wsnb:UnsubscribeResponse> @ref _wsnb__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__UnsubscribeResponse(struct soap*, _wsnb__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__UnsubscribeResponse(struct soap*, _wsnb__UnsubscribeResponse*);
    @endcode

  - <wsnb:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:PauseSubscription> @ref _wsnb__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__PauseSubscription(struct soap*, _wsnb__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__PauseSubscription(struct soap*, _wsnb__PauseSubscription*);
    @endcode

  - <wsnb:PauseSubscriptionResponse> @ref _wsnb__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__PauseSubscriptionResponse(struct soap*, _wsnb__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__PauseSubscriptionResponse(struct soap*, _wsnb__PauseSubscriptionResponse*);
    @endcode

  - <wsnb:ResumeSubscription> @ref _wsnb__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__ResumeSubscription(struct soap*, _wsnb__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__ResumeSubscription(struct soap*, _wsnb__ResumeSubscription*);
    @endcode

  - <wsnb:ResumeSubscriptionResponse> @ref _wsnb__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__wsnb__ResumeSubscriptionResponse(struct soap*, _wsnb__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__wsnb__ResumeSubscriptionResponse(struct soap*, _wsnb__ResumeSubscriptionResponse*);
    @endcode

  - <wsnb:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <wsnb:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate)

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate)

*/

/* End of ../../libonvif/analytics.h */
